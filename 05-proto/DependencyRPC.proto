syntax = "proto3";

import "Base.proto";
import "Task.proto";
import "Input.proto";
import "Statistic.proto";
import "Dependency.proto";

package dra;

// The DependencyRPC service definition.
service DependencyRPC {

    // DRA and syz-manager
    rpc GetVMOffsets (Empty) returns (Empty) {
    }
    rpc SendNumberBasicBlock (Empty) returns (Empty) {
    }
    rpc SendNumberBasicBlockCovered (Empty) returns (Empty) {
    }
    rpc GetNewInput (Empty) returns (Inputs) {
    }
    rpc SendDependency (Dependency) returns (Empty) {
    }
    rpc GetCondition (Empty) returns (Conditions) {
    }
    rpc SendWriteAddress (WriteAddresses) returns (Empty) {
    }

    //syz-fuzzer and syz-manager
    rpc Connect (Empty) returns (Empty) {
    }
    rpc GetDataDependency (Empty) returns (DataDependency) {
    }
    rpc SendNewInput (Input) returns (Empty) {
    }
    rpc GetTasks (Empty) returns (Tasks) {
    }
    rpc GetBootTasks (Empty) returns (Tasks) {
    }
    rpc ReturnTasks (Tasks) returns (Empty) {
    }
    rpc SendBootInput (Input) returns (Empty) {
    }
    rpc SendUnstableInput (UnstableInput) returns (Empty) {
    }
    rpc SendLog (Empty) returns (Empty) {
    }
    rpc sendStat (Statistic) returns (Empty) {
    }
    rpc GetNeed (Empty) returns (Empty) {
    }
    rpc SendNeedInput (Input) returns (Empty) {
    }
}

message DataDependency {
    map<string, Input> input = 1;
    map<uint32, UncoveredAddress> uncovered_address = 4;
    map<uint32, WriteAddress> write_address = 5;
    map<string, Input> other_input = 11;
}

message DataResult {
    map<uint32, UncoveredAddress> covered_address = 2;
    map<string, FileOperations> file_operations = 6;
}

message DataRunTime {
    Tasks tasks = 11;
    Tasks return = 12;
    Tasks high_task = 13;
    Tasks boot_task = 20;
    Tasks return_boot = 21;
}