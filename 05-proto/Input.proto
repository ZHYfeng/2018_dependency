syntax = "proto3";

package dra;

enum FuzzingStat {
    StatGenerate = 0;
    StatFuzz = 1;
    StatCandidate = 2;
    StatTriage = 3;
    StatMinimize = 4;
    StatSmash = 5;
    StatHint = 6;
    StatSeed = 7;
    StatDependency = 8;
    StatDependencyBoot = 9;

    StatDefault = -1;
}

message Call {
    uint32 idx = 1;
    map<uint32, uint32> address = 2;
    //    repeated uint32 address = 2;
}

message Input {
    // for program
    string sig = 11; // hash value for each input from syzkaller
    bytes program = 12;
    map<uint32, Call> call = 13;

    uint32 stable = 14; // whether the input is stable

    repeated Paths paths = 16; // different paths if unstable
    uint32 number_conditions = 17;
    uint32 number_conditions_dependency = 18;

    // for dependency
    FuzzingStat stat = 21;
    // uncovered address, index by bits
    map<uint32, uint32> uncovered_address = 22;
    // write address, index by bits
    map<uint32, uint32> write_address = 25;

    bytes program_before_mini = 30;

}

message Inputs {
    // map<string, Input> input = 1;
    repeated Input input = 1;
}


message Path {
    repeated uint32 address = 1;
}

message Paths {
    map<uint32, Path> path = 1;
}

message UnstableInput {
    string sig = 1; // hash value for each input from syzkaller
    bytes program = 2;

    repeated Paths unstable_path = 12;
    // address, index by bits
    map<uint32, uint32> address = 13;
}

message UnstableInputs {
    map<string, UnstableInput> unstable_input = 1;
}