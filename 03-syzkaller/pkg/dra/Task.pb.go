// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Task.proto

package dra

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskStatus int32

const (
	TaskStatus_untested               TaskStatus = 0
	TaskStatus_testing                TaskStatus = 1
	TaskStatus_not_find_input         TaskStatus = -5
	TaskStatus_not_find_write_address TaskStatus = -4
	TaskStatus_not_find_write_input   TaskStatus = -3
	TaskStatus_unstable_write         TaskStatus = 11
	TaskStatus_unstable_condition     TaskStatus = 12
	TaskStatus_unstable_insert        TaskStatus = 13
	TaskStatus_unstable               TaskStatus = 14
	TaskStatus_tested                 TaskStatus = 21
	TaskStatus_covered                TaskStatus = 22
	TaskStatus_recursive              TaskStatus = 31
	TaskStatus_out                    TaskStatus = 32
)

var TaskStatus_name = map[int32]string{
	0:  "untested",
	1:  "testing",
	-5: "not_find_input",
	-4: "not_find_write_address",
	-3: "not_find_write_input",
	11: "unstable_write",
	12: "unstable_condition",
	13: "unstable_insert",
	14: "unstable",
	21: "tested",
	22: "covered",
	31: "recursive",
	32: "out",
}

var TaskStatus_value = map[string]int32{
	"untested":               0,
	"testing":                1,
	"not_find_input":         -5,
	"not_find_write_address": -4,
	"not_find_write_input":   -3,
	"unstable_write":         11,
	"unstable_condition":     12,
	"unstable_insert":        13,
	"unstable":               14,
	"tested":                 21,
	"covered":                22,
	"recursive":              31,
	"out":                    32,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a858d6d322f9aa57, []int{0}
}

type TaskKind int32

const (
	TaskKind_Normal TaskKind = 0
	TaskKind_High   TaskKind = 1
	TaskKind_Boot   TaskKind = 2
)

var TaskKind_name = map[int32]string{
	0: "Normal",
	1: "High",
	2: "Boot",
}

var TaskKind_value = map[string]int32{
	"Normal": 0,
	"High":   1,
	"Boot":   2,
}

func (x TaskKind) String() string {
	return proto.EnumName(TaskKind_name, int32(x))
}

func (TaskKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a858d6d322f9aa57, []int{1}
}

type RunTimeData struct {
	Priority                uint32     `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	WriteAddress            uint32     `protobuf:"varint,2,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	ConditionAddress        uint32     `protobuf:"varint,3,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	Address                 uint32     `protobuf:"varint,4,opt,name=address,proto3" json:"address,omitempty"`
	RightBranchAddress      []uint32   `protobuf:"varint,6,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	TaskStatus              TaskStatus `protobuf:"varint,10,opt,name=task_status,json=taskStatus,proto3,enum=dra.TaskStatus" json:"task_status,omitempty"`
	Program                 []byte     `protobuf:"bytes,12,opt,name=program,proto3" json:"program,omitempty"`
	Idx                     uint32     `protobuf:"varint,13,opt,name=idx,proto3" json:"idx,omitempty"`
	RecursiveCount          uint32     `protobuf:"varint,14,opt,name=recursive_count,json=recursiveCount,proto3" json:"recursive_count,omitempty"`
	CheckWrite              bool       `protobuf:"varint,20,opt,name=checkWrite,proto3" json:"checkWrite,omitempty"`
	CheckCondition          bool       `protobuf:"varint,21,opt,name=checkCondition,proto3" json:"checkCondition,omitempty"`
	CheckAddress            bool       `protobuf:"varint,22,opt,name=checkAddress,proto3" json:"checkAddress,omitempty"`
	CheckRightBranchAddress bool       `protobuf:"varint,23,opt,name=checkRightBranchAddress,proto3" json:"checkRightBranchAddress,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}   `json:"-"`
	XXX_unrecognized        []byte     `json:"-"`
	XXX_sizecache           int32      `json:"-"`
}

func (m *RunTimeData) Reset()         { *m = RunTimeData{} }
func (m *RunTimeData) String() string { return proto.CompactTextString(m) }
func (*RunTimeData) ProtoMessage()    {}
func (*RunTimeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a858d6d322f9aa57, []int{0}
}

func (m *RunTimeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTimeData.Unmarshal(m, b)
}
func (m *RunTimeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTimeData.Marshal(b, m, deterministic)
}
func (m *RunTimeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTimeData.Merge(m, src)
}
func (m *RunTimeData) XXX_Size() int {
	return xxx_messageInfo_RunTimeData.Size(m)
}
func (m *RunTimeData) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTimeData.DiscardUnknown(m)
}

var xxx_messageInfo_RunTimeData proto.InternalMessageInfo

func (m *RunTimeData) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *RunTimeData) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *RunTimeData) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *RunTimeData) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *RunTimeData) GetRightBranchAddress() []uint32 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

func (m *RunTimeData) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_untested
}

func (m *RunTimeData) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *RunTimeData) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *RunTimeData) GetRecursiveCount() uint32 {
	if m != nil {
		return m.RecursiveCount
	}
	return 0
}

func (m *RunTimeData) GetCheckWrite() bool {
	if m != nil {
		return m.CheckWrite
	}
	return false
}

func (m *RunTimeData) GetCheckCondition() bool {
	if m != nil {
		return m.CheckCondition
	}
	return false
}

func (m *RunTimeData) GetCheckAddress() bool {
	if m != nil {
		return m.CheckAddress
	}
	return false
}

func (m *RunTimeData) GetCheckRightBranchAddress() bool {
	if m != nil {
		return m.CheckRightBranchAddress
	}
	return false
}

type TaskRunTimeData struct {
	Hash                 string                  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Program              []byte                  `protobuf:"bytes,2,opt,name=program,proto3" json:"program,omitempty"`
	WriteIdx             uint32                  `protobuf:"varint,5,opt,name=write_idx,json=writeIdx,proto3" json:"write_idx,omitempty"`
	ConditionIdx         uint32                  `protobuf:"varint,6,opt,name=condition_idx,json=conditionIdx,proto3" json:"condition_idx,omitempty"`
	Check                bool                    `protobuf:"varint,10,opt,name=check,proto3" json:"check,omitempty"`
	UncoveredAddress     map[uint32]*RunTimeData `protobuf:"bytes,21,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress       map[uint32]*RunTimeData `protobuf:"bytes,23,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TaskRunTimeData) Reset()         { *m = TaskRunTimeData{} }
func (m *TaskRunTimeData) String() string { return proto.CompactTextString(m) }
func (*TaskRunTimeData) ProtoMessage()    {}
func (*TaskRunTimeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a858d6d322f9aa57, []int{1}
}

func (m *TaskRunTimeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRunTimeData.Unmarshal(m, b)
}
func (m *TaskRunTimeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRunTimeData.Marshal(b, m, deterministic)
}
func (m *TaskRunTimeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRunTimeData.Merge(m, src)
}
func (m *TaskRunTimeData) XXX_Size() int {
	return xxx_messageInfo_TaskRunTimeData.Size(m)
}
func (m *TaskRunTimeData) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRunTimeData.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRunTimeData proto.InternalMessageInfo

func (m *TaskRunTimeData) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TaskRunTimeData) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *TaskRunTimeData) GetWriteIdx() uint32 {
	if m != nil {
		return m.WriteIdx
	}
	return 0
}

func (m *TaskRunTimeData) GetConditionIdx() uint32 {
	if m != nil {
		return m.ConditionIdx
	}
	return 0
}

func (m *TaskRunTimeData) GetCheck() bool {
	if m != nil {
		return m.Check
	}
	return false
}

func (m *TaskRunTimeData) GetUncoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *TaskRunTimeData) GetCoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

type Task struct {
	Sig     string `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	Index   uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Program []byte `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	// 0 is undef
	// 1 is constant
	Kind         uint32     `protobuf:"varint,4,opt,name=kind,proto3" json:"kind,omitempty"`
	Priority     int32      `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Hash         string     `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	Count        uint32     `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	WriteSig     string     `protobuf:"bytes,11,opt,name=write_sig,json=writeSig,proto3" json:"write_sig,omitempty"`
	WriteIndex   uint32     `protobuf:"varint,12,opt,name=write_index,json=writeIndex,proto3" json:"write_index,omitempty"`
	WriteProgram []byte     `protobuf:"bytes,13,opt,name=write_program,json=writeProgram,proto3" json:"write_program,omitempty"`
	TaskStatus   TaskStatus `protobuf:"varint,24,opt,name=task_status,json=taskStatus,proto3,enum=dra.TaskStatus" json:"task_status,omitempty"`
	Check        bool       `protobuf:"varint,25,opt,name=check,proto3" json:"check,omitempty"`
	// uncovered address, priority
	UncoveredAddress     map[uint32]*RunTimeData `protobuf:"bytes,21,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress       map[uint32]*RunTimeData `protobuf:"bytes,23,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskRunTimeData      []*TaskRunTimeData      `protobuf:"bytes,31,rep,name=task_run_time_data,json=taskRunTimeData,proto3" json:"task_run_time_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_a858d6d322f9aa57, []int{2}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *Task) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Task) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *Task) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *Task) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Task) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Task) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Task) GetWriteSig() string {
	if m != nil {
		return m.WriteSig
	}
	return ""
}

func (m *Task) GetWriteIndex() uint32 {
	if m != nil {
		return m.WriteIndex
	}
	return 0
}

func (m *Task) GetWriteProgram() []byte {
	if m != nil {
		return m.WriteProgram
	}
	return nil
}

func (m *Task) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_untested
}

func (m *Task) GetCheck() bool {
	if m != nil {
		return m.Check
	}
	return false
}

func (m *Task) GetUncoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Task) GetCoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

func (m *Task) GetTaskRunTimeData() []*TaskRunTimeData {
	if m != nil {
		return m.TaskRunTimeData
	}
	return nil
}

type Tasks struct {
	Name                 string           `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 TaskKind         `protobuf:"varint,42,opt,name=kind,proto3,enum=dra.TaskKind" json:"kind,omitempty"`
	TaskMap              map[string]*Task `protobuf:"bytes,1,rep,name=task_map,json=taskMap,proto3" json:"task_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskArray            []*Task          `protobuf:"bytes,2,rep,name=task_array,json=taskArray,proto3" json:"task_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Tasks) Reset()         { *m = Tasks{} }
func (m *Tasks) String() string { return proto.CompactTextString(m) }
func (*Tasks) ProtoMessage()    {}
func (*Tasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_a858d6d322f9aa57, []int{3}
}

func (m *Tasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tasks.Unmarshal(m, b)
}
func (m *Tasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tasks.Marshal(b, m, deterministic)
}
func (m *Tasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tasks.Merge(m, src)
}
func (m *Tasks) XXX_Size() int {
	return xxx_messageInfo_Tasks.Size(m)
}
func (m *Tasks) XXX_DiscardUnknown() {
	xxx_messageInfo_Tasks.DiscardUnknown(m)
}

var xxx_messageInfo_Tasks proto.InternalMessageInfo

func (m *Tasks) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tasks) GetKind() TaskKind {
	if m != nil {
		return m.Kind
	}
	return TaskKind_Normal
}

func (m *Tasks) GetTaskMap() map[string]*Task {
	if m != nil {
		return m.TaskMap
	}
	return nil
}

func (m *Tasks) GetTaskArray() []*Task {
	if m != nil {
		return m.TaskArray
	}
	return nil
}

func init() {
	proto.RegisterEnum("dra.TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterEnum("dra.TaskKind", TaskKind_name, TaskKind_value)
	proto.RegisterType((*RunTimeData)(nil), "dra.runTimeData")
	proto.RegisterType((*TaskRunTimeData)(nil), "dra.TaskRunTimeData")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.TaskRunTimeData.CoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.TaskRunTimeData.UncoveredAddressEntry")
	proto.RegisterType((*Task)(nil), "dra.Task")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.Task.CoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.Task.UncoveredAddressEntry")
	proto.RegisterType((*Tasks)(nil), "dra.Tasks")
	proto.RegisterMapType((map[string]*Task)(nil), "dra.Tasks.TaskMapEntry")
}

func init() { proto.RegisterFile("Task.proto", fileDescriptor_a858d6d322f9aa57) }

var fileDescriptor_a858d6d322f9aa57 = []byte{
	// 896 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x5e, 0xc7, 0xf9, 0x3d, 0xf9, 0x9b, 0x9d, 0x4d, 0x5b, 0xd3, 0x15, 0x24, 0xdb, 0x95, 0x96,
	0x10, 0xa4, 0x0a, 0x95, 0x9b, 0x15, 0x77, 0xdd, 0xb2, 0x08, 0xc4, 0x8f, 0xc0, 0xdd, 0xd5, 0x5e,
	0x5a, 0xd3, 0x78, 0x48, 0x46, 0x69, 0xc6, 0xd1, 0x78, 0x5c, 0xda, 0x77, 0xe0, 0xe9, 0x78, 0x05,
	0x1e, 0x80, 0x1b, 0xee, 0x00, 0x81, 0xe6, 0x8c, 0x3d, 0xb1, 0x43, 0x2a, 0xf6, 0x82, 0x9b, 0xed,
	0x45, 0x75, 0xce, 0x77, 0x3e, 0x1f, 0x9f, 0x9f, 0x6f, 0xc6, 0x01, 0x78, 0xc5, 0xd2, 0xd5, 0xe9,
	0x46, 0x25, 0x3a, 0xa1, 0x7e, 0xac, 0xd8, 0xc9, 0xef, 0x3e, 0x74, 0x55, 0x26, 0x5f, 0x89, 0x35,
	0xff, 0x9c, 0x69, 0x46, 0x8f, 0xa1, 0xbd, 0x51, 0x22, 0x51, 0x42, 0xdf, 0x05, 0xde, 0xc4, 0x9b,
	0xf6, 0x43, 0xe7, 0xd3, 0xa7, 0xd0, 0xff, 0x49, 0x09, 0xcd, 0x23, 0x16, 0xc7, 0x8a, 0xa7, 0x69,
	0x50, 0x43, 0x42, 0x0f, 0xc1, 0x73, 0x8b, 0xd1, 0x8f, 0xe1, 0xe1, 0x3c, 0x91, 0xb1, 0xd0, 0x22,
	0x91, 0x8e, 0xe8, 0x23, 0x91, 0xb8, 0x40, 0x41, 0x0e, 0xa0, 0x55, 0x50, 0xea, 0x48, 0x29, 0x5c,
	0xfa, 0x09, 0x8c, 0x94, 0x58, 0x2c, 0x75, 0x74, 0xa5, 0x98, 0x9c, 0x2f, 0x5d, 0xa6, 0xe6, 0xc4,
	0x9f, 0xf6, 0x43, 0x8a, 0xb1, 0x17, 0x18, 0x3a, 0x77, 0x4f, 0x74, 0x35, 0x4b, 0x57, 0x51, 0xaa,
	0x99, 0xce, 0xd2, 0x00, 0x26, 0xde, 0x74, 0x70, 0x36, 0x3c, 0x8d, 0x15, 0x3b, 0x35, 0xf8, 0x25,
	0xc2, 0x21, 0x6c, 0x6d, 0xf3, 0xf6, 0x8d, 0x4a, 0x16, 0x8a, 0xad, 0x83, 0xde, 0xc4, 0x9b, 0xf6,
	0xc2, 0xc2, 0xa5, 0x04, 0x7c, 0x11, 0xdf, 0x06, 0x7d, 0xac, 0xc9, 0x98, 0xf4, 0x43, 0x18, 0x2a,
	0x3e, 0xcf, 0x54, 0x2a, 0x6e, 0x78, 0x34, 0x4f, 0x32, 0xa9, 0x83, 0x01, 0x46, 0x07, 0x0e, 0xbe,
	0x30, 0x28, 0xfd, 0x00, 0x60, 0xbe, 0xe4, 0xf3, 0xd5, 0x1b, 0x33, 0x94, 0x60, 0x34, 0xf1, 0xa6,
	0xed, 0xb0, 0x84, 0xd0, 0x67, 0x30, 0x40, 0xef, 0xa2, 0x98, 0x45, 0x70, 0x80, 0x9c, 0x1d, 0x94,
	0x9e, 0x40, 0x0f, 0x91, 0xbc, 0xbd, 0xe0, 0x10, 0x59, 0x15, 0x8c, 0x3e, 0x87, 0x23, 0xf4, 0xc3,
	0x7f, 0x4d, 0x23, 0x38, 0x42, 0xfa, 0x7d, 0xe1, 0x93, 0xdf, 0x7c, 0x18, 0x1a, 0x29, 0x84, 0xa5,
	0xd5, 0x53, 0xa8, 0x2f, 0x59, 0xba, 0xc4, 0xb5, 0x77, 0x42, 0xb4, 0xcb, 0x23, 0xaa, 0x55, 0x47,
	0xf4, 0x18, 0x3a, 0x56, 0x0c, 0x66, 0x50, 0x0d, 0xab, 0x14, 0x04, 0xbe, 0x8a, 0x6f, 0x8d, 0x52,
	0xb6, 0x22, 0x30, 0x84, 0xa6, 0x55, 0x8a, 0x03, 0x0d, 0x69, 0x04, 0x0d, 0x2c, 0x0f, 0x57, 0xd5,
	0x0e, 0xad, 0x43, 0xdf, 0xc0, 0xc3, 0x4c, 0xce, 0x93, 0x1b, 0xae, 0x78, 0xec, 0xb6, 0x7e, 0x30,
	0xf1, 0xa7, 0xdd, 0xb3, 0x19, 0x2e, 0x73, 0xa7, 0xec, 0xd3, 0xd7, 0x05, 0x3b, 0xef, 0xed, 0xa5,
	0xd4, 0xea, 0x2e, 0x24, 0xd9, 0x0e, 0x4c, 0x7f, 0x80, 0xe1, 0x6e, 0xda, 0x23, 0x4c, 0x3b, 0xdd,
	0x9b, 0xf6, 0x62, 0x4f, 0xd2, 0x41, 0x35, 0xe5, 0xf1, 0x6b, 0x38, 0xd8, 0xfb, 0x76, 0xa3, 0x9f,
	0x15, 0x2f, 0x0e, 0x90, 0x31, 0xe9, 0x33, 0x68, 0xdc, 0xb0, 0xeb, 0x8c, 0xe3, 0x18, 0xbb, 0x67,
	0x04, 0xdf, 0x59, 0x3a, 0x78, 0xa1, 0x0d, 0x7f, 0x56, 0x7b, 0xee, 0x1d, 0x5f, 0xc2, 0xa3, 0x8b,
	0xff, 0x3b, 0xe9, 0xc9, 0x2f, 0x0d, 0xa8, 0x9b, 0x1e, 0x4d, 0x9a, 0x54, 0x2c, 0xf2, 0x2d, 0x1b,
	0xd3, 0x2c, 0x42, 0xc8, 0x98, 0xdf, 0xe6, 0xe7, 0xd9, 0x3a, 0xe5, 0xd5, 0xfb, 0xd5, 0xd5, 0x53,
	0xa8, 0xaf, 0x84, 0x8c, 0xf3, 0x23, 0x8b, 0x76, 0xe5, 0xde, 0x30, 0x6a, 0x68, 0x94, 0xee, 0x8d,
	0x42, 0x58, 0xcd, 0x92, 0xb0, 0xcc, 0xf2, 0xf1, 0x14, 0xb5, 0xec, 0x3b, 0xd1, 0xd9, 0x8a, 0xca,
	0x54, 0xd8, 0x45, 0xba, 0x15, 0xd5, 0xa5, 0x58, 0xd0, 0x31, 0x74, 0x73, 0xc5, 0x61, 0xb1, 0x3d,
	0x7c, 0x10, 0xac, 0xe6, 0xb0, 0x62, 0x77, 0x3f, 0x15, 0x75, 0xf7, 0xb1, 0x6e, 0x7b, 0x3f, 0x7d,
	0x9f, 0x17, 0xbf, 0x73, 0x4d, 0x04, 0xff, 0x7d, 0x4d, 0x38, 0x9d, 0xbe, 0x57, 0xd6, 0xe9, 0x37,
	0xf7, 0xeb, 0x74, 0xec, 0x04, 0xf5, 0xd6, 0xe2, 0xfc, 0xe2, 0x3e, 0x71, 0xbe, 0xbf, 0xcd, 0xf5,
	0x16, 0x8a, 0xa4, 0xe7, 0x40, 0xb1, 0x3b, 0x95, 0xc9, 0x48, 0x8b, 0x35, 0x8f, 0x62, 0xa6, 0x59,
	0x30, 0xc6, 0x54, 0xa3, 0x7d, 0x3a, 0x0f, 0x87, 0xba, 0x0a, 0xbc, 0x53, 0xa2, 0xfe, 0xd5, 0x83,
	0x86, 0x69, 0x28, 0x35, 0x1a, 0x93, 0x6c, 0xcd, 0x83, 0x8f, 0xac, 0xc6, 0x8c, 0x4d, 0x9f, 0xe4,
	0x3a, 0x9d, 0xe1, 0x8e, 0xfb, 0xae, 0xfd, 0xaf, 0x85, 0x8c, 0x73, 0xd9, 0x9e, 0x41, 0x1b, 0xe7,
	0xb5, 0x66, 0x9b, 0xc0, 0xc3, 0x29, 0x1d, 0x39, 0x5a, 0x8a, 0xff, 0xbf, 0x65, 0x1b, 0x3b, 0xea,
	0x96, 0xb6, 0x1e, 0x9d, 0x02, 0xaa, 0x23, 0x62, 0x4a, 0xb1, 0xbb, 0xa0, 0x86, 0x4f, 0x75, 0xb6,
	0xb3, 0xed, 0x98, 0xe0, 0xb9, 0x89, 0x1d, 0xbf, 0x84, 0x5e, 0x39, 0x45, 0xb9, 0xd9, 0x8e, 0x6d,
	0x76, 0x5c, 0x6d, 0xb6, 0x94, 0x66, 0xdb, 0xe5, 0xec, 0xe7, 0x1a, 0x94, 0xf5, 0xd8, 0x83, 0x76,
	0x26, 0x35, 0x4f, 0x35, 0x8f, 0xc9, 0x03, 0xda, 0x85, 0x96, 0xb1, 0x85, 0x5c, 0x10, 0x8f, 0x3e,
	0x86, 0x81, 0x4c, 0x74, 0xf4, 0xa3, 0x90, 0x71, 0x24, 0xe4, 0x26, 0xd3, 0xe4, 0x8f, 0xbf, 0xf3,
	0x3f, 0x8f, 0x3e, 0x85, 0x43, 0x17, 0xac, 0x7c, 0xc7, 0xc9, 0x9f, 0x5b, 0xd2, 0x13, 0x18, 0xed,
	0x90, 0x6c, 0x9e, 0xbf, 0xb6, 0x14, 0x0a, 0x83, 0x4c, 0xa6, 0x9a, 0x5d, 0x5d, 0x73, 0x4b, 0x21,
	0x5d, 0x7a, 0x08, 0xd4, 0x61, 0xee, 0x92, 0x27, 0x3d, 0xfa, 0x08, 0x86, 0x0e, 0x17, 0x32, 0xe5,
	0x4a, 0x93, 0xbe, 0x6d, 0xc0, 0x82, 0x64, 0x40, 0x01, 0x9a, 0x79, 0x33, 0x07, 0xa6, 0x99, 0x5c,
	0x79, 0xe4, 0x90, 0xf6, 0xa1, 0xe3, 0xbe, 0xad, 0x64, 0x4c, 0x5b, 0xe0, 0x27, 0x99, 0x26, 0x93,
	0xd9, 0x0c, 0xda, 0xc5, 0x16, 0xcd, 0xc3, 0xdf, 0x25, 0x6a, 0xcd, 0xae, 0xc9, 0x03, 0xda, 0x86,
	0xfa, 0x97, 0x62, 0xb1, 0x24, 0x9e, 0xb1, 0x5e, 0x24, 0x89, 0x26, 0xb5, 0xab, 0x26, 0xfe, 0xd4,
	0xf9, 0xf4, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0x1d, 0xef, 0x57, 0xf8, 0x08, 0x00, 0x00,
}
