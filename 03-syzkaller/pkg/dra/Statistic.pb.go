// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: Statistic.proto

package dra

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Statistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           FuzzingStat `protobuf:"varint,1,opt,name=name,proto3,enum=dra.FuzzingStat" json:"name,omitempty"`
	ExecuteNum     uint64      `protobuf:"varint,11,opt,name=executeNum,proto3" json:"executeNum,omitempty"`
	Time           float64     `protobuf:"fixed64,12,opt,name=time,proto3" json:"time,omitempty"`
	NewTestCaseNum uint64      `protobuf:"varint,13,opt,name=newTestCaseNum,proto3" json:"newTestCaseNum,omitempty"`
	NewAddressNum  uint64      `protobuf:"varint,14,opt,name=newAddressNum,proto3" json:"newAddressNum,omitempty"`
}

func (x *Statistic) Reset() {
	*x = Statistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Statistic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistic) ProtoMessage() {}

func (x *Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_Statistic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistic.ProtoReflect.Descriptor instead.
func (*Statistic) Descriptor() ([]byte, []int) {
	return file_Statistic_proto_rawDescGZIP(), []int{0}
}

func (x *Statistic) GetName() FuzzingStat {
	if x != nil {
		return x.Name
	}
	return FuzzingStat_StatGenerate
}

func (x *Statistic) GetExecuteNum() uint64 {
	if x != nil {
		return x.ExecuteNum
	}
	return 0
}

func (x *Statistic) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Statistic) GetNewTestCaseNum() uint64 {
	if x != nil {
		return x.NewTestCaseNum
	}
	return 0
}

func (x *Statistic) GetNewAddressNum() uint64 {
	if x != nil {
		return x.NewAddressNum
	}
	return 0
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Num        int64   `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	ExecuteNum int64   `protobuf:"varint,3,opt,name=executeNum,proto3" json:"executeNum,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Statistic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_Statistic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_Statistic_proto_rawDescGZIP(), []int{1}
}

func (x *Time) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Time) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Time) GetExecuteNum() int64 {
	if x != nil {
		return x.ExecuteNum
	}
	return 0
}

type Coverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coverage map[uint32]uint32 `protobuf:"bytes,1,rep,name=coverage,proto3" json:"coverage,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Time     []*Time           `protobuf:"bytes,2,rep,name=time,proto3" json:"time,omitempty"`
}

func (x *Coverage) Reset() {
	*x = Coverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Statistic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coverage) ProtoMessage() {}

func (x *Coverage) ProtoReflect() protoreflect.Message {
	mi := &file_Statistic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coverage.ProtoReflect.Descriptor instead.
func (*Coverage) Descriptor() ([]byte, []int) {
	return file_Statistic_proto_rawDescGZIP(), []int{2}
}

func (x *Coverage) GetCoverage() map[uint32]uint32 {
	if x != nil {
		return x.Coverage
	}
	return nil
}

func (x *Coverage) GetTime() []*Time {
	if x != nil {
		return x.Time
	}
	return nil
}

type UsefulInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input      *Input   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Time       float64  `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`
	Num        uint64   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	NewAddress []uint32 `protobuf:"varint,4,rep,packed,name=new_address,json=newAddress,proto3" json:"new_address,omitempty"`
}

func (x *UsefulInput) Reset() {
	*x = UsefulInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Statistic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsefulInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsefulInput) ProtoMessage() {}

func (x *UsefulInput) ProtoReflect() protoreflect.Message {
	mi := &file_Statistic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsefulInput.ProtoReflect.Descriptor instead.
func (*UsefulInput) Descriptor() ([]byte, []int) {
	return file_Statistic_proto_rawDescGZIP(), []int{3}
}

func (x *UsefulInput) GetInput() *Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *UsefulInput) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UsefulInput) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UsefulInput) GetNewAddress() []uint32 {
	if x != nil {
		return x.NewAddress
	}
	return nil
}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalNum                 uint64               `protobuf:"varint,1,opt,name=signalNum,proto3" json:"signalNum,omitempty"`
	NumberBasicBlock          uint32               `protobuf:"varint,3,opt,name=number_basic_block,json=numberBasicBlock,proto3" json:"number_basic_block,omitempty"`
	NumberBasicBlockReal      uint32               `protobuf:"varint,4,opt,name=number_basic_block_real,json=numberBasicBlockReal,proto3" json:"number_basic_block_real,omitempty"`
	NumberBasicBlockCovered   uint32               `protobuf:"varint,5,opt,name=number_basic_block_covered,json=numberBasicBlockCovered,proto3" json:"number_basic_block_covered,omitempty"`
	NumberBasicBlockUncovered uint32               `protobuf:"varint,6,opt,name=number_basic_block_uncovered,json=numberBasicBlockUncovered,proto3" json:"number_basic_block_uncovered,omitempty"`
	Coverage                  *Coverage            `protobuf:"bytes,8,opt,name=coverage,proto3" json:"coverage,omitempty"`
	Stat                      map[int32]*Statistic `protobuf:"bytes,11,rep,name=stat,proto3" json:"stat,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UsefulInput               []*UsefulInput       `protobuf:"bytes,12,rep,name=useful_input,json=usefulInput,proto3" json:"useful_input,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Statistic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_Statistic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_Statistic_proto_rawDescGZIP(), []int{4}
}

func (x *Statistics) GetSignalNum() uint64 {
	if x != nil {
		return x.SignalNum
	}
	return 0
}

func (x *Statistics) GetNumberBasicBlock() uint32 {
	if x != nil {
		return x.NumberBasicBlock
	}
	return 0
}

func (x *Statistics) GetNumberBasicBlockReal() uint32 {
	if x != nil {
		return x.NumberBasicBlockReal
	}
	return 0
}

func (x *Statistics) GetNumberBasicBlockCovered() uint32 {
	if x != nil {
		return x.NumberBasicBlockCovered
	}
	return 0
}

func (x *Statistics) GetNumberBasicBlockUncovered() uint32 {
	if x != nil {
		return x.NumberBasicBlockUncovered
	}
	return 0
}

func (x *Statistics) GetCoverage() *Coverage {
	if x != nil {
		return x.Coverage
	}
	return nil
}

func (x *Statistics) GetStat() map[int32]*Statistic {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *Statistics) GetUsefulInput() []*UsefulInput {
	if x != nil {
		return x.UsefulInput
	}
	return nil
}

var File_Statistic_proto protoreflect.FileDescriptor

var file_Statistic_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x64, 0x72, 0x61, 0x1a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x64, 0x72, 0x61, 0x2e, 0x46, 0x75, 0x7a, 0x7a, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e,
	0x65, 0x77, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x22, 0x4c, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72, 0x61, 0x2e, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64, 0x72,
	0x61, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x0d,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x66, 0x75, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x72, 0x61, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xe5, 0x03, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x2c,
	0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x35, 0x0a, 0x17,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x3f, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x6e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x72, 0x61, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x72, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x64, 0x72, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x47, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x72, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x64,
	0x72, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Statistic_proto_rawDescOnce sync.Once
	file_Statistic_proto_rawDescData = file_Statistic_proto_rawDesc
)

func file_Statistic_proto_rawDescGZIP() []byte {
	file_Statistic_proto_rawDescOnce.Do(func() {
		file_Statistic_proto_rawDescData = protoimpl.X.CompressGZIP(file_Statistic_proto_rawDescData)
	})
	return file_Statistic_proto_rawDescData
}

var file_Statistic_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_Statistic_proto_goTypes = []interface{}{
	(*Statistic)(nil),   // 0: dra.Statistic
	(*Time)(nil),        // 1: dra.Time
	(*Coverage)(nil),    // 2: dra.Coverage
	(*UsefulInput)(nil), // 3: dra.UsefulInput
	(*Statistics)(nil),  // 4: dra.Statistics
	nil,                 // 5: dra.Coverage.CoverageEntry
	nil,                 // 6: dra.Statistics.StatEntry
	(FuzzingStat)(0),    // 7: dra.FuzzingStat
	(*Input)(nil),       // 8: dra.Input
}
var file_Statistic_proto_depIdxs = []int32{
	7, // 0: dra.Statistic.name:type_name -> dra.FuzzingStat
	5, // 1: dra.Coverage.coverage:type_name -> dra.Coverage.CoverageEntry
	1, // 2: dra.Coverage.time:type_name -> dra.Time
	8, // 3: dra.UsefulInput.input:type_name -> dra.Input
	2, // 4: dra.Statistics.coverage:type_name -> dra.Coverage
	6, // 5: dra.Statistics.stat:type_name -> dra.Statistics.StatEntry
	3, // 6: dra.Statistics.useful_input:type_name -> dra.UsefulInput
	0, // 7: dra.Statistics.StatEntry.value:type_name -> dra.Statistic
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_Statistic_proto_init() }
func file_Statistic_proto_init() {
	if File_Statistic_proto != nil {
		return
	}
	file_Input_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Statistic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Statistic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Statistic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Statistic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsefulInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Statistic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Statistic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Statistic_proto_goTypes,
		DependencyIndexes: file_Statistic_proto_depIdxs,
		MessageInfos:      file_Statistic_proto_msgTypes,
	}.Build()
	File_Statistic_proto = out.File
	file_Statistic_proto_rawDesc = nil
	file_Statistic_proto_goTypes = nil
	file_Statistic_proto_depIdxs = nil
}
