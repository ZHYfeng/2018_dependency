// Code generated by protoc-gen-go. DO NOT EDIT.
// source: DependencyRPC.proto

package dra

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskStatus int32

const (
	TaskStatus_untested  TaskStatus = 0
	TaskStatus_testing   TaskStatus = 1
	TaskStatus_unstable  TaskStatus = 2
	TaskStatus_tested    TaskStatus = 3
	TaskStatus_covered   TaskStatus = 4
	TaskStatus_recursive TaskStatus = 10
	TaskStatus_out       TaskStatus = 11
)

var TaskStatus_name = map[int32]string{
	0:  "untested",
	1:  "testing",
	2:  "unstable",
	3:  "tested",
	4:  "covered",
	10: "recursive",
	11: "out",
}

var TaskStatus_value = map[string]int32{
	"untested":  0,
	"testing":   1,
	"unstable":  2,
	"tested":    3,
	"covered":   4,
	"recursive": 10,
	"out":       11,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{0}
}

type FileOperationsKind int32

const (
	FileOperationsKind_default        FileOperationsKind = 0
	FileOperationsKind_init           FileOperationsKind = 1
	FileOperationsKind_llseek         FileOperationsKind = 2
	FileOperationsKind_read           FileOperationsKind = 3
	FileOperationsKind_write          FileOperationsKind = 4
	FileOperationsKind_poll           FileOperationsKind = 9
	FileOperationsKind_unlocked_ioctl FileOperationsKind = 10
	FileOperationsKind_mmap           FileOperationsKind = 12
	FileOperationsKind_open           FileOperationsKind = 14
	FileOperationsKind_release        FileOperationsKind = 16
)

var FileOperationsKind_name = map[int32]string{
	0:  "default",
	1:  "init",
	2:  "llseek",
	3:  "read",
	4:  "write",
	9:  "poll",
	10: "unlocked_ioctl",
	12: "mmap",
	14: "open",
	16: "release",
}

var FileOperationsKind_value = map[string]int32{
	"default":        0,
	"init":           1,
	"llseek":         2,
	"read":           3,
	"write":          4,
	"poll":           9,
	"unlocked_ioctl": 10,
	"mmap":           12,
	"open":           14,
	"release":        16,
}

func (x FileOperationsKind) String() string {
	return proto.EnumName(FileOperationsKind_name, int32(x))
}

func (FileOperationsKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{1}
}

type UncoveredAddressKind int32

const (
	UncoveredAddressKind_Outside           UncoveredAddressKind = 0
	UncoveredAddressKind_InputRelated      UncoveredAddressKind = 1
	UncoveredAddressKind_DependnecyRelated UncoveredAddressKind = 2
	UncoveredAddressKind_Other             UncoveredAddressKind = 3
)

var UncoveredAddressKind_name = map[int32]string{
	0: "Outside",
	1: "InputRelated",
	2: "DependnecyRelated",
	3: "Other",
}

var UncoveredAddressKind_value = map[string]int32{
	"Outside":           0,
	"InputRelated":      1,
	"DependnecyRelated": 2,
	"Other":             3,
}

func (x UncoveredAddressKind) String() string {
	return proto.EnumName(UncoveredAddressKind_name, int32(x))
}

func (UncoveredAddressKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{2}
}

type FuzzingStat int32

const (
	FuzzingStat_StatDefault        FuzzingStat = 0
	FuzzingStat_StatGenerate       FuzzingStat = 1
	FuzzingStat_StatFuzz           FuzzingStat = 2
	FuzzingStat_StatCandidate      FuzzingStat = 3
	FuzzingStat_StatTriage         FuzzingStat = 4
	FuzzingStat_StatMinimize       FuzzingStat = 5
	FuzzingStat_StatSmash          FuzzingStat = 6
	FuzzingStat_StatHint           FuzzingStat = 7
	FuzzingStat_StatSeed           FuzzingStat = 8
	FuzzingStat_StatDependency     FuzzingStat = 9
	FuzzingStat_StatDependencyBoot FuzzingStat = 10
)

var FuzzingStat_name = map[int32]string{
	0:  "StatDefault",
	1:  "StatGenerate",
	2:  "StatFuzz",
	3:  "StatCandidate",
	4:  "StatTriage",
	5:  "StatMinimize",
	6:  "StatSmash",
	7:  "StatHint",
	8:  "StatSeed",
	9:  "StatDependency",
	10: "StatDependencyBoot",
}

var FuzzingStat_value = map[string]int32{
	"StatDefault":        0,
	"StatGenerate":       1,
	"StatFuzz":           2,
	"StatCandidate":      3,
	"StatTriage":         4,
	"StatMinimize":       5,
	"StatSmash":          6,
	"StatHint":           7,
	"StatSeed":           8,
	"StatDependency":     9,
	"StatDependencyBoot": 10,
}

func (x FuzzingStat) String() string {
	return proto.EnumName(FuzzingStat_name, int32(x))
}

func (FuzzingStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{3}
}

type TaskKind int32

const (
	TaskKind_Normal TaskKind = 0
	TaskKind_High   TaskKind = 1
	TaskKind_Boot   TaskKind = 2
)

var TaskKind_name = map[int32]string{
	0: "Normal",
	1: "High",
	2: "Boot",
}

var TaskKind_value = map[string]int32{
	"Normal": 0,
	"High":   1,
	"Boot":   2,
}

func (x TaskKind) String() string {
	return proto.EnumName(TaskKind_name, int32(x))
}

func (TaskKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{4}
}

type Empty struct {
	Address              uint32   `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func (m *Empty) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *Empty) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Condition struct {
	ConditionAddress          uint64 `protobuf:"varint,1,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	SyzkallerConditionAddress uint32 `protobuf:"varint,2,opt,name=syzkaller_condition_address,json=syzkallerConditionAddress,proto3" json:"syzkaller_condition_address,omitempty"`
	UncoveredAddress          uint64 `protobuf:"varint,3,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	SyzkallerUncoveredAddress uint32 `protobuf:"varint,4,opt,name=syzkaller_uncovered_address,json=syzkallerUncoveredAddress,proto3" json:"syzkaller_uncovered_address,omitempty"`
	Idx                       uint32 `protobuf:"varint,5,opt,name=idx,proto3" json:"idx,omitempty"`
	Successor                 uint64 `protobuf:"varint,6,opt,name=successor,proto3" json:"successor,omitempty"`
	//    map<uint64, uint32> right_branch_address = 7;
	//    map<uint32, uint32> syzkaller_right_branch_address = 8;
	//    map<uint64, uint32> wrong_branch_address = 9;
	//    map<uint32, uint32> syzkaller_wrong_branch_address = 10;
	RightBranchAddress          []uint64 `protobuf:"varint,7,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	SyzkallerRightBranchAddress []uint32 `protobuf:"varint,8,rep,packed,name=syzkaller_right_branch_address,json=syzkallerRightBranchAddress,proto3" json:"syzkaller_right_branch_address,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{1}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetConditionAddress() uint64 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *Condition) GetSyzkallerConditionAddress() uint32 {
	if m != nil {
		return m.SyzkallerConditionAddress
	}
	return 0
}

func (m *Condition) GetUncoveredAddress() uint64 {
	if m != nil {
		return m.UncoveredAddress
	}
	return 0
}

func (m *Condition) GetSyzkallerUncoveredAddress() uint32 {
	if m != nil {
		return m.SyzkallerUncoveredAddress
	}
	return 0
}

func (m *Condition) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *Condition) GetSuccessor() uint64 {
	if m != nil {
		return m.Successor
	}
	return 0
}

func (m *Condition) GetRightBranchAddress() []uint64 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

func (m *Condition) GetSyzkallerRightBranchAddress() []uint32 {
	if m != nil {
		return m.SyzkallerRightBranchAddress
	}
	return nil
}

type Call struct {
	Idx                  uint32            `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	Address              map[uint32]uint32 `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{2}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *Call) GetAddress() map[uint32]uint32 {
	if m != nil {
		return m.Address
	}
	return nil
}

type Inputs struct {
	// map<string, Input> input = 1;
	Input                []*Input `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inputs) Reset()         { *m = Inputs{} }
func (m *Inputs) String() string { return proto.CompactTextString(m) }
func (*Inputs) ProtoMessage()    {}
func (*Inputs) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{3}
}

func (m *Inputs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inputs.Unmarshal(m, b)
}
func (m *Inputs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inputs.Marshal(b, m, deterministic)
}
func (m *Inputs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inputs.Merge(m, src)
}
func (m *Inputs) XXX_Size() int {
	return xxx_messageInfo_Inputs.Size(m)
}
func (m *Inputs) XXX_DiscardUnknown() {
	xxx_messageInfo_Inputs.DiscardUnknown(m)
}

var xxx_messageInfo_Inputs proto.InternalMessageInfo

func (m *Inputs) GetInput() []*Input {
	if m != nil {
		return m.Input
	}
	return nil
}

//for syz-fuzzer
type Dependencytask struct {
	Input                *Input   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Name                 string   `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dependencytask) Reset()         { *m = Dependencytask{} }
func (m *Dependencytask) String() string { return proto.CompactTextString(m) }
func (*Dependencytask) ProtoMessage()    {}
func (*Dependencytask) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{4}
}

func (m *Dependencytask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependencytask.Unmarshal(m, b)
}
func (m *Dependencytask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependencytask.Marshal(b, m, deterministic)
}
func (m *Dependencytask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependencytask.Merge(m, src)
}
func (m *Dependencytask) XXX_Size() int {
	return xxx_messageInfo_Dependencytask.Size(m)
}
func (m *Dependencytask) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependencytask.DiscardUnknown(m)
}

var xxx_messageInfo_Dependencytask proto.InternalMessageInfo

func (m *Dependencytask) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Dependencytask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RunTimeData struct {
	Priority                uint32     `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	ConditionAddress        uint32     `protobuf:"varint,2,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	Address                 uint32     `protobuf:"varint,4,opt,name=address,proto3" json:"address,omitempty"`
	RightBranchAddress      []uint32   `protobuf:"varint,6,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	TaskStatus              TaskStatus `protobuf:"varint,10,opt,name=task_status,json=taskStatus,proto3,enum=dra.TaskStatus" json:"task_status,omitempty"`
	Program                 []byte     `protobuf:"bytes,12,opt,name=program,proto3" json:"program,omitempty"`
	Idx                     uint32     `protobuf:"varint,13,opt,name=idx,proto3" json:"idx,omitempty"`
	RcursiveCount           uint32     `protobuf:"varint,14,opt,name=rcursive_count,json=rcursiveCount,proto3" json:"rcursive_count,omitempty"`
	CheckCondition          bool       `protobuf:"varint,21,opt,name=checkCondition,proto3" json:"checkCondition,omitempty"`
	CheckAddress            bool       `protobuf:"varint,22,opt,name=checkAddress,proto3" json:"checkAddress,omitempty"`
	CheckRightBranchAddress bool       `protobuf:"varint,23,opt,name=checkRightBranchAddress,proto3" json:"checkRightBranchAddress,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}   `json:"-"`
	XXX_unrecognized        []byte     `json:"-"`
	XXX_sizecache           int32      `json:"-"`
}

func (m *RunTimeData) Reset()         { *m = RunTimeData{} }
func (m *RunTimeData) String() string { return proto.CompactTextString(m) }
func (*RunTimeData) ProtoMessage()    {}
func (*RunTimeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{5}
}

func (m *RunTimeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTimeData.Unmarshal(m, b)
}
func (m *RunTimeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTimeData.Marshal(b, m, deterministic)
}
func (m *RunTimeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTimeData.Merge(m, src)
}
func (m *RunTimeData) XXX_Size() int {
	return xxx_messageInfo_RunTimeData.Size(m)
}
func (m *RunTimeData) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTimeData.DiscardUnknown(m)
}

var xxx_messageInfo_RunTimeData proto.InternalMessageInfo

func (m *RunTimeData) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *RunTimeData) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *RunTimeData) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *RunTimeData) GetRightBranchAddress() []uint32 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

func (m *RunTimeData) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_untested
}

func (m *RunTimeData) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *RunTimeData) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *RunTimeData) GetRcursiveCount() uint32 {
	if m != nil {
		return m.RcursiveCount
	}
	return 0
}

func (m *RunTimeData) GetCheckCondition() bool {
	if m != nil {
		return m.CheckCondition
	}
	return false
}

func (m *RunTimeData) GetCheckAddress() bool {
	if m != nil {
		return m.CheckAddress
	}
	return false
}

func (m *RunTimeData) GetCheckRightBranchAddress() bool {
	if m != nil {
		return m.CheckRightBranchAddress
	}
	return false
}

type FileOperationsFunction struct {
	Name               string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FileOperationsName string             `protobuf:"bytes,2,opt,name=file_operations_name,json=fileOperationsName,proto3" json:"file_operations_name,omitempty"`
	Kind               FileOperationsKind `protobuf:"varint,3,opt,name=kind,proto3,enum=dra.FileOperationsKind" json:"kind,omitempty"`
	Cmd                uint64             `protobuf:"varint,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	//    repeated Condition critical_condition = 4;
	//    map<uint32, Condition> critical_condition = 4;
	// it is the data of this syscall
	RunTimeDate *RunTimeData `protobuf:"bytes,5,opt,name=run_time_date,json=runTimeDate,proto3" json:"run_time_date,omitempty"`
	//    repeated WriteAddress write_address = 11;
	WriteAddress         map[uint32]uint32 `protobuf:"bytes,11,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FileOperationsFunction) Reset()         { *m = FileOperationsFunction{} }
func (m *FileOperationsFunction) String() string { return proto.CompactTextString(m) }
func (*FileOperationsFunction) ProtoMessage()    {}
func (*FileOperationsFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{6}
}

func (m *FileOperationsFunction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileOperationsFunction.Unmarshal(m, b)
}
func (m *FileOperationsFunction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileOperationsFunction.Marshal(b, m, deterministic)
}
func (m *FileOperationsFunction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileOperationsFunction.Merge(m, src)
}
func (m *FileOperationsFunction) XXX_Size() int {
	return xxx_messageInfo_FileOperationsFunction.Size(m)
}
func (m *FileOperationsFunction) XXX_DiscardUnknown() {
	xxx_messageInfo_FileOperationsFunction.DiscardUnknown(m)
}

var xxx_messageInfo_FileOperationsFunction proto.InternalMessageInfo

func (m *FileOperationsFunction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileOperationsFunction) GetFileOperationsName() string {
	if m != nil {
		return m.FileOperationsName
	}
	return ""
}

func (m *FileOperationsFunction) GetKind() FileOperationsKind {
	if m != nil {
		return m.Kind
	}
	return FileOperationsKind_default
}

func (m *FileOperationsFunction) GetCmd() uint64 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

func (m *FileOperationsFunction) GetRunTimeDate() *RunTimeData {
	if m != nil {
		return m.RunTimeDate
	}
	return nil
}

func (m *FileOperationsFunction) GetWriteAddress() map[uint32]uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type FileOperations struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//cmd or 0, function
	FileOperationsFunction map[int64]*FileOperationsFunction `protobuf:"bytes,3,rep,name=file_operations_function,json=fileOperationsFunction,proto3" json:"file_operations_function,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral   struct{}                          `json:"-"`
	XXX_unrecognized       []byte                            `json:"-"`
	XXX_sizecache          int32                             `json:"-"`
}

func (m *FileOperations) Reset()         { *m = FileOperations{} }
func (m *FileOperations) String() string { return proto.CompactTextString(m) }
func (*FileOperations) ProtoMessage()    {}
func (*FileOperations) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{7}
}

func (m *FileOperations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileOperations.Unmarshal(m, b)
}
func (m *FileOperations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileOperations.Marshal(b, m, deterministic)
}
func (m *FileOperations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileOperations.Merge(m, src)
}
func (m *FileOperations) XXX_Size() int {
	return xxx_messageInfo_FileOperations.Size(m)
}
func (m *FileOperations) XXX_DiscardUnknown() {
	xxx_messageInfo_FileOperations.DiscardUnknown(m)
}

var xxx_messageInfo_FileOperations proto.InternalMessageInfo

func (m *FileOperations) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileOperations) GetFileOperationsFunction() map[int64]*FileOperationsFunction {
	if m != nil {
		return m.FileOperationsFunction
	}
	return nil
}

type WriteAddress struct {
	// the address writes to global variable
	WriteAddress uint32 `protobuf:"varint,2,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	// the address of condition which is related to this global variable
	ConditionAddress uint32 `protobuf:"varint,3,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	//    map<uint32, Input> write_input = 4;
	//    map<uint32, Syscall> write_syscall = 5;
	//    repeated Input write_input = 4;
	//    repeated Syscall write_syscall = 5;
	// 0 is undef
	// 1 is constant
	Kind uint32 `protobuf:"varint,4,opt,name=kind,proto3" json:"kind,omitempty"`
	// uncovered address,
	UncoveredAddress map[uint32]*WriteAddressAttributes `protobuf:"bytes,23,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// file_operations name, file_operations_function index bits
	FileOperationsFunction map[string]uint32 `protobuf:"bytes,24,rep,name=file_operations_function,json=fileOperationsFunction,proto3" json:"file_operations_function,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// sig, index by bits
	Input map[string]uint32 `protobuf:"bytes,25,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// it is the data of uncovered address
	RunTimeDate          *RunTimeData `protobuf:"bytes,11,opt,name=run_time_date,json=runTimeDate,proto3" json:"run_time_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WriteAddress) Reset()         { *m = WriteAddress{} }
func (m *WriteAddress) String() string { return proto.CompactTextString(m) }
func (*WriteAddress) ProtoMessage()    {}
func (*WriteAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{8}
}

func (m *WriteAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAddress.Unmarshal(m, b)
}
func (m *WriteAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAddress.Marshal(b, m, deterministic)
}
func (m *WriteAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAddress.Merge(m, src)
}
func (m *WriteAddress) XXX_Size() int {
	return xxx_messageInfo_WriteAddress.Size(m)
}
func (m *WriteAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAddress.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAddress proto.InternalMessageInfo

func (m *WriteAddress) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *WriteAddress) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *WriteAddress) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *WriteAddress) GetUncoveredAddress() map[uint32]*WriteAddressAttributes {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *WriteAddress) GetFileOperationsFunction() map[string]uint32 {
	if m != nil {
		return m.FileOperationsFunction
	}
	return nil
}

func (m *WriteAddress) GetInput() map[string]uint32 {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *WriteAddress) GetRunTimeDate() *RunTimeData {
	if m != nil {
		return m.RunTimeDate
	}
	return nil
}

type WriteAddressAttributes struct {
	// the address writes to global variable
	WriteAddress         uint32   `protobuf:"varint,2,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	Repeat               uint32   `protobuf:"varint,7,opt,name=repeat,proto3" json:"repeat,omitempty"`
	Prio                 uint32   `protobuf:"varint,6,opt,name=prio,proto3" json:"prio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteAddressAttributes) Reset()         { *m = WriteAddressAttributes{} }
func (m *WriteAddressAttributes) String() string { return proto.CompactTextString(m) }
func (*WriteAddressAttributes) ProtoMessage()    {}
func (*WriteAddressAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{9}
}

func (m *WriteAddressAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAddressAttributes.Unmarshal(m, b)
}
func (m *WriteAddressAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAddressAttributes.Marshal(b, m, deterministic)
}
func (m *WriteAddressAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAddressAttributes.Merge(m, src)
}
func (m *WriteAddressAttributes) XXX_Size() int {
	return xxx_messageInfo_WriteAddressAttributes.Size(m)
}
func (m *WriteAddressAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAddressAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAddressAttributes proto.InternalMessageInfo

func (m *WriteAddressAttributes) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *WriteAddressAttributes) GetRepeat() uint32 {
	if m != nil {
		return m.Repeat
	}
	return 0
}

func (m *WriteAddressAttributes) GetPrio() uint32 {
	if m != nil {
		return m.Prio
	}
	return 0
}

type UncoveredAddress struct {
	ConditionAddress            uint32               `protobuf:"varint,1,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	UncoveredAddress            uint32               `protobuf:"varint,2,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	RightBranchAddress          []uint32             `protobuf:"varint,3,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	NumberArriveBasicblocks     uint32               `protobuf:"varint,4,opt,name=number_arrive_basicblocks,json=numberArriveBasicblocks,proto3" json:"number_arrive_basicblocks,omitempty"`
	Kind                        UncoveredAddressKind `protobuf:"varint,5,opt,name=kind,proto3,enum=dra.UncoveredAddressKind" json:"kind,omitempty"`
	NumberDominatorInstructions uint32               `protobuf:"varint,6,opt,name=number_dominator_instructions,json=numberDominatorInstructions,proto3" json:"number_dominator_instructions,omitempty"`
	// sig, index by bits
	Input                map[string]uint32                  `protobuf:"bytes,22,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	WriteAddress         map[uint32]*WriteAddressAttributes `protobuf:"bytes,23,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RunTimeDate          *RunTimeData                       `protobuf:"bytes,8,opt,name=run_time_date,json=runTimeDate,proto3" json:"run_time_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *UncoveredAddress) Reset()         { *m = UncoveredAddress{} }
func (m *UncoveredAddress) String() string { return proto.CompactTextString(m) }
func (*UncoveredAddress) ProtoMessage()    {}
func (*UncoveredAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{10}
}

func (m *UncoveredAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UncoveredAddress.Unmarshal(m, b)
}
func (m *UncoveredAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UncoveredAddress.Marshal(b, m, deterministic)
}
func (m *UncoveredAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UncoveredAddress.Merge(m, src)
}
func (m *UncoveredAddress) XXX_Size() int {
	return xxx_messageInfo_UncoveredAddress.Size(m)
}
func (m *UncoveredAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_UncoveredAddress.DiscardUnknown(m)
}

var xxx_messageInfo_UncoveredAddress proto.InternalMessageInfo

func (m *UncoveredAddress) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *UncoveredAddress) GetUncoveredAddress() uint32 {
	if m != nil {
		return m.UncoveredAddress
	}
	return 0
}

func (m *UncoveredAddress) GetRightBranchAddress() []uint32 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

func (m *UncoveredAddress) GetNumberArriveBasicblocks() uint32 {
	if m != nil {
		return m.NumberArriveBasicblocks
	}
	return 0
}

func (m *UncoveredAddress) GetKind() UncoveredAddressKind {
	if m != nil {
		return m.Kind
	}
	return UncoveredAddressKind_Outside
}

func (m *UncoveredAddress) GetNumberDominatorInstructions() uint32 {
	if m != nil {
		return m.NumberDominatorInstructions
	}
	return 0
}

func (m *UncoveredAddress) GetInput() map[string]uint32 {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *UncoveredAddress) GetWriteAddress() map[uint32]*WriteAddressAttributes {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

func (m *UncoveredAddress) GetRunTimeDate() *RunTimeData {
	if m != nil {
		return m.RunTimeDate
	}
	return nil
}

type Path struct {
	Address              []uint32 `protobuf:"varint,1,rep,packed,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{11}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetAddress() []uint32 {
	if m != nil {
		return m.Address
	}
	return nil
}

type UnstableInput struct {
	NewPath              *Path    `protobuf:"bytes,1,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
	UnstablePath         *Path    `protobuf:"bytes,2,opt,name=unstable_path,json=unstablePath,proto3" json:"unstable_path,omitempty"`
	Idx                  int32    `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Sig                  string   `protobuf:"bytes,11,opt,name=sig,proto3" json:"sig,omitempty"`
	Program              []byte   `protobuf:"bytes,12,opt,name=program,proto3" json:"program,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnstableInput) Reset()         { *m = UnstableInput{} }
func (m *UnstableInput) String() string { return proto.CompactTextString(m) }
func (*UnstableInput) ProtoMessage()    {}
func (*UnstableInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{12}
}

func (m *UnstableInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnstableInput.Unmarshal(m, b)
}
func (m *UnstableInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnstableInput.Marshal(b, m, deterministic)
}
func (m *UnstableInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnstableInput.Merge(m, src)
}
func (m *UnstableInput) XXX_Size() int {
	return xxx_messageInfo_UnstableInput.Size(m)
}
func (m *UnstableInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnstableInput.DiscardUnknown(m)
}

var xxx_messageInfo_UnstableInput proto.InternalMessageInfo

func (m *UnstableInput) GetNewPath() *Path {
	if m != nil {
		return m.NewPath
	}
	return nil
}

func (m *UnstableInput) GetUnstablePath() *Path {
	if m != nil {
		return m.UnstablePath
	}
	return nil
}

func (m *UnstableInput) GetIdx() int32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *UnstableInput) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *UnstableInput) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

type Input struct {
	// for program
	Sig     string           `protobuf:"bytes,11,opt,name=sig,proto3" json:"sig,omitempty"`
	Program []byte           `protobuf:"bytes,12,opt,name=program,proto3" json:"program,omitempty"`
	Call    map[uint32]*Call `protobuf:"bytes,13,rep,name=call,proto3" json:"call,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Stable  uint32           `protobuf:"varint,14,opt,name=stable,proto3" json:"stable,omitempty"`
	Total   uint32           `protobuf:"varint,15,opt,name=total,proto3" json:"total,omitempty"`
	// for dependency
	Stat FuzzingStat `protobuf:"varint,21,opt,name=stat,proto3,enum=dra.FuzzingStat" json:"stat,omitempty"`
	// uncovered address, index by bits
	UncoveredAddress map[uint32]uint32 `protobuf:"bytes,22,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// write address, index by bits
	WriteAddress         map[uint32]uint32 `protobuf:"bytes,25,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{13}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *Input) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *Input) GetCall() map[uint32]*Call {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *Input) GetStable() uint32 {
	if m != nil {
		return m.Stable
	}
	return 0
}

func (m *Input) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Input) GetStat() FuzzingStat {
	if m != nil {
		return m.Stat
	}
	return FuzzingStat_StatDefault
}

func (m *Input) GetUncoveredAddress() map[uint32]uint32 {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Input) GetWriteAddress() map[uint32]uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type Dependency struct {
	Input                *Input            `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	UncoveredAddress     *UncoveredAddress `protobuf:"bytes,2,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	WriteAddress         []*WriteAddress   `protobuf:"bytes,3,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Dependency) Reset()         { *m = Dependency{} }
func (m *Dependency) String() string { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()    {}
func (*Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{14}
}

func (m *Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependency.Unmarshal(m, b)
}
func (m *Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependency.Marshal(b, m, deterministic)
}
func (m *Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependency.Merge(m, src)
}
func (m *Dependency) XXX_Size() int {
	return xxx_messageInfo_Dependency.Size(m)
}
func (m *Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Dependency proto.InternalMessageInfo

func (m *Dependency) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Dependency) GetUncoveredAddress() *UncoveredAddress {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Dependency) GetWriteAddress() []*WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type Corpus struct {
	Input                map[string]*Input            `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UncoveredAddress     map[uint32]*UncoveredAddress `protobuf:"bytes,4,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress       map[uint32]*UncoveredAddress `protobuf:"bytes,2,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WriteAddress         map[uint32]*WriteAddress     `protobuf:"bytes,5,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FileOperations       map[string]*FileOperations   `protobuf:"bytes,6,rep,name=file_operations,json=fileOperations,proto3" json:"file_operations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tasks                *Tasks                       `protobuf:"bytes,7,opt,name=tasks,proto3" json:"tasks,omitempty"`
	HighTask             *Tasks                       `protobuf:"bytes,8,opt,name=high_task,json=highTask,proto3" json:"high_task,omitempty"`
	BootTask             *Tasks                       `protobuf:"bytes,9,opt,name=boot_task,json=bootTask,proto3" json:"boot_task,omitempty"`
	NewInput             map[string]*Input            `protobuf:"bytes,11,rep,name=new_input,json=newInput,proto3" json:"new_input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Corpus) Reset()         { *m = Corpus{} }
func (m *Corpus) String() string { return proto.CompactTextString(m) }
func (*Corpus) ProtoMessage()    {}
func (*Corpus) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{15}
}

func (m *Corpus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Corpus.Unmarshal(m, b)
}
func (m *Corpus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Corpus.Marshal(b, m, deterministic)
}
func (m *Corpus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Corpus.Merge(m, src)
}
func (m *Corpus) XXX_Size() int {
	return xxx_messageInfo_Corpus.Size(m)
}
func (m *Corpus) XXX_DiscardUnknown() {
	xxx_messageInfo_Corpus.DiscardUnknown(m)
}

var xxx_messageInfo_Corpus proto.InternalMessageInfo

func (m *Corpus) GetInput() map[string]*Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Corpus) GetUncoveredAddress() map[uint32]*UncoveredAddress {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Corpus) GetCoveredAddress() map[uint32]*UncoveredAddress {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

func (m *Corpus) GetWriteAddress() map[uint32]*WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

func (m *Corpus) GetFileOperations() map[string]*FileOperations {
	if m != nil {
		return m.FileOperations
	}
	return nil
}

func (m *Corpus) GetTasks() *Tasks {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Corpus) GetHighTask() *Tasks {
	if m != nil {
		return m.HighTask
	}
	return nil
}

func (m *Corpus) GetBootTask() *Tasks {
	if m != nil {
		return m.BootTask
	}
	return nil
}

func (m *Corpus) GetNewInput() map[string]*Input {
	if m != nil {
		return m.NewInput
	}
	return nil
}

type UsefulInput struct {
	Input                *Input   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Time                 float64  `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`
	Num                  uint64   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	NewAddress           []uint32 `protobuf:"varint,4,rep,packed,name=new_address,json=newAddress,proto3" json:"new_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsefulInput) Reset()         { *m = UsefulInput{} }
func (m *UsefulInput) String() string { return proto.CompactTextString(m) }
func (*UsefulInput) ProtoMessage()    {}
func (*UsefulInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{16}
}

func (m *UsefulInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsefulInput.Unmarshal(m, b)
}
func (m *UsefulInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsefulInput.Marshal(b, m, deterministic)
}
func (m *UsefulInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsefulInput.Merge(m, src)
}
func (m *UsefulInput) XXX_Size() int {
	return xxx_messageInfo_UsefulInput.Size(m)
}
func (m *UsefulInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UsefulInput.DiscardUnknown(m)
}

var xxx_messageInfo_UsefulInput proto.InternalMessageInfo

func (m *UsefulInput) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *UsefulInput) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *UsefulInput) GetNum() uint64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *UsefulInput) GetNewAddress() []uint32 {
	if m != nil {
		return m.NewAddress
	}
	return nil
}

type Statistic struct {
	Name                 FuzzingStat `protobuf:"varint,1,opt,name=name,proto3,enum=dra.FuzzingStat" json:"name,omitempty"`
	ExecuteNum           uint64      `protobuf:"varint,11,opt,name=executeNum,proto3" json:"executeNum,omitempty"`
	Time                 float64     `protobuf:"fixed64,12,opt,name=time,proto3" json:"time,omitempty"`
	NewTestCaseNum       uint64      `protobuf:"varint,13,opt,name=newTestCaseNum,proto3" json:"newTestCaseNum,omitempty"`
	NewAddressNum        uint64      `protobuf:"varint,14,opt,name=newAddressNum,proto3" json:"newAddressNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Statistic) Reset()         { *m = Statistic{} }
func (m *Statistic) String() string { return proto.CompactTextString(m) }
func (*Statistic) ProtoMessage()    {}
func (*Statistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{17}
}

func (m *Statistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistic.Unmarshal(m, b)
}
func (m *Statistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistic.Marshal(b, m, deterministic)
}
func (m *Statistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistic.Merge(m, src)
}
func (m *Statistic) XXX_Size() int {
	return xxx_messageInfo_Statistic.Size(m)
}
func (m *Statistic) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistic.DiscardUnknown(m)
}

var xxx_messageInfo_Statistic proto.InternalMessageInfo

func (m *Statistic) GetName() FuzzingStat {
	if m != nil {
		return m.Name
	}
	return FuzzingStat_StatDefault
}

func (m *Statistic) GetExecuteNum() uint64 {
	if m != nil {
		return m.ExecuteNum
	}
	return 0
}

func (m *Statistic) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Statistic) GetNewTestCaseNum() uint64 {
	if m != nil {
		return m.NewTestCaseNum
	}
	return 0
}

func (m *Statistic) GetNewAddressNum() uint64 {
	if m != nil {
		return m.NewAddressNum
	}
	return 0
}

type Statistics struct {
	SignalNum            uint64               `protobuf:"varint,1,opt,name=signalNum,proto3" json:"signalNum,omitempty"`
	BasicBlockNumber     uint32               `protobuf:"varint,10,opt,name=basic_block_number,json=basicBlockNumber,proto3" json:"basic_block_number,omitempty"`
	Coverage             *Coverage            `protobuf:"bytes,8,opt,name=coverage,proto3" json:"coverage,omitempty"`
	Stat                 map[int32]*Statistic `protobuf:"bytes,11,rep,name=stat,proto3" json:"stat,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UsefulInput          []*UsefulInput       `protobuf:"bytes,12,rep,name=useful_input,json=usefulInput,proto3" json:"useful_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Statistics) Reset()         { *m = Statistics{} }
func (m *Statistics) String() string { return proto.CompactTextString(m) }
func (*Statistics) ProtoMessage()    {}
func (*Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{18}
}

func (m *Statistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistics.Unmarshal(m, b)
}
func (m *Statistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistics.Marshal(b, m, deterministic)
}
func (m *Statistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistics.Merge(m, src)
}
func (m *Statistics) XXX_Size() int {
	return xxx_messageInfo_Statistics.Size(m)
}
func (m *Statistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistics.DiscardUnknown(m)
}

var xxx_messageInfo_Statistics proto.InternalMessageInfo

func (m *Statistics) GetSignalNum() uint64 {
	if m != nil {
		return m.SignalNum
	}
	return 0
}

func (m *Statistics) GetBasicBlockNumber() uint32 {
	if m != nil {
		return m.BasicBlockNumber
	}
	return 0
}

func (m *Statistics) GetCoverage() *Coverage {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Statistics) GetStat() map[int32]*Statistic {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *Statistics) GetUsefulInput() []*UsefulInput {
	if m != nil {
		return m.UsefulInput
	}
	return nil
}

type TaskRunTimeData struct {
	Hash                 string                  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Program              []byte                  `protobuf:"bytes,2,opt,name=program,proto3" json:"program,omitempty"`
	WriteIdx             uint32                  `protobuf:"varint,5,opt,name=write_idx,json=writeIdx,proto3" json:"write_idx,omitempty"`
	ConditionIdx         uint32                  `protobuf:"varint,6,opt,name=condition_idx,json=conditionIdx,proto3" json:"condition_idx,omitempty"`
	CheckWriteAddress    bool                    `protobuf:"varint,10,opt,name=check_write_address,json=checkWriteAddress,proto3" json:"check_write_address,omitempty"`
	UncoveredAddress     map[uint32]*RunTimeData `protobuf:"bytes,21,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress       map[uint32]*RunTimeData `protobuf:"bytes,23,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TaskRunTimeData) Reset()         { *m = TaskRunTimeData{} }
func (m *TaskRunTimeData) String() string { return proto.CompactTextString(m) }
func (*TaskRunTimeData) ProtoMessage()    {}
func (*TaskRunTimeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{19}
}

func (m *TaskRunTimeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRunTimeData.Unmarshal(m, b)
}
func (m *TaskRunTimeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRunTimeData.Marshal(b, m, deterministic)
}
func (m *TaskRunTimeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRunTimeData.Merge(m, src)
}
func (m *TaskRunTimeData) XXX_Size() int {
	return xxx_messageInfo_TaskRunTimeData.Size(m)
}
func (m *TaskRunTimeData) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRunTimeData.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRunTimeData proto.InternalMessageInfo

func (m *TaskRunTimeData) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TaskRunTimeData) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *TaskRunTimeData) GetWriteIdx() uint32 {
	if m != nil {
		return m.WriteIdx
	}
	return 0
}

func (m *TaskRunTimeData) GetConditionIdx() uint32 {
	if m != nil {
		return m.ConditionIdx
	}
	return 0
}

func (m *TaskRunTimeData) GetCheckWriteAddress() bool {
	if m != nil {
		return m.CheckWriteAddress
	}
	return false
}

func (m *TaskRunTimeData) GetUncoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *TaskRunTimeData) GetCoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

type Task struct {
	Sig     string `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	Index   uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Program []byte `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	// 0 is undef
	// 1 is constant
	Kind              uint32     `protobuf:"varint,4,opt,name=kind,proto3" json:"kind,omitempty"`
	Priority          int32      `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Hash              string     `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	Count             uint32     `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	WriteSig          string     `protobuf:"bytes,11,opt,name=write_sig,json=writeSig,proto3" json:"write_sig,omitempty"`
	WriteIndex        uint32     `protobuf:"varint,12,opt,name=write_index,json=writeIndex,proto3" json:"write_index,omitempty"`
	WriteProgram      []byte     `protobuf:"bytes,13,opt,name=write_program,json=writeProgram,proto3" json:"write_program,omitempty"`
	WriteAddress      uint32     `protobuf:"varint,14,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	TaskStatus        TaskStatus `protobuf:"varint,24,opt,name=task_status,json=taskStatus,proto3,enum=dra.TaskStatus" json:"task_status,omitempty"`
	CheckWriteAddress bool       `protobuf:"varint,25,opt,name=check_write_address,json=checkWriteAddress,proto3" json:"check_write_address,omitempty"`
	// uncovered address, priority
	UncoveredAddress     map[uint32]*RunTimeData `protobuf:"bytes,21,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress       map[uint32]*RunTimeData `protobuf:"bytes,23,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskRunTimeData      []*TaskRunTimeData      `protobuf:"bytes,31,rep,name=task_run_time_data,json=taskRunTimeData,proto3" json:"task_run_time_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{20}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *Task) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Task) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *Task) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *Task) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Task) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Task) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Task) GetWriteSig() string {
	if m != nil {
		return m.WriteSig
	}
	return ""
}

func (m *Task) GetWriteIndex() uint32 {
	if m != nil {
		return m.WriteIndex
	}
	return 0
}

func (m *Task) GetWriteProgram() []byte {
	if m != nil {
		return m.WriteProgram
	}
	return nil
}

func (m *Task) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *Task) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_untested
}

func (m *Task) GetCheckWriteAddress() bool {
	if m != nil {
		return m.CheckWriteAddress
	}
	return false
}

func (m *Task) GetUncoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Task) GetCoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

func (m *Task) GetTaskRunTimeData() []*TaskRunTimeData {
	if m != nil {
		return m.TaskRunTimeData
	}
	return nil
}

type Tasks struct {
	Name                 string           `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 TaskKind         `protobuf:"varint,42,opt,name=kind,proto3,enum=dra.TaskKind" json:"kind,omitempty"`
	TaskMap              map[string]*Task `protobuf:"bytes,1,rep,name=task_map,json=taskMap,proto3" json:"task_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskArray            []*Task          `protobuf:"bytes,2,rep,name=task_array,json=taskArray,proto3" json:"task_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Tasks) Reset()         { *m = Tasks{} }
func (m *Tasks) String() string { return proto.CompactTextString(m) }
func (*Tasks) ProtoMessage()    {}
func (*Tasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{21}
}

func (m *Tasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tasks.Unmarshal(m, b)
}
func (m *Tasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tasks.Marshal(b, m, deterministic)
}
func (m *Tasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tasks.Merge(m, src)
}
func (m *Tasks) XXX_Size() int {
	return xxx_messageInfo_Tasks.Size(m)
}
func (m *Tasks) XXX_DiscardUnknown() {
	xxx_messageInfo_Tasks.DiscardUnknown(m)
}

var xxx_messageInfo_Tasks proto.InternalMessageInfo

func (m *Tasks) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tasks) GetKind() TaskKind {
	if m != nil {
		return m.Kind
	}
	return TaskKind_Normal
}

func (m *Tasks) GetTaskMap() map[string]*Task {
	if m != nil {
		return m.TaskMap
	}
	return nil
}

func (m *Tasks) GetTaskArray() []*Task {
	if m != nil {
		return m.TaskArray
	}
	return nil
}

type Time struct {
	Time                 float64  `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Num                  int64    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	ExecuteNum           int64    `protobuf:"varint,3,opt,name=executeNum,proto3" json:"executeNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{22}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Time) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Time) GetExecuteNum() int64 {
	if m != nil {
		return m.ExecuteNum
	}
	return 0
}

type Coverage struct {
	Coverage             map[uint32]uint32 `protobuf:"bytes,1,rep,name=coverage,proto3" json:"coverage,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Time                 []*Time           `protobuf:"bytes,2,rep,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Coverage) Reset()         { *m = Coverage{} }
func (m *Coverage) String() string { return proto.CompactTextString(m) }
func (*Coverage) ProtoMessage()    {}
func (*Coverage) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{23}
}

func (m *Coverage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coverage.Unmarshal(m, b)
}
func (m *Coverage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coverage.Marshal(b, m, deterministic)
}
func (m *Coverage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coverage.Merge(m, src)
}
func (m *Coverage) XXX_Size() int {
	return xxx_messageInfo_Coverage.Size(m)
}
func (m *Coverage) XXX_DiscardUnknown() {
	xxx_messageInfo_Coverage.DiscardUnknown(m)
}

var xxx_messageInfo_Coverage proto.InternalMessageInfo

func (m *Coverage) GetCoverage() map[uint32]uint32 {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Coverage) GetTime() []*Time {
	if m != nil {
		return m.Time
	}
	return nil
}

type Conditions struct {
	//    map<uint64, Condition> condition = 10;
	Condition            []*Condition `protobuf:"bytes,10,rep,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Conditions) Reset()         { *m = Conditions{} }
func (m *Conditions) String() string { return proto.CompactTextString(m) }
func (*Conditions) ProtoMessage()    {}
func (*Conditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{24}
}

func (m *Conditions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conditions.Unmarshal(m, b)
}
func (m *Conditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conditions.Marshal(b, m, deterministic)
}
func (m *Conditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conditions.Merge(m, src)
}
func (m *Conditions) XXX_Size() int {
	return xxx_messageInfo_Conditions.Size(m)
}
func (m *Conditions) XXX_DiscardUnknown() {
	xxx_messageInfo_Conditions.DiscardUnknown(m)
}

var xxx_messageInfo_Conditions proto.InternalMessageInfo

func (m *Conditions) GetCondition() []*Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type WriteAddresses struct {
	Condition *Condition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	//    map<uint32, WriteAddress> write_address = 4;
	WriteAddress         []*WriteAddress `protobuf:"bytes,4,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WriteAddresses) Reset()         { *m = WriteAddresses{} }
func (m *WriteAddresses) String() string { return proto.CompactTextString(m) }
func (*WriteAddresses) ProtoMessage()    {}
func (*WriteAddresses) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{25}
}

func (m *WriteAddresses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAddresses.Unmarshal(m, b)
}
func (m *WriteAddresses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAddresses.Marshal(b, m, deterministic)
}
func (m *WriteAddresses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAddresses.Merge(m, src)
}
func (m *WriteAddresses) XXX_Size() int {
	return xxx_messageInfo_WriteAddresses.Size(m)
}
func (m *WriteAddresses) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAddresses.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAddresses proto.InternalMessageInfo

func (m *WriteAddresses) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *WriteAddresses) GetWriteAddress() []*WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

func init() {
	proto.RegisterEnum("dra.TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterEnum("dra.FileOperationsKind", FileOperationsKind_name, FileOperationsKind_value)
	proto.RegisterEnum("dra.UncoveredAddressKind", UncoveredAddressKind_name, UncoveredAddressKind_value)
	proto.RegisterEnum("dra.FuzzingStat", FuzzingStat_name, FuzzingStat_value)
	proto.RegisterEnum("dra.TaskKind", TaskKind_name, TaskKind_value)
	proto.RegisterType((*Empty)(nil), "dra.Empty")
	proto.RegisterType((*Condition)(nil), "dra.Condition")
	proto.RegisterType((*Call)(nil), "dra.Call")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Call.AddressEntry")
	proto.RegisterType((*Inputs)(nil), "dra.Inputs")
	proto.RegisterType((*Dependencytask)(nil), "dra.Dependencytask")
	proto.RegisterType((*RunTimeData)(nil), "dra.runTimeData")
	proto.RegisterType((*FileOperationsFunction)(nil), "dra.FileOperationsFunction")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.FileOperationsFunction.WriteAddressEntry")
	proto.RegisterType((*FileOperations)(nil), "dra.FileOperations")
	proto.RegisterMapType((map[int64]*FileOperationsFunction)(nil), "dra.FileOperations.FileOperationsFunctionEntry")
	proto.RegisterType((*WriteAddress)(nil), "dra.WriteAddress")
	proto.RegisterMapType((map[string]uint32)(nil), "dra.WriteAddress.FileOperationsFunctionEntry")
	proto.RegisterMapType((map[string]uint32)(nil), "dra.WriteAddress.InputEntry")
	proto.RegisterMapType((map[uint32]*WriteAddressAttributes)(nil), "dra.WriteAddress.UncoveredAddressEntry")
	proto.RegisterType((*WriteAddressAttributes)(nil), "dra.writeAddressAttributes")
	proto.RegisterType((*UncoveredAddress)(nil), "dra.UncoveredAddress")
	proto.RegisterMapType((map[string]uint32)(nil), "dra.UncoveredAddress.InputEntry")
	proto.RegisterMapType((map[uint32]*WriteAddressAttributes)(nil), "dra.UncoveredAddress.WriteAddressEntry")
	proto.RegisterType((*Path)(nil), "dra.Path")
	proto.RegisterType((*UnstableInput)(nil), "dra.UnstableInput")
	proto.RegisterType((*Input)(nil), "dra.Input")
	proto.RegisterMapType((map[uint32]*Call)(nil), "dra.Input.CallEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Input.UncoveredAddressEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Input.WriteAddressEntry")
	proto.RegisterType((*Dependency)(nil), "dra.Dependency")
	proto.RegisterType((*Corpus)(nil), "dra.Corpus")
	proto.RegisterMapType((map[uint32]*UncoveredAddress)(nil), "dra.Corpus.CoveredAddressEntry")
	proto.RegisterMapType((map[string]*FileOperations)(nil), "dra.Corpus.FileOperationsEntry")
	proto.RegisterMapType((map[string]*Input)(nil), "dra.Corpus.InputEntry")
	proto.RegisterMapType((map[string]*Input)(nil), "dra.Corpus.NewInputEntry")
	proto.RegisterMapType((map[uint32]*UncoveredAddress)(nil), "dra.Corpus.UncoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*WriteAddress)(nil), "dra.Corpus.WriteAddressEntry")
	proto.RegisterType((*UsefulInput)(nil), "dra.UsefulInput")
	proto.RegisterType((*Statistic)(nil), "dra.Statistic")
	proto.RegisterType((*Statistics)(nil), "dra.Statistics")
	proto.RegisterMapType((map[int32]*Statistic)(nil), "dra.Statistics.StatEntry")
	proto.RegisterType((*TaskRunTimeData)(nil), "dra.TaskRunTimeData")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.TaskRunTimeData.CoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.TaskRunTimeData.UncoveredAddressEntry")
	proto.RegisterType((*Task)(nil), "dra.Task")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.Task.CoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.Task.UncoveredAddressEntry")
	proto.RegisterType((*Tasks)(nil), "dra.Tasks")
	proto.RegisterMapType((map[string]*Task)(nil), "dra.Tasks.TaskMapEntry")
	proto.RegisterType((*Time)(nil), "dra.Time")
	proto.RegisterType((*Coverage)(nil), "dra.Coverage")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Coverage.CoverageEntry")
	proto.RegisterType((*Conditions)(nil), "dra.Conditions")
	proto.RegisterType((*WriteAddresses)(nil), "dra.WriteAddresses")
}

func init() { proto.RegisterFile("DependencyRPC.proto", fileDescriptor_db4d5fd3d0a7c985) }

var fileDescriptor_db4d5fd3d0a7c985 = []byte{
	// 2680 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x3a, 0x4b, 0x6f, 0x1b, 0xc9,
	0xd1, 0x1e, 0x3e, 0x24, 0xb2, 0xc8, 0xa1, 0x46, 0x2d, 0x59, 0xa6, 0xa8, 0xf5, 0x9a, 0xcb, 0xf5,
	0xb7, 0xa6, 0xb5, 0xbb, 0x5a, 0x7f, 0xda, 0xac, 0x63, 0x38, 0x40, 0x02, 0x89, 0xb6, 0x65, 0x23,
	0xb6, 0xec, 0x8c, 0xec, 0x75, 0x10, 0x04, 0x60, 0x46, 0x9c, 0x16, 0x39, 0xd0, 0x70, 0x86, 0x98,
	0xe9, 0xb1, 0x2c, 0x9f, 0x83, 0x00, 0x01, 0xb2, 0x87, 0xfc, 0x82, 0x20, 0xc8, 0x2d, 0x40, 0x80,
	0x00, 0xf9, 0x17, 0xf9, 0x1b, 0xb9, 0xe5, 0x1e, 0xe4, 0x90, 0x4b, 0xd0, 0xd5, 0xf3, 0xe8, 0x79,
	0x50, 0xa2, 0x1d, 0xe4, 0x90, 0x8b, 0xdd, 0x53, 0x5d, 0x55, 0x5d, 0xd5, 0xf5, 0x6e, 0x0a, 0xd6,
	0x1e, 0xd0, 0x19, 0x75, 0x4c, 0xea, 0x8c, 0xce, 0xf5, 0x17, 0x83, 0x9d, 0x99, 0xe7, 0x32, 0x97,
	0x94, 0x4d, 0xcf, 0xe8, 0x7d, 0x03, 0xd5, 0x87, 0xd3, 0x19, 0x3b, 0x27, 0x6d, 0x58, 0x36, 0x4c,
	0xd3, 0xa3, 0xbe, 0xdf, 0x56, 0xba, 0x4a, 0x5f, 0xd5, 0xa3, 0x4f, 0x42, 0xa0, 0xe2, 0x18, 0x53,
	0xda, 0x2e, 0x75, 0x95, 0x7e, 0x5d, 0xc7, 0x75, 0xef, 0x37, 0x65, 0xa8, 0x0f, 0x5c, 0xc7, 0xb4,
	0x98, 0xe5, 0x3a, 0xe4, 0x73, 0x58, 0x1d, 0x45, 0x1f, 0x43, 0x99, 0x4b, 0x45, 0xd7, 0xe2, 0x8d,
	0xbd, 0x90, 0xdd, 0x0f, 0x61, 0xcb, 0x3f, 0x7f, 0x77, 0x6a, 0xd8, 0x36, 0xf5, 0x86, 0x79, 0xb2,
	0x12, 0x1e, 0xbe, 0x19, 0xa3, 0x0c, 0xb2, 0xf4, 0x9f, 0xc3, 0x6a, 0xe0, 0x8c, 0xdc, 0x37, 0xd4,
	0xa3, 0x66, 0x4c, 0x55, 0x16, 0x87, 0xc5, 0x1b, 0x85, 0x87, 0xe5, 0xc9, 0x2a, 0x99, 0xc3, 0x5e,
	0x65, 0xe9, 0x35, 0x28, 0x5b, 0xe6, 0xdb, 0x76, 0x15, 0xf1, 0xf8, 0x92, 0x7c, 0x04, 0x75, 0x3f,
	0x18, 0x8d, 0xa8, 0xef, 0xbb, 0x5e, 0x7b, 0x09, 0x8f, 0x4d, 0x00, 0xe4, 0x0e, 0xac, 0x7b, 0xd6,
	0x78, 0xc2, 0x86, 0xc7, 0x9e, 0xe1, 0x8c, 0x26, 0xf1, 0x41, 0xcb, 0xdd, 0x72, 0xbf, 0xa2, 0x13,
	0xdc, 0xdb, 0xc7, 0xad, 0xe8, 0x84, 0x01, 0x7c, 0x9c, 0x48, 0x58, 0x48, 0x5b, 0xeb, 0x96, 0xfb,
	0xaa, 0x9e, 0xe8, 0xa1, 0xe7, 0x98, 0xf4, 0x7e, 0xa5, 0x40, 0x65, 0x60, 0xd8, 0x76, 0x24, 0xaf,
	0x92, 0xc8, 0x7b, 0x27, 0xb1, 0x6b, 0xa9, 0x5b, 0xee, 0x37, 0x76, 0x37, 0x76, 0x4c, 0xcf, 0xd8,
	0xe1, 0xd8, 0x3b, 0x21, 0xf9, 0x43, 0x87, 0x79, 0xe7, 0xb1, 0xbd, 0x3b, 0xf7, 0xa1, 0x29, 0x6f,
	0x70, 0x9e, 0xa7, 0xf4, 0x3c, 0xe2, 0x79, 0x4a, 0xcf, 0xc9, 0x3a, 0x54, 0xdf, 0x18, 0x76, 0x40,
	0x43, 0x63, 0x89, 0x8f, 0xfb, 0xa5, 0x7b, 0x4a, 0x6f, 0x1b, 0x96, 0x9e, 0x38, 0xb3, 0x80, 0xf9,
	0xa4, 0x0b, 0x55, 0x8b, 0xaf, 0xda, 0x0a, 0x9e, 0x0a, 0x78, 0x2a, 0xee, 0xe9, 0x62, 0xa3, 0xf7,
	0x08, 0x5a, 0x89, 0x5b, 0x32, 0xc3, 0x3f, 0x95, 0x69, 0x94, 0x42, 0x9a, 0xd8, 0x17, 0x6f, 0x4b,
	0xbe, 0xf8, 0xa7, 0x32, 0x34, 0xbc, 0xc0, 0x79, 0x69, 0x4d, 0xe9, 0x03, 0x83, 0x19, 0xa4, 0x03,
	0xb5, 0x99, 0x67, 0xb9, 0x9e, 0xc5, 0x22, 0xa1, 0xe3, 0xef, 0x62, 0x4f, 0x15, 0x5a, 0xe4, 0x3d,
	0x55, 0x0a, 0x89, 0x4a, 0x3a, 0x24, 0xe6, 0x99, 0x79, 0x09, 0x4d, 0x55, 0x64, 0xe6, 0x3b, 0xd0,
	0xe0, 0x2a, 0x0e, 0x7d, 0x66, 0xb0, 0xc0, 0x6f, 0x43, 0x57, 0xe9, 0xb7, 0x76, 0x57, 0x50, 0x41,
	0x0e, 0x3f, 0x42, 0xb0, 0x0e, 0xc9, 0x9a, 0x9f, 0x3e, 0xf3, 0xdc, 0xb1, 0x67, 0x4c, 0xdb, 0xcd,
	0xae, 0xd2, 0x6f, 0xea, 0xd1, 0x67, 0x64, 0x64, 0x35, 0x31, 0xf2, 0xff, 0x41, 0xcb, 0x1b, 0x05,
	0x9e, 0x6f, 0xbd, 0xa1, 0xc3, 0x91, 0x1b, 0x38, 0xac, 0xdd, 0xc2, 0x4d, 0x35, 0x82, 0x0e, 0x38,
	0x90, 0x7c, 0x06, 0xad, 0xd1, 0x84, 0x8e, 0x4e, 0xe3, 0x98, 0x6a, 0x5f, 0xed, 0x2a, 0xfd, 0x9a,
	0x9e, 0x81, 0x92, 0x1e, 0x34, 0x11, 0x12, 0x0a, 0xdf, 0xde, 0x40, 0xac, 0x14, 0x8c, 0xdc, 0x83,
	0x6b, 0xf8, 0x9d, 0xf7, 0xc6, 0xf6, 0x35, 0x44, 0x9f, 0xb7, 0xdd, 0xfb, 0x7b, 0x09, 0x36, 0x1e,
	0x59, 0x36, 0x7d, 0x3e, 0xa3, 0x9e, 0xc1, 0xcf, 0xf3, 0x1f, 0x05, 0xce, 0x08, 0x0f, 0x8e, 0xcc,
	0xab, 0x24, 0xe6, 0xe5, 0x77, 0x7d, 0x62, 0xd9, 0x74, 0xe8, 0xc6, 0xe8, 0x43, 0x29, 0x1d, 0x91,
	0x93, 0x14, 0xa7, 0x43, 0x4e, 0xf1, 0x25, 0x54, 0x4e, 0x2d, 0xc7, 0xc4, 0xa4, 0xd0, 0xda, 0xdd,
	0xc4, 0x4b, 0xce, 0xb2, 0xe0, 0x08, 0x3a, 0xa2, 0xf1, 0xeb, 0x1c, 0x4d, 0x4d, 0x34, 0x71, 0x45,
	0xe7, 0x4b, 0xf2, 0x3d, 0x50, 0xbd, 0xc0, 0x19, 0x32, 0x6b, 0x4a, 0x87, 0xa6, 0xc1, 0x28, 0xc6,
	0x7f, 0x63, 0x57, 0x43, 0x4e, 0x92, 0xab, 0xe9, 0x92, 0xdf, 0x51, 0xa2, 0x83, 0x7a, 0xe6, 0x59,
	0x8c, 0xc6, 0xde, 0xd0, 0x40, 0xcf, 0xff, 0x12, 0xa9, 0x8a, 0x15, 0xde, 0x79, 0xcd, 0x09, 0x52,
	0x61, 0xd8, 0x3c, 0x93, 0x40, 0x9d, 0x1f, 0xc1, 0x6a, 0x0e, 0xe5, 0xbd, 0x02, 0xf2, 0x9f, 0x0a,
	0xb4, 0xd2, 0x67, 0x17, 0x5e, 0xb2, 0x05, 0xed, 0xec, 0x0d, 0x9d, 0x84, 0x32, 0xb6, 0xcb, 0xa8,
	0xc6, 0x57, 0x05, 0x6a, 0xcc, 0xd1, 0x4a, 0x28, 0xb2, 0x71, 0x52, 0xb8, 0xd9, 0x39, 0x81, 0xad,
	0x0b, 0xc8, 0x64, 0xe5, 0xca, 0x42, 0xb9, 0xff, 0x97, 0x95, 0x6b, 0xec, 0x6e, 0x5d, 0x70, 0x9f,
	0xb2, 0xe6, 0xbf, 0xac, 0x42, 0x53, 0xbe, 0x3b, 0xf2, 0x69, 0xd6, 0x3e, 0xe2, 0xb2, 0x52, 0x17,
	0x5e, 0x9c, 0x20, 0xca, 0x73, 0x12, 0x04, 0x09, 0x1d, 0x4d, 0x64, 0x07, 0xe1, 0x4d, 0x2f, 0x8b,
	0xca, 0xd3, 0x35, 0xbc, 0xc2, 0x5b, 0x28, 0xb9, 0x2c, 0xd3, 0x4e, 0xb6, 0xe0, 0x88, 0xab, 0xcb,
	0xd7, 0xb1, 0xf1, 0x05, 0xf6, 0x69, 0x4b, 0x6e, 0x96, 0x62, 0xfe, 0x01, 0xd6, 0x21, 0xbb, 0x51,
	0x0a, 0xde, 0x44, 0xae, 0x1f, 0xe5, 0xb9, 0x62, 0x3e, 0x16, 0x4c, 0xc2, 0xa4, 0x9c, 0x0b, 0x97,
	0xc6, 0x02, 0xe1, 0xd2, 0xf9, 0x05, 0x5c, 0x2d, 0xd4, 0xbe, 0xc0, 0xbd, 0x0b, 0x3d, 0x40, 0x36,
	0xdb, 0x1e, 0x63, 0x9e, 0x75, 0x1c, 0x30, 0xea, 0x4b, 0x1e, 0xd0, 0x79, 0xb2, 0xb0, 0xa7, 0xd5,
	0x2f, 0x09, 0xa3, 0xce, 0x3d, 0x80, 0x44, 0xef, 0xf7, 0xa1, 0xec, 0x59, 0xb0, 0x51, 0x2c, 0xe9,
	0x62, 0xfe, 0xb8, 0x01, 0x4b, 0x1e, 0x9d, 0x51, 0x83, 0xb5, 0x97, 0x71, 0x37, 0xfc, 0xe2, 0xae,
	0xc7, 0x8b, 0x1a, 0x76, 0x20, 0xaa, 0x8e, 0xeb, 0xde, 0xef, 0xab, 0xa0, 0xe5, 0x3a, 0x98, 0xb9,
	0xbd, 0x59, 0x91, 0x43, 0x17, 0xf6, 0x56, 0x61, 0x79, 0xcc, 0xf9, 0xe4, 0xbc, 0x22, 0x58, 0x9e,
	0x5b, 0x04, 0xef, 0xc3, 0xa6, 0x13, 0x4c, 0x8f, 0xa9, 0x37, 0x34, 0x3c, 0x8f, 0xd7, 0xaa, 0x63,
	0xc3, 0xb7, 0x46, 0xc7, 0xb6, 0x3b, 0x3a, 0x8d, 0x4a, 0xec, 0x35, 0x81, 0xb0, 0x87, 0xfb, 0xfb,
	0xc9, 0x76, 0x9c, 0xd4, 0xab, 0x52, 0x52, 0xcf, 0x2a, 0xfb, 0xe3, 0x24, 0xa9, 0xef, 0xc3, 0xf5,
	0xf0, 0x28, 0xd3, 0x9d, 0x5a, 0x8e, 0xc1, 0x5c, 0x6f, 0x68, 0x39, 0x3e, 0xf3, 0x02, 0xf4, 0x00,
	0x3f, 0xbc, 0xb8, 0x2d, 0x81, 0xf4, 0x20, 0xc2, 0x79, 0x22, 0xa1, 0x90, 0xbb, 0x51, 0x2c, 0x6c,
	0x60, 0x2c, 0x74, 0x0b, 0xcf, 0x2c, 0x88, 0x87, 0xa7, 0x59, 0xc3, 0xca, 0xe1, 0x9f, 0xa3, 0xbf,
	0xa4, 0x04, 0xe4, 0xa3, 0xab, 0xb6, 0x48, 0x74, 0x7d, 0xb0, 0xc3, 0x76, 0x7e, 0xbe, 0x58, 0xc9,
	0xf9, 0xb0, 0x98, 0xec, 0x75, 0xa1, 0xf2, 0xc2, 0x60, 0x93, 0xf4, 0xb8, 0x51, 0x96, 0x7a, 0xab,
	0xde, 0x1f, 0x14, 0x50, 0x5f, 0x39, 0x3e, 0x33, 0x8e, 0x6d, 0x8a, 0x2a, 0x90, 0x9b, 0x50, 0x73,
	0xe8, 0xd9, 0x70, 0x66, 0xb0, 0x49, 0xd8, 0x19, 0xd6, 0xf1, 0x34, 0xce, 0x48, 0x5f, 0x76, 0xe8,
	0x19, 0x72, 0xdc, 0x01, 0x35, 0x08, 0xc9, 0x04, 0x6a, 0x29, 0x8b, 0xda, 0x8c, 0xf6, 0x11, 0x3f,
	0xec, 0xa2, 0x78, 0x6e, 0xaf, 0x8a, 0x2e, 0x4a, 0x83, 0xb2, 0x6f, 0x8d, 0x31, 0x7b, 0xd5, 0x75,
	0xbe, 0x9c, 0xdf, 0x83, 0xf5, 0xbe, 0xab, 0x40, 0x55, 0x48, 0xf7, 0x1e, 0x54, 0xa4, 0x0f, 0x95,
	0x91, 0x61, 0xdb, 0x6d, 0x15, 0x1d, 0x62, 0x3d, 0xe9, 0x6f, 0xb1, 0x1f, 0x17, 0xd6, 0x47, 0x0c,
	0x1e, 0xf7, 0x42, 0xd6, 0xb0, 0x93, 0x0b, 0xbf, 0xb8, 0xdd, 0x98, 0xcb, 0x0c, 0xbb, 0xbd, 0x22,
	0xec, 0x86, 0x1f, 0xe4, 0x26, 0x54, 0x78, 0x63, 0x89, 0xed, 0x5c, 0x2b, 0x74, 0x8d, 0x47, 0xc1,
	0xbb, 0x77, 0x96, 0x33, 0xe6, 0xdd, 0xa4, 0x8e, 0xbb, 0xe4, 0x59, 0x51, 0x74, 0xcb, 0xbe, 0x2d,
	0x44, 0x59, 0xb4, 0x26, 0xed, 0x65, 0xdd, 0x5c, 0x2e, 0x19, 0x82, 0xd5, 0x65, 0xed, 0xcd, 0x3e,
	0xd4, 0x63, 0xc5, 0x0b, 0x7c, 0xec, 0x46, 0xda, 0xc7, 0xea, 0xf1, 0xe4, 0x22, 0xfb, 0xeb, 0x60,
	0xf1, 0x3a, 0x32, 0xdf, 0xe9, 0xff, 0xe3, 0x3e, 0xeb, 0x8f, 0x0a, 0x40, 0x32, 0xcd, 0x2c, 0x30,
	0xc9, 0xec, 0xcf, 0x4b, 0xb5, 0x8d, 0xdd, 0xab, 0x85, 0x89, 0xa2, 0xc0, 0x02, 0x77, 0xb3, 0x16,
	0x10, 0xad, 0xda, 0x6a, 0xae, 0x68, 0xa7, 0xaf, 0xbd, 0xf7, 0xaf, 0x65, 0x58, 0x1a, 0xb8, 0xde,
	0x2c, 0xf0, 0xc9, 0x17, 0xe9, 0x31, 0x2d, 0x1c, 0x0e, 0x71, 0xaf, 0x20, 0xb3, 0x1d, 0x16, 0x09,
	0x5d, 0x41, 0xca, 0x4f, 0x64, 0xca, 0x45, 0x5d, 0xe8, 0x31, 0xac, 0xe4, 0xaf, 0x80, 0x73, 0xbb,
	0x21, 0x73, 0x1b, 0x14, 0xf0, 0x6a, 0x65, 0x38, 0xed, 0x67, 0xaf, 0xa2, 0x8a, 0x7c, 0xae, 0xcb,
	0x7c, 0x2e, 0xcb, 0xb4, 0x8f, 0x61, 0x25, 0xd3, 0x64, 0xe1, 0x40, 0x97, 0x91, 0x26, 0xdd, 0x52,
	0x84, 0xd2, 0xa4, 0xbb, 0x29, 0x6e, 0x7e, 0x3e, 0xc9, 0xf9, 0x58, 0xb4, 0x23, 0xf3, 0xbf, 0xe4,
	0x10, 0x5d, 0x6c, 0x90, 0x5b, 0x50, 0x9f, 0x58, 0xe3, 0xc9, 0x90, 0x7f, 0x85, 0x19, 0x5d, 0xc6,
	0xaa, 0xf1, 0x4d, 0xbe, 0xe4, 0x88, 0xc7, 0xae, 0xcb, 0x04, 0x62, 0x3d, 0x8f, 0xc8, 0x37, 0x11,
	0xf1, 0x2e, 0xd4, 0x79, 0x96, 0x14, 0xd6, 0x14, 0xa3, 0xc7, 0xa6, 0x2c, 0xf7, 0x21, 0x3d, 0x93,
	0x0c, 0xca, 0x33, 0x2a, 0x7e, 0x76, 0x1e, 0x5c, 0x52, 0x29, 0xba, 0xe9, 0x20, 0x4c, 0xb9, 0x72,
	0x12, 0x40, 0x3f, 0x5b, 0x3c, 0x0a, 0x3f, 0x4f, 0x33, 0x9c, 0xe3, 0xed, 0x12, 0xef, 0x9f, 0xc2,
	0xda, 0xe0, 0xbf, 0xc3, 0x59, 0x5f, 0x2c, 0xec, 0x6f, 0xa5, 0xf9, 0x16, 0xc4, 0x97, 0xc4, 0xf3,
	0x5b, 0x58, 0x2b, 0x70, 0x91, 0x82, 0x8b, 0xbd, 0x9d, 0xe6, 0xba, 0x56, 0x30, 0xd7, 0xc8, 0x7c,
	0x0f, 0x40, 0x4d, 0x99, 0xf0, 0x43, 0x4d, 0xd5, 0x7b, 0x03, 0x8d, 0x57, 0x3e, 0x3d, 0x09, 0x6c,
	0x51, 0xbf, 0x16, 0x7a, 0x74, 0xe1, 0xdd, 0x07, 0x72, 0x55, 0x74, 0x5c, 0xf3, 0xc3, 0x9d, 0x60,
	0x1a, 0xbe, 0xbb, 0xf1, 0x25, 0xb9, 0x01, 0x0d, 0xee, 0x7f, 0x72, 0x56, 0x50, 0x75, 0x70, 0xe8,
	0x59, 0x94, 0x75, 0xfe, 0xa2, 0x40, 0x9d, 0x57, 0x23, 0xcb, 0x67, 0xd6, 0x88, 0x97, 0xac, 0x78,
	0x0a, 0x2d, 0x2c, 0x59, 0x38, 0x97, 0x7e, 0x0c, 0x40, 0xdf, 0xd2, 0x51, 0xc0, 0xe8, 0x61, 0x30,
	0xc5, 0x1a, 0x5b, 0xd1, 0x25, 0x48, 0x2c, 0x5a, 0x53, 0x12, 0xed, 0x33, 0x68, 0x39, 0xf4, 0xec,
	0x25, 0xf5, 0xd9, 0xc0, 0xf0, 0x91, 0x4e, 0x45, 0xba, 0x0c, 0x94, 0xdc, 0x04, 0x35, 0x91, 0x8e,
	0xa3, 0xb5, 0x10, 0x2d, 0x0d, 0xec, 0xfd, 0xb9, 0x04, 0x10, 0x4b, 0xed, 0xe3, 0xf3, 0x9f, 0x35,
	0x76, 0x0c, 0x9b, 0x13, 0x28, 0xe1, 0xf3, 0x5f, 0x04, 0x20, 0x5f, 0x00, 0xc1, 0x96, 0x76, 0x88,
	0x4d, 0xeb, 0x50, 0x34, 0x97, 0xf8, 0xd8, 0xa3, 0xea, 0x1a, 0xee, 0xec, 0xf3, 0x8d, 0x43, 0x84,
	0x93, 0xdb, 0x50, 0x43, 0xd7, 0x34, 0xc6, 0x51, 0x53, 0xa7, 0x86, 0x01, 0x2b, 0x80, 0x7a, 0xbc,
	0xcd, 0xbb, 0x5f, 0x2c, 0xf0, 0x72, 0x5c, 0x27, 0x52, 0xe1, 0x32, 0xec, 0x1e, 0xb0, 0xd2, 0x7f,
	0x0d, 0xcd, 0x00, 0x4d, 0x1c, 0xa6, 0x83, 0x26, 0x92, 0x89, 0x4b, 0x96, 0x6c, 0xaf, 0x37, 0x82,
	0xe4, 0xa3, 0x73, 0x20, 0xcc, 0x93, 0x73, 0xae, 0xaa, 0x70, 0xae, 0x9b, 0x69, 0xe7, 0x6a, 0xa5,
	0x65, 0x90, 0x1d, 0xec, 0xd7, 0x15, 0x58, 0xe1, 0x29, 0x49, 0x97, 0x1e, 0xe5, 0x08, 0x54, 0x26,
	0x86, 0x3f, 0x89, 0x1e, 0x1d, 0xf8, 0x5a, 0xee, 0x93, 0x4a, 0xe9, 0x3e, 0x69, 0x0b, 0xea, 0x22,
	0x9b, 0x27, 0x8f, 0xaf, 0x35, 0x04, 0x3c, 0x31, 0xdf, 0xf2, 0xb9, 0x29, 0x99, 0x68, 0x38, 0x82,
	0x68, 0xe5, 0x9b, 0x31, 0x90, 0x23, 0xed, 0xc0, 0x1a, 0xbe, 0x3f, 0x0d, 0xd3, 0x55, 0x01, 0xf0,
	0x69, 0x6a, 0x15, 0xb7, 0x52, 0x8f, 0x03, 0xaf, 0x8b, 0x2a, 0xdb, 0x55, 0xbc, 0xb6, 0xed, 0x38,
	0xdd, 0x4a, 0x0a, 0x2d, 0x5c, 0xe2, 0x7e, 0x92, 0x2f, 0x71, 0x62, 0x1c, 0xe8, 0x17, 0xb2, 0x5d,
	0xa0, 0xd6, 0x75, 0x5e, 0x2d, 0x9e, 0x6b, 0x3f, 0x4b, 0x1b, 0x2d, 0x3f, 0x34, 0x48, 0x09, 0xe6,
	0x68, 0xd1, 0x34, 0xfb, 0x1e, 0x4c, 0x7b, 0xbf, 0x5d, 0x82, 0x0a, 0x96, 0xa7, 0xb0, 0x4d, 0x56,
	0x92, 0x36, 0x79, 0x9d, 0x27, 0x1e, 0x93, 0xbe, 0x8d, 0x9a, 0x29, 0xfc, 0x90, 0x9d, 0xa2, 0x9c,
	0x76, 0x8a, 0xa2, 0xd7, 0x16, 0xf9, 0xad, 0xb7, 0x8a, 0xbe, 0x9a, 0xbc, 0xf5, 0x46, 0x2e, 0xb7,
	0x24, 0xb9, 0xdc, 0x3a, 0x54, 0xc5, 0xfb, 0xa8, 0x98, 0xa6, 0xc5, 0x47, 0xe2, 0x6e, 0x49, 0x23,
	0x2f, 0xdc, 0xed, 0xc8, 0x1a, 0xf3, 0xbc, 0x16, 0xfa, 0x22, 0x0a, 0xdb, 0x44, 0x42, 0x10, 0xde,
	0x88, 0x12, 0xc7, 0x73, 0x7c, 0x24, 0xb7, 0x8a, 0x72, 0x8b, 0xde, 0xe2, 0x45, 0x28, 0x7c, 0x6e,
	0xd8, 0x6f, 0x15, 0x0c, 0xfb, 0x99, 0x47, 0xe2, 0xf6, 0xe5, 0x8f, 0xc4, 0x73, 0xdc, 0x7c, 0x73,
	0x9e, 0x9b, 0x3f, 0x9d, 0xef, 0xe6, 0x37, 0x62, 0x7f, 0x5c, 0xd8, 0xb7, 0x1f, 0xcd, 0xf3, 0xed,
	0xeb, 0x09, 0xaf, 0x45, 0x9a, 0xb7, 0x3d, 0x20, 0xa8, 0xb7, 0x3c, 0xe7, 0x1a, 0xed, 0x1b, 0xd2,
	0x90, 0x94, 0x09, 0x13, 0x7d, 0x85, 0xa5, 0x01, 0xff, 0x53, 0x31, 0xf1, 0x37, 0x05, 0xaa, 0xd8,
	0xbd, 0x15, 0xfd, 0x9c, 0x41, 0x3e, 0x09, 0xdd, 0x7c, 0x1b, 0xad, 0xaf, 0xc6, 0xea, 0x4b, 0x8f,
	0x1b, 0xbb, 0x50, 0xc3, 0xfb, 0x9a, 0x1a, 0xb3, 0xb0, 0x6f, 0xbf, 0x96, 0xb4, 0x84, 0xf8, 0xef,
	0x33, 0x63, 0x16, 0xfe, 0xaa, 0xc3, 0xc4, 0x17, 0xe9, 0x03, 0xfa, 0xcd, 0xd0, 0xf0, 0x3c, 0xe3,
	0x3c, 0xec, 0xb2, 0xeb, 0xc9, 0xdd, 0xd6, 0xf9, 0xe6, 0x1e, 0xdf, 0xeb, 0x3c, 0x84, 0xa6, 0xcc,
	0xa2, 0xa0, 0xcf, 0x28, 0x9c, 0xcb, 0x90, 0x8d, 0xa4, 0xe5, 0x53, 0xa8, 0x70, 0xe5, 0xe3, 0x12,
	0xad, 0xe4, 0xbb, 0x87, 0x92, 0x78, 0xe4, 0xe5, 0xdd, 0x43, 0xba, 0xd0, 0x97, 0x71, 0x43, 0x82,
	0xf4, 0x7e, 0xa7, 0x40, 0x2d, 0xaa, 0x8b, 0xe4, 0xfb, 0x52, 0xe1, 0x14, 0xfa, 0x6f, 0xa5, 0x0a,
	0x67, 0xbc, 0x08, 0x7b, 0xdd, 0xb8, 0x8c, 0x5e, 0x8f, 0x3b, 0x19, 0x49, 0x7d, 0x6b, 0x4a, 0x85,
	0x58, 0x9d, 0x1f, 0x80, 0x9a, 0xa2, 0x7c, 0xaf, 0x09, 0xf0, 0x3e, 0x40, 0xfc, 0x0b, 0x0a, 0x9f,
	0xab, 0xea, 0x71, 0x3d, 0x6a, 0x03, 0x1e, 0xd7, 0x0a, 0x65, 0x0c, 0xa1, 0x7a, 0x82, 0xd0, 0x7b,
	0x03, 0x2d, 0x39, 0x4c, 0x69, 0x86, 0x5e, 0x91, 0x2a, 0x6e, 0x11, 0x7d, 0x7e, 0x10, 0xac, 0x2c,
	0x34, 0x08, 0x6e, 0x9f, 0x80, 0x9c, 0x4c, 0x9a, 0x50, 0x0b, 0x1c, 0x46, 0x7d, 0x46, 0x4d, 0xed,
	0x0a, 0x69, 0xc0, 0x32, 0x5f, 0x5b, 0xce, 0x58, 0x53, 0xc4, 0x96, 0x78, 0x82, 0xd0, 0x4a, 0x04,
	0x60, 0x29, 0x44, 0x2b, 0x73, 0xb4, 0x30, 0xec, 0xb4, 0x0a, 0x51, 0xa1, 0xee, 0xd1, 0xf0, 0x27,
	0x27, 0x0d, 0xc8, 0x32, 0x94, 0xdd, 0x80, 0x69, 0x8d, 0xed, 0xef, 0x94, 0xfc, 0x8f, 0x38, 0xe8,
	0xc9, 0x0d, 0x58, 0x36, 0xe9, 0x89, 0x11, 0xd8, 0x4c, 0xbb, 0x42, 0x6a, 0x50, 0xb1, 0x1c, 0x8b,
	0x69, 0x0a, 0x3f, 0xc0, 0xb6, 0x7d, 0x4a, 0x4f, 0xb5, 0x12, 0x87, 0x7a, 0xd4, 0xe0, 0x47, 0xd5,
	0xa1, 0x8a, 0xd2, 0x6b, 0x15, 0x0e, 0x9c, 0xb9, 0xb6, 0xad, 0xd5, 0x09, 0x81, 0x56, 0xe0, 0xf0,
	0xa6, 0x8a, 0x9a, 0x43, 0xcb, 0x1d, 0x31, 0x5b, 0x03, 0xbe, 0x3b, 0x9d, 0x1a, 0x33, 0xad, 0xc9,
	0x57, 0xee, 0x8c, 0x3a, 0x5a, 0x8b, 0x9f, 0xe4, 0x51, 0x9b, 0x1a, 0x3e, 0xd5, 0xb4, 0xed, 0xd7,
	0xb0, 0x5e, 0xf4, 0x76, 0xc8, 0x91, 0x9e, 0x07, 0xcc, 0xb7, 0x4c, 0xaa, 0x5d, 0x21, 0x1a, 0x34,
	0x45, 0x97, 0x44, 0x6d, 0x83, 0xeb, 0xaa, 0x90, 0xab, 0xb0, 0x2a, 0x66, 0x7c, 0x87, 0x8e, 0xce,
	0x23, 0x70, 0x89, 0xcb, 0xf5, 0x9c, 0x4d, 0xa8, 0xa7, 0x95, 0xb7, 0xff, 0xaa, 0x40, 0x43, 0xea,
	0x62, 0xc9, 0x0a, 0x34, 0xf8, 0xff, 0x0f, 0x62, 0x1d, 0x35, 0x68, 0x72, 0xc0, 0x01, 0x75, 0xf8,
	0x45, 0x50, 0x71, 0xb5, 0x1c, 0xc2, 0xa9, 0xb4, 0x12, 0x59, 0x05, 0x95, 0x7f, 0x0d, 0x0c, 0xc7,
	0xb4, 0x4c, 0x8e, 0x50, 0x26, 0x2d, 0xd1, 0x80, 0xbe, 0xf4, 0x2c, 0x63, 0xcc, 0x75, 0x0f, 0x59,
	0x3c, 0xb3, 0x1c, 0x6b, 0x6a, 0xbd, 0xa3, 0x5a, 0x95, 0x5f, 0x3b, 0x87, 0x1c, 0x4d, 0x0d, 0x7f,
	0xa2, 0x2d, 0x45, 0x1c, 0x1f, 0x5b, 0x0e, 0xd3, 0x96, 0xa3, 0xaf, 0x23, 0x4a, 0x4d, 0xad, 0xc6,
	0xaf, 0x4b, 0x08, 0x14, 0x3d, 0x55, 0x68, 0x75, 0xb2, 0x01, 0x24, 0x0d, 0xdb, 0x77, 0x5d, 0xa6,
	0xc1, 0xf6, 0x36, 0xd4, 0xa2, 0xc4, 0xc3, 0x2d, 0x72, 0xe8, 0x7a, 0x53, 0xc3, 0x16, 0x76, 0x7a,
	0x6c, 0x8d, 0x27, 0x9a, 0xc2, 0x57, 0x88, 0x5b, 0xda, 0xfd, 0x47, 0x15, 0xd4, 0xd4, 0x1f, 0x19,
	0x90, 0x3e, 0x34, 0x0f, 0x28, 0xfb, 0xf6, 0xd9, 0xf3, 0x93, 0x13, 0x9f, 0x32, 0x9f, 0x88, 0xc1,
	0x02, 0xff, 0xd8, 0xa0, 0x23, 0xad, 0x7b, 0x57, 0xc8, 0x1d, 0x58, 0x3f, 0xa2, 0x8e, 0xb9, 0x9f,
	0xed, 0x8f, 0xe7, 0x53, 0xf4, 0xa1, 0x71, 0x40, 0x59, 0x34, 0x0e, 0xa5, 0x10, 0x1b, 0xc9, 0xfc,
	0xe2, 0xf7, 0xae, 0x90, 0xaf, 0xa0, 0xc5, 0x79, 0x4b, 0x4f, 0x33, 0xa2, 0x9e, 0x26, 0x80, 0x0c,
	0xeb, 0x2f, 0x51, 0xec, 0xe4, 0xb7, 0x50, 0x99, 0xf7, 0x4a, 0x3a, 0x02, 0x39, 0xff, 0x6f, 0x40,
	0xe3, 0xfc, 0x53, 0x45, 0x76, 0x2d, 0x17, 0x76, 0xd4, 0xcf, 0x9c, 0xf2, 0x29, 0x2c, 0x0f, 0x5c,
	0xc7, 0xa1, 0x23, 0x76, 0xa1, 0x96, 0x4d, 0xce, 0x3b, 0xa3, 0xa6, 0x68, 0xd6, 0xd3, 0x98, 0x37,
	0xa1, 0x76, 0x40, 0x99, 0xa8, 0x29, 0x79, 0x7e, 0x08, 0x17, 0xfc, 0x0e, 0x28, 0xdb, 0x0f, 0x1f,
	0x0c, 0x2e, 0xc2, 0xbc, 0x05, 0x0d, 0x9d, 0xb2, 0xc0, 0x73, 0x64, 0x44, 0x5c, 0x67, 0x0e, 0xbe,
	0x0d, 0x2a, 0x9a, 0xce, 0x75, 0xd9, 0x65, 0x32, 0x7e, 0x03, 0xab, 0x1c, 0x35, 0xfd, 0xb4, 0x4b,
	0xc2, 0x11, 0x5d, 0x82, 0xe5, 0x6f, 0x8a, 0x93, 0x3d, 0x75, 0xc7, 0x17, 0xde, 0x54, 0xcd, 0xa7,
	0x8e, 0x89, 0x21, 0x97, 0x19, 0x4c, 0xf2, 0xec, 0xd0, 0x73, 0xa8, 0x79, 0x01, 0xbb, 0x50, 0x2b,
	0x8e, 0x75, 0x89, 0x56, 0xc7, 0x4b, 0xf8, 0xb7, 0x34, 0x5f, 0xff, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0x17, 0x68, 0x48, 0x32, 0x62, 0x23, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DependencyRPCClient is the client API for DependencyRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DependencyRPCClient interface {
	// DRA and syz-manager
	GetVMOffsets(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendBasicBlockNumber(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	GetNewInput(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Inputs, error)
	SendDependency(ctx context.Context, in *Dependency, opts ...grpc.CallOption) (*Empty, error)
	GetCondition(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Conditions, error)
	SendWriteAddress(ctx context.Context, in *WriteAddresses, opts ...grpc.CallOption) (*Empty, error)
	//syz-fuzzer and syz-manager
	Connect(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendNewInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error)
	GetTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Tasks, error)
	GetBootTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Tasks, error)
	ReturnTasks(ctx context.Context, in *Tasks, opts ...grpc.CallOption) (*Empty, error)
	SendBootInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error)
	SendUnstableInput(ctx context.Context, in *UnstableInput, opts ...grpc.CallOption) (*Empty, error)
	SendLog(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendStat(ctx context.Context, in *Statistic, opts ...grpc.CallOption) (*Empty, error)
	GetNeed(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendNeedInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error)
}

type dependencyRPCClient struct {
	cc *grpc.ClientConn
}

func NewDependencyRPCClient(cc *grpc.ClientConn) DependencyRPCClient {
	return &dependencyRPCClient{cc}
}

func (c *dependencyRPCClient) GetVMOffsets(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetVMOffsets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendBasicBlockNumber(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendBasicBlockNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetNewInput(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Inputs, error) {
	out := new(Inputs)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetNewInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendDependency(ctx context.Context, in *Dependency, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendDependency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetCondition(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Conditions, error) {
	out := new(Conditions)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendWriteAddress(ctx context.Context, in *WriteAddresses, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendWriteAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) Connect(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendNewInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendNewInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetBootTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetBootTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) ReturnTasks(ctx context.Context, in *Tasks, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/ReturnTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendBootInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendBootInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendUnstableInput(ctx context.Context, in *UnstableInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendUnstableInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendLog(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendStat(ctx context.Context, in *Statistic, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/sendStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetNeed(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetNeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendNeedInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendNeedInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DependencyRPCServer is the server API for DependencyRPC service.
type DependencyRPCServer interface {
	// DRA and syz-manager
	GetVMOffsets(context.Context, *Empty) (*Empty, error)
	SendBasicBlockNumber(context.Context, *Empty) (*Empty, error)
	GetNewInput(context.Context, *Empty) (*Inputs, error)
	SendDependency(context.Context, *Dependency) (*Empty, error)
	GetCondition(context.Context, *Empty) (*Conditions, error)
	SendWriteAddress(context.Context, *WriteAddresses) (*Empty, error)
	//syz-fuzzer and syz-manager
	Connect(context.Context, *Empty) (*Empty, error)
	SendNewInput(context.Context, *Input) (*Empty, error)
	GetTasks(context.Context, *Empty) (*Tasks, error)
	GetBootTasks(context.Context, *Empty) (*Tasks, error)
	ReturnTasks(context.Context, *Tasks) (*Empty, error)
	SendBootInput(context.Context, *Input) (*Empty, error)
	SendUnstableInput(context.Context, *UnstableInput) (*Empty, error)
	SendLog(context.Context, *Empty) (*Empty, error)
	SendStat(context.Context, *Statistic) (*Empty, error)
	GetNeed(context.Context, *Empty) (*Empty, error)
	SendNeedInput(context.Context, *Input) (*Empty, error)
}

// UnimplementedDependencyRPCServer can be embedded to have forward compatible implementations.
type UnimplementedDependencyRPCServer struct {
}

func (*UnimplementedDependencyRPCServer) GetVMOffsets(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVMOffsets not implemented")
}
func (*UnimplementedDependencyRPCServer) SendBasicBlockNumber(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendBasicBlockNumber not implemented")
}
func (*UnimplementedDependencyRPCServer) GetNewInput(ctx context.Context, req *Empty) (*Inputs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNewInput not implemented")
}
func (*UnimplementedDependencyRPCServer) SendDependency(ctx context.Context, req *Dependency) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendDependency not implemented")
}
func (*UnimplementedDependencyRPCServer) GetCondition(ctx context.Context, req *Empty) (*Conditions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCondition not implemented")
}
func (*UnimplementedDependencyRPCServer) SendWriteAddress(ctx context.Context, req *WriteAddresses) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendWriteAddress not implemented")
}
func (*UnimplementedDependencyRPCServer) Connect(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedDependencyRPCServer) SendNewInput(ctx context.Context, req *Input) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNewInput not implemented")
}
func (*UnimplementedDependencyRPCServer) GetTasks(ctx context.Context, req *Empty) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasks not implemented")
}
func (*UnimplementedDependencyRPCServer) GetBootTasks(ctx context.Context, req *Empty) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBootTasks not implemented")
}
func (*UnimplementedDependencyRPCServer) ReturnTasks(ctx context.Context, req *Tasks) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnTasks not implemented")
}
func (*UnimplementedDependencyRPCServer) SendBootInput(ctx context.Context, req *Input) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendBootInput not implemented")
}
func (*UnimplementedDependencyRPCServer) SendUnstableInput(ctx context.Context, req *UnstableInput) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendUnstableInput not implemented")
}
func (*UnimplementedDependencyRPCServer) SendLog(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLog not implemented")
}
func (*UnimplementedDependencyRPCServer) SendStat(ctx context.Context, req *Statistic) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendStat not implemented")
}
func (*UnimplementedDependencyRPCServer) GetNeed(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNeed not implemented")
}
func (*UnimplementedDependencyRPCServer) SendNeedInput(ctx context.Context, req *Input) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNeedInput not implemented")
}

func RegisterDependencyRPCServer(s *grpc.Server, srv DependencyRPCServer) {
	s.RegisterService(&_DependencyRPC_serviceDesc, srv)
}

func _DependencyRPC_GetVMOffsets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetVMOffsets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetVMOffsets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetVMOffsets(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendBasicBlockNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendBasicBlockNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendBasicBlockNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendBasicBlockNumber(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetNewInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetNewInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetNewInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetNewInput(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendDependency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dependency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendDependency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendDependency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendDependency(ctx, req.(*Dependency))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetCondition(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendWriteAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteAddresses)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendWriteAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendWriteAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendWriteAddress(ctx, req.(*WriteAddresses))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).Connect(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendNewInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendNewInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendNewInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendNewInput(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetTasks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetBootTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetBootTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetBootTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetBootTasks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_ReturnTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tasks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).ReturnTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/ReturnTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).ReturnTasks(ctx, req.(*Tasks))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendBootInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendBootInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendBootInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendBootInput(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendUnstableInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnstableInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendUnstableInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendUnstableInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendUnstableInput(ctx, req.(*UnstableInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendLog(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Statistic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendStat(ctx, req.(*Statistic))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetNeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetNeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetNeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetNeed(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendNeedInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendNeedInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendNeedInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendNeedInput(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

var _DependencyRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dra.DependencyRPC",
	HandlerType: (*DependencyRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVMOffsets",
			Handler:    _DependencyRPC_GetVMOffsets_Handler,
		},
		{
			MethodName: "SendBasicBlockNumber",
			Handler:    _DependencyRPC_SendBasicBlockNumber_Handler,
		},
		{
			MethodName: "GetNewInput",
			Handler:    _DependencyRPC_GetNewInput_Handler,
		},
		{
			MethodName: "SendDependency",
			Handler:    _DependencyRPC_SendDependency_Handler,
		},
		{
			MethodName: "GetCondition",
			Handler:    _DependencyRPC_GetCondition_Handler,
		},
		{
			MethodName: "SendWriteAddress",
			Handler:    _DependencyRPC_SendWriteAddress_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _DependencyRPC_Connect_Handler,
		},
		{
			MethodName: "SendNewInput",
			Handler:    _DependencyRPC_SendNewInput_Handler,
		},
		{
			MethodName: "GetTasks",
			Handler:    _DependencyRPC_GetTasks_Handler,
		},
		{
			MethodName: "GetBootTasks",
			Handler:    _DependencyRPC_GetBootTasks_Handler,
		},
		{
			MethodName: "ReturnTasks",
			Handler:    _DependencyRPC_ReturnTasks_Handler,
		},
		{
			MethodName: "SendBootInput",
			Handler:    _DependencyRPC_SendBootInput_Handler,
		},
		{
			MethodName: "SendUnstableInput",
			Handler:    _DependencyRPC_SendUnstableInput_Handler,
		},
		{
			MethodName: "SendLog",
			Handler:    _DependencyRPC_SendLog_Handler,
		},
		{
			MethodName: "sendStat",
			Handler:    _DependencyRPC_SendStat_Handler,
		},
		{
			MethodName: "GetNeed",
			Handler:    _DependencyRPC_GetNeed_Handler,
		},
		{
			MethodName: "SendNeedInput",
			Handler:    _DependencyRPC_SendNeedInput_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "DependencyRPC.proto",
}
