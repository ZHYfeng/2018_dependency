// Code generated by protoc-gen-go. DO NOT EDIT.
// source: DependencyRPC.proto

package dra

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskStatus int32

const (
	TaskStatus_untested  TaskStatus = 0
	TaskStatus_recursive TaskStatus = 1
	TaskStatus_tested    TaskStatus = 2
	TaskStatus_out       TaskStatus = 3
	TaskStatus_covered   TaskStatus = 4
	TaskStatus_testing   TaskStatus = 5
	TaskStatus_unstable  TaskStatus = 6
)

var TaskStatus_name = map[int32]string{
	0: "untested",
	1: "recursive",
	2: "tested",
	3: "out",
	4: "covered",
	5: "testing",
	6: "unstable",
}

var TaskStatus_value = map[string]int32{
	"untested":  0,
	"recursive": 1,
	"tested":    2,
	"out":       3,
	"covered":   4,
	"testing":   5,
	"unstable":  6,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{0}
}

type FuzzingStat int32

const (
	FuzzingStat_StatDefault    FuzzingStat = 0
	FuzzingStat_StatGenerate   FuzzingStat = 1
	FuzzingStat_StatFuzz       FuzzingStat = 2
	FuzzingStat_StatCandidate  FuzzingStat = 3
	FuzzingStat_StatTriage     FuzzingStat = 4
	FuzzingStat_StatMinimize   FuzzingStat = 5
	FuzzingStat_StatSmash      FuzzingStat = 6
	FuzzingStat_StatHint       FuzzingStat = 7
	FuzzingStat_StatSeed       FuzzingStat = 8
	FuzzingStat_StatDependency FuzzingStat = 9
)

var FuzzingStat_name = map[int32]string{
	0: "StatDefault",
	1: "StatGenerate",
	2: "StatFuzz",
	3: "StatCandidate",
	4: "StatTriage",
	5: "StatMinimize",
	6: "StatSmash",
	7: "StatHint",
	8: "StatSeed",
	9: "StatDependency",
}

var FuzzingStat_value = map[string]int32{
	"StatDefault":    0,
	"StatGenerate":   1,
	"StatFuzz":       2,
	"StatCandidate":  3,
	"StatTriage":     4,
	"StatMinimize":   5,
	"StatSmash":      6,
	"StatHint":       7,
	"StatSeed":       8,
	"StatDependency": 9,
}

func (x FuzzingStat) String() string {
	return proto.EnumName(FuzzingStat_name, int32(x))
}

func (FuzzingStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{1}
}

type Empty struct {
	Address              uint32   `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func (m *Empty) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *Empty) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Condition struct {
	ConditionAddress            uint64   `protobuf:"varint,1,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	SyzkallerConditionAddress   uint32   `protobuf:"varint,2,opt,name=syzkaller_condition_address,json=syzkallerConditionAddress,proto3" json:"syzkaller_condition_address,omitempty"`
	UncoveredAddress            uint64   `protobuf:"varint,3,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	SyzkallerUncoveredAddress   uint32   `protobuf:"varint,4,opt,name=syzkaller_uncovered_address,json=syzkallerUncoveredAddress,proto3" json:"syzkaller_uncovered_address,omitempty"`
	Idx                         uint32   `protobuf:"varint,5,opt,name=idx,proto3" json:"idx,omitempty"`
	Successor                   uint64   `protobuf:"varint,6,opt,name=successor,proto3" json:"successor,omitempty"`
	RightBranchAddress          []uint64 `protobuf:"varint,7,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	SyzkallerRightBranchAddress []uint32 `protobuf:"varint,8,rep,packed,name=syzkaller_right_branch_address,json=syzkallerRightBranchAddress,proto3" json:"syzkaller_right_branch_address,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{1}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetConditionAddress() uint64 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *Condition) GetSyzkallerConditionAddress() uint32 {
	if m != nil {
		return m.SyzkallerConditionAddress
	}
	return 0
}

func (m *Condition) GetUncoveredAddress() uint64 {
	if m != nil {
		return m.UncoveredAddress
	}
	return 0
}

func (m *Condition) GetSyzkallerUncoveredAddress() uint32 {
	if m != nil {
		return m.SyzkallerUncoveredAddress
	}
	return 0
}

func (m *Condition) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *Condition) GetSuccessor() uint64 {
	if m != nil {
		return m.Successor
	}
	return 0
}

func (m *Condition) GetRightBranchAddress() []uint64 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

func (m *Condition) GetSyzkallerRightBranchAddress() []uint32 {
	if m != nil {
		return m.SyzkallerRightBranchAddress
	}
	return nil
}

type Conditions struct {
	//    map<uint64, Condition> condition = 10;
	Condition            []*Condition `protobuf:"bytes,10,rep,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Conditions) Reset()         { *m = Conditions{} }
func (m *Conditions) String() string { return proto.CompactTextString(m) }
func (*Conditions) ProtoMessage()    {}
func (*Conditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{2}
}

func (m *Conditions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conditions.Unmarshal(m, b)
}
func (m *Conditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conditions.Marshal(b, m, deterministic)
}
func (m *Conditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conditions.Merge(m, src)
}
func (m *Conditions) XXX_Size() int {
	return xxx_messageInfo_Conditions.Size(m)
}
func (m *Conditions) XXX_DiscardUnknown() {
	xxx_messageInfo_Conditions.DiscardUnknown(m)
}

var xxx_messageInfo_Conditions proto.InternalMessageInfo

func (m *Conditions) GetCondition() []*Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type WriteAddresses struct {
	Condition *Condition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	//    map<uint32, WriteAddress> write_address = 4;
	WriteAddress         []*WriteAddress `protobuf:"bytes,4,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WriteAddresses) Reset()         { *m = WriteAddresses{} }
func (m *WriteAddresses) String() string { return proto.CompactTextString(m) }
func (*WriteAddresses) ProtoMessage()    {}
func (*WriteAddresses) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{3}
}

func (m *WriteAddresses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAddresses.Unmarshal(m, b)
}
func (m *WriteAddresses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAddresses.Marshal(b, m, deterministic)
}
func (m *WriteAddresses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAddresses.Merge(m, src)
}
func (m *WriteAddresses) XXX_Size() int {
	return xxx_messageInfo_WriteAddresses.Size(m)
}
func (m *WriteAddresses) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAddresses.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAddresses proto.InternalMessageInfo

func (m *WriteAddresses) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *WriteAddresses) GetWriteAddress() []*WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type Call struct {
	Idx                  uint32            `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	Address              map[uint32]uint32 `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{4}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *Call) GetAddress() map[uint32]uint32 {
	if m != nil {
		return m.Address
	}
	return nil
}

type Inputs struct {
	// map<string, Input> input = 1;
	Input                []*Input `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inputs) Reset()         { *m = Inputs{} }
func (m *Inputs) String() string { return proto.CompactTextString(m) }
func (*Inputs) ProtoMessage()    {}
func (*Inputs) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{5}
}

func (m *Inputs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inputs.Unmarshal(m, b)
}
func (m *Inputs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inputs.Marshal(b, m, deterministic)
}
func (m *Inputs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inputs.Merge(m, src)
}
func (m *Inputs) XXX_Size() int {
	return xxx_messageInfo_Inputs.Size(m)
}
func (m *Inputs) XXX_DiscardUnknown() {
	xxx_messageInfo_Inputs.DiscardUnknown(m)
}

var xxx_messageInfo_Inputs proto.InternalMessageInfo

func (m *Inputs) GetInput() []*Input {
	if m != nil {
		return m.Input
	}
	return nil
}

//for syz-fuzzer
type Dependencytask struct {
	Input                *Input   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Name                 string   `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dependencytask) Reset()         { *m = Dependencytask{} }
func (m *Dependencytask) String() string { return proto.CompactTextString(m) }
func (*Dependencytask) ProtoMessage()    {}
func (*Dependencytask) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{6}
}

func (m *Dependencytask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependencytask.Unmarshal(m, b)
}
func (m *Dependencytask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependencytask.Marshal(b, m, deterministic)
}
func (m *Dependencytask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependencytask.Merge(m, src)
}
func (m *Dependencytask) XXX_Size() int {
	return xxx_messageInfo_Dependencytask.Size(m)
}
func (m *Dependencytask) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependencytask.DiscardUnknown(m)
}

var xxx_messageInfo_Dependencytask proto.InternalMessageInfo

func (m *Dependencytask) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Dependencytask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RunTimeData struct {
	Program                 []byte     `protobuf:"bytes,2,opt,name=program,proto3" json:"program,omitempty"`
	TaskStatus              TaskStatus `protobuf:"varint,3,opt,name=task_status,json=taskStatus,proto3,enum=dra.TaskStatus" json:"task_status,omitempty"`
	RcursiveCount           uint32     `protobuf:"varint,4,opt,name=rcursive_count,json=rcursiveCount,proto3" json:"rcursive_count,omitempty"`
	Priority                uint32     `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Idx                     uint32     `protobuf:"varint,10,opt,name=idx,proto3" json:"idx,omitempty"`
	CheckCondition          bool       `protobuf:"varint,11,opt,name=checkCondition,proto3" json:"checkCondition,omitempty"`
	ConditionAddress        uint32     `protobuf:"varint,12,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	CheckAddress            bool       `protobuf:"varint,13,opt,name=checkAddress,proto3" json:"checkAddress,omitempty"`
	Address                 uint32     `protobuf:"varint,14,opt,name=address,proto3" json:"address,omitempty"`
	CheckRightBranchAddress bool       `protobuf:"varint,15,opt,name=checkRightBranchAddress,proto3" json:"checkRightBranchAddress,omitempty"`
	//    map<uint32, uint32> right_branch_address = 16;
	RightBranchAddress   []uint32 `protobuf:"varint,16,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunTimeData) Reset()         { *m = RunTimeData{} }
func (m *RunTimeData) String() string { return proto.CompactTextString(m) }
func (*RunTimeData) ProtoMessage()    {}
func (*RunTimeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{7}
}

func (m *RunTimeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTimeData.Unmarshal(m, b)
}
func (m *RunTimeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTimeData.Marshal(b, m, deterministic)
}
func (m *RunTimeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTimeData.Merge(m, src)
}
func (m *RunTimeData) XXX_Size() int {
	return xxx_messageInfo_RunTimeData.Size(m)
}
func (m *RunTimeData) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTimeData.DiscardUnknown(m)
}

var xxx_messageInfo_RunTimeData proto.InternalMessageInfo

func (m *RunTimeData) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *RunTimeData) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_untested
}

func (m *RunTimeData) GetRcursiveCount() uint32 {
	if m != nil {
		return m.RcursiveCount
	}
	return 0
}

func (m *RunTimeData) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *RunTimeData) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *RunTimeData) GetCheckCondition() bool {
	if m != nil {
		return m.CheckCondition
	}
	return false
}

func (m *RunTimeData) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *RunTimeData) GetCheckAddress() bool {
	if m != nil {
		return m.CheckAddress
	}
	return false
}

func (m *RunTimeData) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *RunTimeData) GetCheckRightBranchAddress() bool {
	if m != nil {
		return m.CheckRightBranchAddress
	}
	return false
}

func (m *RunTimeData) GetRightBranchAddress() []uint32 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

type IoctlCmdInput struct {
	Sig string `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	// bits
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Cmd                  uint64   `protobuf:"varint,11,opt,name=cmd,proto3" json:"cmd,omitempty"`
	WriteAddress         uint32   `protobuf:"varint,21,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IoctlCmdInput) Reset()         { *m = IoctlCmdInput{} }
func (m *IoctlCmdInput) String() string { return proto.CompactTextString(m) }
func (*IoctlCmdInput) ProtoMessage()    {}
func (*IoctlCmdInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{8}
}

func (m *IoctlCmdInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IoctlCmdInput.Unmarshal(m, b)
}
func (m *IoctlCmdInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IoctlCmdInput.Marshal(b, m, deterministic)
}
func (m *IoctlCmdInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IoctlCmdInput.Merge(m, src)
}
func (m *IoctlCmdInput) XXX_Size() int {
	return xxx_messageInfo_IoctlCmdInput.Size(m)
}
func (m *IoctlCmdInput) XXX_DiscardUnknown() {
	xxx_messageInfo_IoctlCmdInput.DiscardUnknown(m)
}

var xxx_messageInfo_IoctlCmdInput proto.InternalMessageInfo

func (m *IoctlCmdInput) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *IoctlCmdInput) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *IoctlCmdInput) GetCmd() uint64 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

func (m *IoctlCmdInput) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

type IoctlCmd struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cmd  uint64 `protobuf:"varint,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	//    repeated Condition critical_condition = 4;
	//    map<uint32, Condition> critical_condition = 4;
	// it is the data of this syscall
	RunTimeDate *RunTimeData `protobuf:"bytes,5,opt,name=run_time_date,json=runTimeDate,proto3" json:"run_time_date,omitempty"`
	//    repeated WriteAddress write_address = 11;
	WriteAddress         map[uint32]uint32 `protobuf:"bytes,11,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IoctlCmd) Reset()         { *m = IoctlCmd{} }
func (m *IoctlCmd) String() string { return proto.CompactTextString(m) }
func (*IoctlCmd) ProtoMessage()    {}
func (*IoctlCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{9}
}

func (m *IoctlCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IoctlCmd.Unmarshal(m, b)
}
func (m *IoctlCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IoctlCmd.Marshal(b, m, deterministic)
}
func (m *IoctlCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IoctlCmd.Merge(m, src)
}
func (m *IoctlCmd) XXX_Size() int {
	return xxx_messageInfo_IoctlCmd.Size(m)
}
func (m *IoctlCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_IoctlCmd.DiscardUnknown(m)
}

var xxx_messageInfo_IoctlCmd proto.InternalMessageInfo

func (m *IoctlCmd) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IoctlCmd) GetCmd() uint64 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

func (m *IoctlCmd) GetRunTimeDate() *RunTimeData {
	if m != nil {
		return m.RunTimeDate
	}
	return nil
}

func (m *IoctlCmd) GetWriteAddress() map[uint32]uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type WriteAddress struct {
	// the address writes to global variable
	WriteAddress uint32 `protobuf:"varint,2,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	// the address of condition is related to this global variable
	ConditionAddress uint32 `protobuf:"varint,3,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	// uncovered address,
	UncoveredAddress map[uint32]*WriteAddressAttributes `protobuf:"bytes,23,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// cmd,
	IoctlCmd map[uint64]uint32 `protobuf:"bytes,24,rep,name=ioctl_cmd,json=ioctlCmd,proto3" json:"ioctl_cmd,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// sig, index by bits
	Input map[string]uint32 `protobuf:"bytes,25,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// it is the data of uncovered address
	RunTimeDate          *RunTimeData `protobuf:"bytes,11,opt,name=run_time_date,json=runTimeDate,proto3" json:"run_time_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WriteAddress) Reset()         { *m = WriteAddress{} }
func (m *WriteAddress) String() string { return proto.CompactTextString(m) }
func (*WriteAddress) ProtoMessage()    {}
func (*WriteAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{10}
}

func (m *WriteAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAddress.Unmarshal(m, b)
}
func (m *WriteAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAddress.Marshal(b, m, deterministic)
}
func (m *WriteAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAddress.Merge(m, src)
}
func (m *WriteAddress) XXX_Size() int {
	return xxx_messageInfo_WriteAddress.Size(m)
}
func (m *WriteAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAddress.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAddress proto.InternalMessageInfo

func (m *WriteAddress) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *WriteAddress) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *WriteAddress) GetUncoveredAddress() map[uint32]*WriteAddressAttributes {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *WriteAddress) GetIoctlCmd() map[uint64]uint32 {
	if m != nil {
		return m.IoctlCmd
	}
	return nil
}

func (m *WriteAddress) GetInput() map[string]uint32 {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *WriteAddress) GetRunTimeDate() *RunTimeData {
	if m != nil {
		return m.RunTimeDate
	}
	return nil
}

type WriteAddressAttributes struct {
	// the address writes to global variable
	WriteAddress         uint32   `protobuf:"varint,2,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	Repeat               uint32   `protobuf:"varint,7,opt,name=repeat,proto3" json:"repeat,omitempty"`
	Prio                 uint32   `protobuf:"varint,6,opt,name=prio,proto3" json:"prio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteAddressAttributes) Reset()         { *m = WriteAddressAttributes{} }
func (m *WriteAddressAttributes) String() string { return proto.CompactTextString(m) }
func (*WriteAddressAttributes) ProtoMessage()    {}
func (*WriteAddressAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{11}
}

func (m *WriteAddressAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAddressAttributes.Unmarshal(m, b)
}
func (m *WriteAddressAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAddressAttributes.Marshal(b, m, deterministic)
}
func (m *WriteAddressAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAddressAttributes.Merge(m, src)
}
func (m *WriteAddressAttributes) XXX_Size() int {
	return xxx_messageInfo_WriteAddressAttributes.Size(m)
}
func (m *WriteAddressAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAddressAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAddressAttributes proto.InternalMessageInfo

func (m *WriteAddressAttributes) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *WriteAddressAttributes) GetRepeat() uint32 {
	if m != nil {
		return m.Repeat
	}
	return 0
}

func (m *WriteAddressAttributes) GetPrio() uint32 {
	if m != nil {
		return m.Prio
	}
	return 0
}

type UncoveredAddress struct {
	ConditionAddress   uint32   `protobuf:"varint,1,opt,name=condition_address,json=conditionAddress,proto3" json:"condition_address,omitempty"`
	UncoveredAddress   uint32   `protobuf:"varint,2,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	RightBranchAddress []uint32 `protobuf:"varint,3,rep,packed,name=right_branch_address,json=rightBranchAddress,proto3" json:"right_branch_address,omitempty"`
	Bbcount            uint32   `protobuf:"varint,4,opt,name=bbcount,proto3" json:"bbcount,omitempty"`
	// sig, index by bits
	Input                map[string]uint32                  `protobuf:"bytes,22,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	WriteAddress         map[uint32]*WriteAddressAttributes `protobuf:"bytes,23,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RunTimeDate          *RunTimeData                       `protobuf:"bytes,8,opt,name=run_time_date,json=runTimeDate,proto3" json:"run_time_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *UncoveredAddress) Reset()         { *m = UncoveredAddress{} }
func (m *UncoveredAddress) String() string { return proto.CompactTextString(m) }
func (*UncoveredAddress) ProtoMessage()    {}
func (*UncoveredAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{12}
}

func (m *UncoveredAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UncoveredAddress.Unmarshal(m, b)
}
func (m *UncoveredAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UncoveredAddress.Marshal(b, m, deterministic)
}
func (m *UncoveredAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UncoveredAddress.Merge(m, src)
}
func (m *UncoveredAddress) XXX_Size() int {
	return xxx_messageInfo_UncoveredAddress.Size(m)
}
func (m *UncoveredAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_UncoveredAddress.DiscardUnknown(m)
}

var xxx_messageInfo_UncoveredAddress proto.InternalMessageInfo

func (m *UncoveredAddress) GetConditionAddress() uint32 {
	if m != nil {
		return m.ConditionAddress
	}
	return 0
}

func (m *UncoveredAddress) GetUncoveredAddress() uint32 {
	if m != nil {
		return m.UncoveredAddress
	}
	return 0
}

func (m *UncoveredAddress) GetRightBranchAddress() []uint32 {
	if m != nil {
		return m.RightBranchAddress
	}
	return nil
}

func (m *UncoveredAddress) GetBbcount() uint32 {
	if m != nil {
		return m.Bbcount
	}
	return 0
}

func (m *UncoveredAddress) GetInput() map[string]uint32 {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *UncoveredAddress) GetWriteAddress() map[uint32]*WriteAddressAttributes {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

func (m *UncoveredAddress) GetRunTimeDate() *RunTimeData {
	if m != nil {
		return m.RunTimeDate
	}
	return nil
}

type Path struct {
	Address              []uint32 `protobuf:"varint,1,rep,packed,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{13}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetAddress() []uint32 {
	if m != nil {
		return m.Address
	}
	return nil
}

type UnstableInput struct {
	NewPath              *Path    `protobuf:"bytes,1,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
	UnstablePath         *Path    `protobuf:"bytes,2,opt,name=unstable_path,json=unstablePath,proto3" json:"unstable_path,omitempty"`
	Idx                  int32    `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Sig                  string   `protobuf:"bytes,11,opt,name=sig,proto3" json:"sig,omitempty"`
	Program              []byte   `protobuf:"bytes,12,opt,name=program,proto3" json:"program,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnstableInput) Reset()         { *m = UnstableInput{} }
func (m *UnstableInput) String() string { return proto.CompactTextString(m) }
func (*UnstableInput) ProtoMessage()    {}
func (*UnstableInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{14}
}

func (m *UnstableInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnstableInput.Unmarshal(m, b)
}
func (m *UnstableInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnstableInput.Marshal(b, m, deterministic)
}
func (m *UnstableInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnstableInput.Merge(m, src)
}
func (m *UnstableInput) XXX_Size() int {
	return xxx_messageInfo_UnstableInput.Size(m)
}
func (m *UnstableInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnstableInput.DiscardUnknown(m)
}

var xxx_messageInfo_UnstableInput proto.InternalMessageInfo

func (m *UnstableInput) GetNewPath() *Path {
	if m != nil {
		return m.NewPath
	}
	return nil
}

func (m *UnstableInput) GetUnstablePath() *Path {
	if m != nil {
		return m.UnstablePath
	}
	return nil
}

func (m *UnstableInput) GetIdx() int32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *UnstableInput) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *UnstableInput) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

type Input struct {
	// for program
	Sig     string           `protobuf:"bytes,11,opt,name=sig,proto3" json:"sig,omitempty"`
	Program []byte           `protobuf:"bytes,12,opt,name=program,proto3" json:"program,omitempty"`
	Call    map[uint32]*Call `protobuf:"bytes,13,rep,name=call,proto3" json:"call,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// for dependency
	Stat FuzzingStat `protobuf:"varint,21,opt,name=stat,proto3,enum=dra.FuzzingStat" json:"stat,omitempty"`
	// uncovered address, index by bits
	UncoveredAddress map[uint32]uint32 `protobuf:"bytes,22,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// write address, index by bits
	WriteAddress         map[uint32]uint32 `protobuf:"bytes,25,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{15}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *Input) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *Input) GetCall() map[uint32]*Call {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *Input) GetStat() FuzzingStat {
	if m != nil {
		return m.Stat
	}
	return FuzzingStat_StatDefault
}

func (m *Input) GetUncoveredAddress() map[uint32]uint32 {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Input) GetWriteAddress() map[uint32]uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type Dependency struct {
	Input                *Input            `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	UncoveredAddress     *UncoveredAddress `protobuf:"bytes,2,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	WriteAddress         []*WriteAddress   `protobuf:"bytes,3,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Dependency) Reset()         { *m = Dependency{} }
func (m *Dependency) String() string { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()    {}
func (*Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{16}
}

func (m *Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependency.Unmarshal(m, b)
}
func (m *Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependency.Marshal(b, m, deterministic)
}
func (m *Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependency.Merge(m, src)
}
func (m *Dependency) XXX_Size() int {
	return xxx_messageInfo_Dependency.Size(m)
}
func (m *Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Dependency proto.InternalMessageInfo

func (m *Dependency) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Dependency) GetUncoveredAddress() *UncoveredAddress {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Dependency) GetWriteAddress() []*WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type RecursiveIoctlCmd struct {
	IoctlCmd             *IoctlCmd                `protobuf:"bytes,1,opt,name=ioctl_cmd,json=ioctlCmd,proto3" json:"ioctl_cmd,omitempty"`
	CriticalCondition    []*Condition             `protobuf:"bytes,2,rep,name=critical_condition,json=criticalCondition,proto3" json:"critical_condition,omitempty"`
	RunTimeData          *RunTimeData             `protobuf:"bytes,3,opt,name=run_time_data,json=runTimeData,proto3" json:"run_time_data,omitempty"`
	WriteAddress         []*RecursiveWriteAddress `protobuf:"bytes,11,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RecursiveIoctlCmd) Reset()         { *m = RecursiveIoctlCmd{} }
func (m *RecursiveIoctlCmd) String() string { return proto.CompactTextString(m) }
func (*RecursiveIoctlCmd) ProtoMessage()    {}
func (*RecursiveIoctlCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{17}
}

func (m *RecursiveIoctlCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecursiveIoctlCmd.Unmarshal(m, b)
}
func (m *RecursiveIoctlCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecursiveIoctlCmd.Marshal(b, m, deterministic)
}
func (m *RecursiveIoctlCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecursiveIoctlCmd.Merge(m, src)
}
func (m *RecursiveIoctlCmd) XXX_Size() int {
	return xxx_messageInfo_RecursiveIoctlCmd.Size(m)
}
func (m *RecursiveIoctlCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_RecursiveIoctlCmd.DiscardUnknown(m)
}

var xxx_messageInfo_RecursiveIoctlCmd proto.InternalMessageInfo

func (m *RecursiveIoctlCmd) GetIoctlCmd() *IoctlCmd {
	if m != nil {
		return m.IoctlCmd
	}
	return nil
}

func (m *RecursiveIoctlCmd) GetCriticalCondition() []*Condition {
	if m != nil {
		return m.CriticalCondition
	}
	return nil
}

func (m *RecursiveIoctlCmd) GetRunTimeData() *RunTimeData {
	if m != nil {
		return m.RunTimeData
	}
	return nil
}

func (m *RecursiveIoctlCmd) GetWriteAddress() []*RecursiveWriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type RecursiveWriteAddress struct {
	WriteAddress         *WriteAddress        `protobuf:"bytes,1,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	RunTimeData          *RunTimeData         `protobuf:"bytes,3,opt,name=run_time_data,json=runTimeData,proto3" json:"run_time_data,omitempty"`
	IoctlCmd             []*RecursiveIoctlCmd `protobuf:"bytes,4,rep,name=ioctl_cmd,json=ioctlCmd,proto3" json:"ioctl_cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RecursiveWriteAddress) Reset()         { *m = RecursiveWriteAddress{} }
func (m *RecursiveWriteAddress) String() string { return proto.CompactTextString(m) }
func (*RecursiveWriteAddress) ProtoMessage()    {}
func (*RecursiveWriteAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{18}
}

func (m *RecursiveWriteAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecursiveWriteAddress.Unmarshal(m, b)
}
func (m *RecursiveWriteAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecursiveWriteAddress.Marshal(b, m, deterministic)
}
func (m *RecursiveWriteAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecursiveWriteAddress.Merge(m, src)
}
func (m *RecursiveWriteAddress) XXX_Size() int {
	return xxx_messageInfo_RecursiveWriteAddress.Size(m)
}
func (m *RecursiveWriteAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_RecursiveWriteAddress.DiscardUnknown(m)
}

var xxx_messageInfo_RecursiveWriteAddress proto.InternalMessageInfo

func (m *RecursiveWriteAddress) GetWriteAddress() *WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

func (m *RecursiveWriteAddress) GetRunTimeData() *RunTimeData {
	if m != nil {
		return m.RunTimeData
	}
	return nil
}

func (m *RecursiveWriteAddress) GetIoctlCmd() []*RecursiveIoctlCmd {
	if m != nil {
		return m.IoctlCmd
	}
	return nil
}

type RecursiveDependency struct {
	Input                *Input                   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	UncoveredAddress     *UncoveredAddress        `protobuf:"bytes,2,opt,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty"`
	RunTimeData          *RunTimeData             `protobuf:"bytes,3,opt,name=run_time_data,json=runTimeData,proto3" json:"run_time_data,omitempty"`
	WriteAddress         []*RecursiveWriteAddress `protobuf:"bytes,11,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RecursiveDependency) Reset()         { *m = RecursiveDependency{} }
func (m *RecursiveDependency) String() string { return proto.CompactTextString(m) }
func (*RecursiveDependency) ProtoMessage()    {}
func (*RecursiveDependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{19}
}

func (m *RecursiveDependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecursiveDependency.Unmarshal(m, b)
}
func (m *RecursiveDependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecursiveDependency.Marshal(b, m, deterministic)
}
func (m *RecursiveDependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecursiveDependency.Merge(m, src)
}
func (m *RecursiveDependency) XXX_Size() int {
	return xxx_messageInfo_RecursiveDependency.Size(m)
}
func (m *RecursiveDependency) XXX_DiscardUnknown() {
	xxx_messageInfo_RecursiveDependency.DiscardUnknown(m)
}

var xxx_messageInfo_RecursiveDependency proto.InternalMessageInfo

func (m *RecursiveDependency) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *RecursiveDependency) GetUncoveredAddress() *UncoveredAddress {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *RecursiveDependency) GetRunTimeData() *RunTimeData {
	if m != nil {
		return m.RunTimeData
	}
	return nil
}

func (m *RecursiveDependency) GetWriteAddress() []*RecursiveWriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

type Corpus struct {
	Input                map[string]*Input            `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UncoveredAddress     map[uint32]*UncoveredAddress `protobuf:"bytes,4,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress       map[uint32]*UncoveredAddress `protobuf:"bytes,2,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WriteAddress         map[uint32]*WriteAddress     `protobuf:"bytes,5,rep,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IoctlCmd             map[uint64]*IoctlCmd         `protobuf:"bytes,6,rep,name=ioctl_cmd,json=ioctlCmd,proto3" json:"ioctl_cmd,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tasks                *Tasks                       `protobuf:"bytes,7,opt,name=tasks,proto3" json:"tasks,omitempty"`
	NewInput             map[string]*Input            `protobuf:"bytes,9,rep,name=new_input,json=newInput,proto3" json:"new_input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Corpus) Reset()         { *m = Corpus{} }
func (m *Corpus) String() string { return proto.CompactTextString(m) }
func (*Corpus) ProtoMessage()    {}
func (*Corpus) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{20}
}

func (m *Corpus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Corpus.Unmarshal(m, b)
}
func (m *Corpus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Corpus.Marshal(b, m, deterministic)
}
func (m *Corpus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Corpus.Merge(m, src)
}
func (m *Corpus) XXX_Size() int {
	return xxx_messageInfo_Corpus.Size(m)
}
func (m *Corpus) XXX_DiscardUnknown() {
	xxx_messageInfo_Corpus.DiscardUnknown(m)
}

var xxx_messageInfo_Corpus proto.InternalMessageInfo

func (m *Corpus) GetInput() map[string]*Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Corpus) GetUncoveredAddress() map[uint32]*UncoveredAddress {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Corpus) GetCoveredAddress() map[uint32]*UncoveredAddress {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

func (m *Corpus) GetWriteAddress() map[uint32]*WriteAddress {
	if m != nil {
		return m.WriteAddress
	}
	return nil
}

func (m *Corpus) GetIoctlCmd() map[uint64]*IoctlCmd {
	if m != nil {
		return m.IoctlCmd
	}
	return nil
}

func (m *Corpus) GetTasks() *Tasks {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Corpus) GetNewInput() map[string]*Input {
	if m != nil {
		return m.NewInput
	}
	return nil
}

type UsefulInput struct {
	Input                *Input   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Time                 float64  `protobuf:"fixed64,2,opt,name=time,proto3" json:"time,omitempty"`
	Num                  uint64   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	NewAddress           []uint32 `protobuf:"varint,4,rep,packed,name=new_address,json=newAddress,proto3" json:"new_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsefulInput) Reset()         { *m = UsefulInput{} }
func (m *UsefulInput) String() string { return proto.CompactTextString(m) }
func (*UsefulInput) ProtoMessage()    {}
func (*UsefulInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{21}
}

func (m *UsefulInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsefulInput.Unmarshal(m, b)
}
func (m *UsefulInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsefulInput.Marshal(b, m, deterministic)
}
func (m *UsefulInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsefulInput.Merge(m, src)
}
func (m *UsefulInput) XXX_Size() int {
	return xxx_messageInfo_UsefulInput.Size(m)
}
func (m *UsefulInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UsefulInput.DiscardUnknown(m)
}

var xxx_messageInfo_UsefulInput proto.InternalMessageInfo

func (m *UsefulInput) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *UsefulInput) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *UsefulInput) GetNum() uint64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *UsefulInput) GetNewAddress() []uint32 {
	if m != nil {
		return m.NewAddress
	}
	return nil
}

type Statistic struct {
	Name                 FuzzingStat `protobuf:"varint,1,opt,name=name,proto3,enum=dra.FuzzingStat" json:"name,omitempty"`
	ExecuteNum           uint64      `protobuf:"varint,11,opt,name=executeNum,proto3" json:"executeNum,omitempty"`
	Time                 float64     `protobuf:"fixed64,12,opt,name=time,proto3" json:"time,omitempty"`
	NewTestCaseNum       uint64      `protobuf:"varint,13,opt,name=newTestCaseNum,proto3" json:"newTestCaseNum,omitempty"`
	NewAddressNum        uint64      `protobuf:"varint,14,opt,name=newAddressNum,proto3" json:"newAddressNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Statistic) Reset()         { *m = Statistic{} }
func (m *Statistic) String() string { return proto.CompactTextString(m) }
func (*Statistic) ProtoMessage()    {}
func (*Statistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{22}
}

func (m *Statistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistic.Unmarshal(m, b)
}
func (m *Statistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistic.Marshal(b, m, deterministic)
}
func (m *Statistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistic.Merge(m, src)
}
func (m *Statistic) XXX_Size() int {
	return xxx_messageInfo_Statistic.Size(m)
}
func (m *Statistic) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistic.DiscardUnknown(m)
}

var xxx_messageInfo_Statistic proto.InternalMessageInfo

func (m *Statistic) GetName() FuzzingStat {
	if m != nil {
		return m.Name
	}
	return FuzzingStat_StatDefault
}

func (m *Statistic) GetExecuteNum() uint64 {
	if m != nil {
		return m.ExecuteNum
	}
	return 0
}

func (m *Statistic) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Statistic) GetNewTestCaseNum() uint64 {
	if m != nil {
		return m.NewTestCaseNum
	}
	return 0
}

func (m *Statistic) GetNewAddressNum() uint64 {
	if m != nil {
		return m.NewAddressNum
	}
	return 0
}

type Statistics struct {
	SignalNum            uint64               `protobuf:"varint,1,opt,name=signalNum,proto3" json:"signalNum,omitempty"`
	BasicBlockNumber     uint32               `protobuf:"varint,10,opt,name=basic_block_number,json=basicBlockNumber,proto3" json:"basic_block_number,omitempty"`
	Coverage             *Coverage            `protobuf:"bytes,8,opt,name=coverage,proto3" json:"coverage,omitempty"`
	Stat                 map[int32]*Statistic `protobuf:"bytes,11,rep,name=stat,proto3" json:"stat,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UsefulInput          []*UsefulInput       `protobuf:"bytes,12,rep,name=useful_input,json=usefulInput,proto3" json:"useful_input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Statistics) Reset()         { *m = Statistics{} }
func (m *Statistics) String() string { return proto.CompactTextString(m) }
func (*Statistics) ProtoMessage()    {}
func (*Statistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{23}
}

func (m *Statistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statistics.Unmarshal(m, b)
}
func (m *Statistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statistics.Marshal(b, m, deterministic)
}
func (m *Statistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statistics.Merge(m, src)
}
func (m *Statistics) XXX_Size() int {
	return xxx_messageInfo_Statistics.Size(m)
}
func (m *Statistics) XXX_DiscardUnknown() {
	xxx_messageInfo_Statistics.DiscardUnknown(m)
}

var xxx_messageInfo_Statistics proto.InternalMessageInfo

func (m *Statistics) GetSignalNum() uint64 {
	if m != nil {
		return m.SignalNum
	}
	return 0
}

func (m *Statistics) GetBasicBlockNumber() uint32 {
	if m != nil {
		return m.BasicBlockNumber
	}
	return 0
}

func (m *Statistics) GetCoverage() *Coverage {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Statistics) GetStat() map[int32]*Statistic {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *Statistics) GetUsefulInput() []*UsefulInput {
	if m != nil {
		return m.UsefulInput
	}
	return nil
}

type Task struct {
	Sig          string `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	Index        uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Program      []byte `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	WriteSig     string `protobuf:"bytes,11,opt,name=write_sig,json=writeSig,proto3" json:"write_sig,omitempty"`
	WriteIndex   uint32 `protobuf:"varint,12,opt,name=write_index,json=writeIndex,proto3" json:"write_index,omitempty"`
	WriteProgram []byte `protobuf:"bytes,13,opt,name=write_program,json=writeProgram,proto3" json:"write_program,omitempty"`
	WriteAddress uint32 `protobuf:"varint,14,opt,name=write_address,json=writeAddress,proto3" json:"write_address,omitempty"`
	Priority     uint32 `protobuf:"varint,15,opt,name=priority,proto3" json:"priority,omitempty"`
	// uncovered address, priority
	UncoveredAddress        map[uint32]*RunTimeData `protobuf:"bytes,21,rep,name=uncovered_address,json=uncoveredAddress,proto3" json:"uncovered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoveredAddress          map[uint32]*RunTimeData `protobuf:"bytes,23,rep,name=covered_address,json=coveredAddress,proto3" json:"covered_address,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskStatus              TaskStatus              `protobuf:"varint,24,opt,name=task_status,json=taskStatus,proto3,enum=dra.TaskStatus" json:"task_status,omitempty"`
	CheckWriteAddress       bool                    `protobuf:"varint,25,opt,name=check_write_address,json=checkWriteAddress,proto3" json:"check_write_address,omitempty"`
	CheckWriteAddressFinal  bool                    `protobuf:"varint,26,opt,name=check_write_address_final,json=checkWriteAddressFinal,proto3" json:"check_write_address_final,omitempty"`
	CheckWriteAddressRemove bool                    `protobuf:"varint,27,opt,name=check_write_address_remove,json=checkWriteAddressRemove,proto3" json:"check_write_address_remove,omitempty"`
	FinalIdx                uint32                  `protobuf:"varint,28,opt,name=final_idx,json=finalIdx,proto3" json:"final_idx,omitempty"`
	FinalWriteIdx           uint32                  `protobuf:"varint,29,opt,name=final_write_idx,json=finalWriteIdx,proto3" json:"final_write_idx,omitempty"`
	RemoveIdx               uint32                  `protobuf:"varint,30,opt,name=remove_idx,json=removeIdx,proto3" json:"remove_idx,omitempty"`
	RemoveWriteIdx          uint32                  `protobuf:"varint,31,opt,name=remove_write_idx,json=removeWriteIdx,proto3" json:"remove_write_idx,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                `json:"-"`
	XXX_unrecognized        []byte                  `json:"-"`
	XXX_sizecache           int32                   `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{24}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

func (m *Task) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Task) GetProgram() []byte {
	if m != nil {
		return m.Program
	}
	return nil
}

func (m *Task) GetWriteSig() string {
	if m != nil {
		return m.WriteSig
	}
	return ""
}

func (m *Task) GetWriteIndex() uint32 {
	if m != nil {
		return m.WriteIndex
	}
	return 0
}

func (m *Task) GetWriteProgram() []byte {
	if m != nil {
		return m.WriteProgram
	}
	return nil
}

func (m *Task) GetWriteAddress() uint32 {
	if m != nil {
		return m.WriteAddress
	}
	return 0
}

func (m *Task) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Task) GetUncoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.UncoveredAddress
	}
	return nil
}

func (m *Task) GetCoveredAddress() map[uint32]*RunTimeData {
	if m != nil {
		return m.CoveredAddress
	}
	return nil
}

func (m *Task) GetTaskStatus() TaskStatus {
	if m != nil {
		return m.TaskStatus
	}
	return TaskStatus_untested
}

func (m *Task) GetCheckWriteAddress() bool {
	if m != nil {
		return m.CheckWriteAddress
	}
	return false
}

func (m *Task) GetCheckWriteAddressFinal() bool {
	if m != nil {
		return m.CheckWriteAddressFinal
	}
	return false
}

func (m *Task) GetCheckWriteAddressRemove() bool {
	if m != nil {
		return m.CheckWriteAddressRemove
	}
	return false
}

func (m *Task) GetFinalIdx() uint32 {
	if m != nil {
		return m.FinalIdx
	}
	return 0
}

func (m *Task) GetFinalWriteIdx() uint32 {
	if m != nil {
		return m.FinalWriteIdx
	}
	return 0
}

func (m *Task) GetRemoveIdx() uint32 {
	if m != nil {
		return m.RemoveIdx
	}
	return 0
}

func (m *Task) GetRemoveWriteIdx() uint32 {
	if m != nil {
		return m.RemoveWriteIdx
	}
	return 0
}

type Tasks struct {
	Name                 string   `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Task                 []*Task  `protobuf:"bytes,1,rep,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tasks) Reset()         { *m = Tasks{} }
func (m *Tasks) String() string { return proto.CompactTextString(m) }
func (*Tasks) ProtoMessage()    {}
func (*Tasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{25}
}

func (m *Tasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tasks.Unmarshal(m, b)
}
func (m *Tasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tasks.Marshal(b, m, deterministic)
}
func (m *Tasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tasks.Merge(m, src)
}
func (m *Tasks) XXX_Size() int {
	return xxx_messageInfo_Tasks.Size(m)
}
func (m *Tasks) XXX_DiscardUnknown() {
	xxx_messageInfo_Tasks.DiscardUnknown(m)
}

var xxx_messageInfo_Tasks proto.InternalMessageInfo

func (m *Tasks) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tasks) GetTask() []*Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type Time struct {
	Time                 float64  `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Num                  int64    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	ExecuteNum           int64    `protobuf:"varint,3,opt,name=executeNum,proto3" json:"executeNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{26}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Time) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Time) GetExecuteNum() int64 {
	if m != nil {
		return m.ExecuteNum
	}
	return 0
}

type Coverage struct {
	Coverage             map[uint32]uint32 `protobuf:"bytes,1,rep,name=coverage,proto3" json:"coverage,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Time                 []*Time           `protobuf:"bytes,2,rep,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Coverage) Reset()         { *m = Coverage{} }
func (m *Coverage) String() string { return proto.CompactTextString(m) }
func (*Coverage) ProtoMessage()    {}
func (*Coverage) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4d5fd3d0a7c985, []int{27}
}

func (m *Coverage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coverage.Unmarshal(m, b)
}
func (m *Coverage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coverage.Marshal(b, m, deterministic)
}
func (m *Coverage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coverage.Merge(m, src)
}
func (m *Coverage) XXX_Size() int {
	return xxx_messageInfo_Coverage.Size(m)
}
func (m *Coverage) XXX_DiscardUnknown() {
	xxx_messageInfo_Coverage.DiscardUnknown(m)
}

var xxx_messageInfo_Coverage proto.InternalMessageInfo

func (m *Coverage) GetCoverage() map[uint32]uint32 {
	if m != nil {
		return m.Coverage
	}
	return nil
}

func (m *Coverage) GetTime() []*Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterEnum("dra.TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterEnum("dra.FuzzingStat", FuzzingStat_name, FuzzingStat_value)
	proto.RegisterType((*Empty)(nil), "dra.Empty")
	proto.RegisterType((*Condition)(nil), "dra.Condition")
	proto.RegisterType((*Conditions)(nil), "dra.Conditions")
	proto.RegisterType((*WriteAddresses)(nil), "dra.WriteAddresses")
	proto.RegisterType((*Call)(nil), "dra.Call")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Call.AddressEntry")
	proto.RegisterType((*Inputs)(nil), "dra.Inputs")
	proto.RegisterType((*Dependencytask)(nil), "dra.Dependencytask")
	proto.RegisterType((*RunTimeData)(nil), "dra.runTimeData")
	proto.RegisterType((*IoctlCmdInput)(nil), "dra.IoctlCmdInput")
	proto.RegisterType((*IoctlCmd)(nil), "dra.IoctlCmd")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.IoctlCmd.WriteAddressEntry")
	proto.RegisterType((*WriteAddress)(nil), "dra.WriteAddress")
	proto.RegisterMapType((map[string]uint32)(nil), "dra.WriteAddress.InputEntry")
	proto.RegisterMapType((map[uint64]uint32)(nil), "dra.WriteAddress.IoctlCmdEntry")
	proto.RegisterMapType((map[uint32]*WriteAddressAttributes)(nil), "dra.WriteAddress.UncoveredAddressEntry")
	proto.RegisterType((*WriteAddressAttributes)(nil), "dra.writeAddressAttributes")
	proto.RegisterType((*UncoveredAddress)(nil), "dra.UncoveredAddress")
	proto.RegisterMapType((map[string]uint32)(nil), "dra.UncoveredAddress.InputEntry")
	proto.RegisterMapType((map[uint32]*WriteAddressAttributes)(nil), "dra.UncoveredAddress.WriteAddressEntry")
	proto.RegisterType((*Path)(nil), "dra.Path")
	proto.RegisterType((*UnstableInput)(nil), "dra.UnstableInput")
	proto.RegisterType((*Input)(nil), "dra.Input")
	proto.RegisterMapType((map[uint32]*Call)(nil), "dra.Input.CallEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Input.UncoveredAddressEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Input.WriteAddressEntry")
	proto.RegisterType((*Dependency)(nil), "dra.Dependency")
	proto.RegisterType((*RecursiveIoctlCmd)(nil), "dra.RecursiveIoctlCmd")
	proto.RegisterType((*RecursiveWriteAddress)(nil), "dra.RecursiveWriteAddress")
	proto.RegisterType((*RecursiveDependency)(nil), "dra.RecursiveDependency")
	proto.RegisterType((*Corpus)(nil), "dra.Corpus")
	proto.RegisterMapType((map[uint32]*UncoveredAddress)(nil), "dra.Corpus.CoveredAddressEntry")
	proto.RegisterMapType((map[string]*Input)(nil), "dra.Corpus.InputEntry")
	proto.RegisterMapType((map[uint64]*IoctlCmd)(nil), "dra.Corpus.IoctlCmdEntry")
	proto.RegisterMapType((map[string]*Input)(nil), "dra.Corpus.NewInputEntry")
	proto.RegisterMapType((map[uint32]*UncoveredAddress)(nil), "dra.Corpus.UncoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*WriteAddress)(nil), "dra.Corpus.WriteAddressEntry")
	proto.RegisterType((*UsefulInput)(nil), "dra.UsefulInput")
	proto.RegisterType((*Statistic)(nil), "dra.Statistic")
	proto.RegisterType((*Statistics)(nil), "dra.Statistics")
	proto.RegisterMapType((map[int32]*Statistic)(nil), "dra.Statistics.StatEntry")
	proto.RegisterType((*Task)(nil), "dra.Task")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.Task.CoveredAddressEntry")
	proto.RegisterMapType((map[uint32]*RunTimeData)(nil), "dra.Task.UncoveredAddressEntry")
	proto.RegisterType((*Tasks)(nil), "dra.Tasks")
	proto.RegisterType((*Time)(nil), "dra.Time")
	proto.RegisterType((*Coverage)(nil), "dra.Coverage")
	proto.RegisterMapType((map[uint32]uint32)(nil), "dra.Coverage.CoverageEntry")
}

func init() { proto.RegisterFile("DependencyRPC.proto", fileDescriptor_db4d5fd3d0a7c985) }

var fileDescriptor_db4d5fd3d0a7c985 = []byte{
	// 2344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4b, 0x6f, 0x1b, 0xc9,
	0xf1, 0xf7, 0xf0, 0x21, 0x92, 0x35, 0x1c, 0x6a, 0xd4, 0xf2, 0x83, 0xa6, 0x2c, 0x9b, 0xff, 0xb1,
	0xfe, 0x36, 0xd7, 0xde, 0xd5, 0x3a, 0x72, 0xec, 0x38, 0x72, 0x92, 0x85, 0x45, 0xad, 0xb5, 0x0e,
	0xbc, 0x8e, 0x31, 0x92, 0x93, 0x20, 0x08, 0xc0, 0x8c, 0x86, 0x2d, 0x6a, 0x20, 0x72, 0x28, 0xcc,
	0xf4, 0x48, 0x96, 0x3f, 0x40, 0x2e, 0xd9, 0x73, 0xae, 0x39, 0xe4, 0x16, 0x20, 0x40, 0x90, 0x1c,
	0x02, 0x04, 0xc8, 0x67, 0xc9, 0x27, 0xc8, 0x25, 0x40, 0xee, 0x41, 0x57, 0xcf, 0xa3, 0xe7, 0x41,
	0x93, 0x76, 0x90, 0xe4, 0xc4, 0xe9, 0xea, 0xae, 0x5f, 0x77, 0x57, 0xfd, 0xba, 0xaa, 0xba, 0x09,
	0xab, 0xbb, 0xf4, 0x94, 0xba, 0x43, 0xea, 0xda, 0x17, 0xe6, 0xeb, 0xfe, 0xe6, 0xa9, 0x37, 0x65,
	0x53, 0x52, 0x1e, 0x7a, 0x96, 0xf1, 0x08, 0xaa, 0x5f, 0x4e, 0x4e, 0xd9, 0x05, 0x69, 0x43, 0xcd,
	0x1a, 0x0e, 0x3d, 0xea, 0xfb, 0x6d, 0xa5, 0xab, 0xf4, 0x34, 0x33, 0x6a, 0x12, 0x02, 0x15, 0xd7,
	0x9a, 0xd0, 0x76, 0xa9, 0xab, 0xf4, 0x1a, 0x26, 0x7e, 0x1b, 0xdf, 0x94, 0xa1, 0xd1, 0x9f, 0xba,
	0x43, 0x87, 0x39, 0x53, 0x97, 0xdc, 0x87, 0x15, 0x3b, 0x6a, 0x0c, 0x64, 0x94, 0x8a, 0xa9, 0xc7,
	0x1d, 0xcf, 0x42, 0xb8, 0x1f, 0xc0, 0x9a, 0x7f, 0xf1, 0xee, 0xc4, 0x1a, 0x8f, 0xa9, 0x37, 0xc8,
	0xab, 0x95, 0x70, 0xf2, 0xeb, 0xf1, 0x90, 0x7e, 0x56, 0xff, 0x3e, 0xac, 0x04, 0xae, 0x3d, 0x3d,
	0xa3, 0x1e, 0x1d, 0xc6, 0x5a, 0x65, 0x31, 0x59, 0xdc, 0x51, 0x38, 0x59, 0x5e, 0xad, 0x92, 0x99,
	0xec, 0x4d, 0x56, 0x5f, 0x87, 0xb2, 0x33, 0x7c, 0xdb, 0xae, 0xe2, 0x38, 0xfe, 0x49, 0x6e, 0x40,
	0xc3, 0x0f, 0x6c, 0x9b, 0xfa, 0xfe, 0xd4, 0x6b, 0x2f, 0xe1, 0xb4, 0x89, 0x80, 0x3c, 0x80, 0xcb,
	0x9e, 0x33, 0x3a, 0x66, 0x83, 0x43, 0xcf, 0x72, 0xed, 0xe3, 0x78, 0xa2, 0x5a, 0xb7, 0xdc, 0xab,
	0x98, 0x04, 0xfb, 0x76, 0xb0, 0x2b, 0x9a, 0xa1, 0x0f, 0x37, 0x93, 0x15, 0x16, 0xea, 0xd6, 0xbb,
	0xe5, 0x9e, 0x66, 0x26, 0xfb, 0x30, 0x73, 0x20, 0xc6, 0x36, 0x40, 0x6c, 0x27, 0x9f, 0x7c, 0x0a,
	0x8d, 0xd8, 0xae, 0x6d, 0xe8, 0x96, 0x7b, 0xea, 0x56, 0x6b, 0x73, 0xe8, 0x59, 0x9b, 0xf1, 0x18,
	0x33, 0x19, 0x60, 0x9c, 0x41, 0xeb, 0x27, 0x9e, 0xc3, 0x68, 0x88, 0x45, 0x33, 0xfa, 0xdc, 0x8d,
	0xef, 0xd3, 0x27, 0x8f, 0x41, 0x3b, 0xe7, 0xfa, 0x92, 0x51, 0xf9, 0x8c, 0x2b, 0xa8, 0x21, 0x23,
	0x9b, 0xcd, 0x73, 0xa9, 0x65, 0xfc, 0x52, 0x81, 0x4a, 0xdf, 0x1a, 0x8f, 0x23, 0x1b, 0x2b, 0x89,
	0x8d, 0x1f, 0x24, 0x5c, 0x2c, 0x21, 0xd8, 0x55, 0x31, 0xbd, 0x35, 0x1e, 0x6f, 0x86, 0xea, 0x5f,
	0xba, 0xcc, 0xbb, 0x88, 0x39, 0xda, 0xd9, 0x86, 0xa6, 0xdc, 0xc1, 0x31, 0x4f, 0xe8, 0x45, 0x84,
	0x79, 0x42, 0x2f, 0xc8, 0x65, 0xa8, 0x9e, 0x59, 0xe3, 0x80, 0x86, 0x04, 0x13, 0x8d, 0xed, 0xd2,
	0x13, 0xc5, 0xb8, 0x07, 0x4b, 0x2f, 0xdc, 0xd3, 0x80, 0xf9, 0xa4, 0x0b, 0x55, 0x87, 0x7f, 0xb5,
	0x15, 0x9c, 0x15, 0x70, 0x56, 0xec, 0x33, 0x45, 0x87, 0xf1, 0x1c, 0x5a, 0xc9, 0x51, 0x62, 0x96,
	0x7f, 0x22, 0xeb, 0x28, 0x85, 0x3a, 0xf1, 0xf9, 0xf9, 0x44, 0x3a, 0x3f, 0xbf, 0x2f, 0x83, 0xea,
	0x05, 0xee, 0x81, 0x33, 0xa1, 0xbb, 0x16, 0xb3, 0xf8, 0xe9, 0x3b, 0xf5, 0xa6, 0x23, 0xcf, 0x9a,
	0xe0, 0xfa, 0x9a, 0x66, 0xd4, 0x24, 0x0f, 0x40, 0xe5, 0xf3, 0x0c, 0x7c, 0x66, 0xb1, 0x40, 0x10,
	0xbd, 0xb5, 0xb5, 0x8c, 0xb3, 0x70, 0xf9, 0x3e, 0x8a, 0x4d, 0x48, 0xbe, 0xc9, 0xff, 0x43, 0xcb,
	0xb3, 0x03, 0xcf, 0x77, 0xce, 0xe8, 0xc0, 0x9e, 0x06, 0x2e, 0x0b, 0x69, 0xae, 0x45, 0xd2, 0x3e,
	0x17, 0x92, 0x0e, 0xd4, 0x4f, 0x3d, 0x67, 0xea, 0x39, 0xec, 0x22, 0xe4, 0x77, 0xdc, 0x8e, 0x5c,
	0x02, 0x89, 0x4b, 0xee, 0x40, 0xcb, 0x3e, 0xa6, 0xf6, 0x49, 0x4c, 0x81, 0xb6, 0xda, 0x55, 0x7a,
	0x75, 0x33, 0x23, 0x2d, 0x0e, 0x05, 0x4d, 0xc4, 0xc9, 0x87, 0x02, 0x03, 0x9a, 0xa8, 0x1e, 0xb6,
	0xdb, 0x1a, 0x42, 0xa6, 0x64, 0x72, 0x5c, 0x6a, 0xa5, 0xe3, 0xd2, 0x13, 0xb8, 0x86, 0x23, 0xf3,
	0xe7, 0xa1, 0xbd, 0x8c, 0x40, 0xb3, 0xba, 0x67, 0x9e, 0x52, 0x1d, 0x4f, 0x5a, 0xc1, 0x29, 0x35,
	0x5c, 0xd0, 0x5e, 0x4c, 0x6d, 0x36, 0xee, 0x4f, 0x86, 0xe8, 0x5b, 0x6e, 0x21, 0xdf, 0x19, 0xa1,
	0xd3, 0x1b, 0x26, 0xff, 0xe4, 0x04, 0x73, 0xdc, 0x21, 0x7d, 0x1b, 0x11, 0x0c, 0x1b, 0x7c, 0x9c,
	0x3d, 0x19, 0xa2, 0xb1, 0x2a, 0x26, 0xff, 0x24, 0xb7, 0xb3, 0xe7, 0xe5, 0x0a, 0x8e, 0x4f, 0x1f,
	0x8e, 0xbf, 0x2b, 0x50, 0x8f, 0x26, 0x8c, 0x09, 0xa4, 0x24, 0x04, 0x8a, 0x70, 0x4b, 0x09, 0xee,
	0xb7, 0x41, 0xf3, 0x02, 0x77, 0xc0, 0x9c, 0x09, 0x1d, 0x0c, 0x2d, 0x46, 0xd1, 0xa9, 0xea, 0x96,
	0x8e, 0x54, 0x91, 0xb8, 0x66, 0x4a, 0xc4, 0xa3, 0x64, 0x37, 0xbb, 0x1a, 0x15, 0xa9, 0x7f, 0x4b,
	0xd0, 0x38, 0x5c, 0x41, 0xea, 0x18, 0x8b, 0x93, 0x97, 0x5a, 0x6e, 0xe7, 0x0b, 0x58, 0xc9, 0x0d,
	0xf9, 0xa0, 0x33, 0xf8, 0xe7, 0x0a, 0x34, 0x65, 0x84, 0xbc, 0x95, 0x4a, 0x79, 0x2b, 0x15, 0x93,
	0xad, 0x3c, 0x83, 0x6c, 0x07, 0x45, 0x79, 0xe3, 0x1a, 0xee, 0xf6, 0x6e, 0x2e, 0x56, 0x6d, 0x66,
	0x33, 0x81, 0xd8, 0x75, 0x3e, 0xc1, 0x7c, 0x0f, 0x1a, 0x0e, 0xb7, 0xd2, 0x80, 0x7b, 0xa3, 0x2d,
	0xd9, 0x2e, 0x85, 0x16, 0x19, 0x52, 0xa0, 0xd4, 0x9d, 0xc8, 0xb3, 0x5b, 0x51, 0xf0, 0xb8, 0x8e,
	0x9a, 0x37, 0x0a, 0x34, 0x79, 0xb7, 0x50, 0x0b, 0xc3, 0x49, 0xce, 0xcf, 0xea, 0x02, 0x7e, 0xee,
	0xfc, 0x02, 0xae, 0x14, 0x6e, 0xa9, 0xc0, 0x4b, 0xdf, 0x92, 0xbd, 0xa4, 0x6e, 0xad, 0x21, 0xb0,
	0x6c, 0xf7, 0x67, 0x8c, 0x79, 0xce, 0x61, 0xc0, 0xa8, 0x2f, 0xb9, 0xb0, 0xf3, 0x34, 0x39, 0x22,
	0x39, 0xe4, 0xca, 0x1c, 0xff, 0x77, 0x9e, 0x00, 0x24, 0x3b, 0x95, 0x35, 0x1b, 0xf3, 0x98, 0xe3,
	0xc0, 0xd5, 0xe2, 0xb5, 0x2d, 0x46, 0xa1, 0xab, 0xb0, 0xe4, 0xd1, 0x53, 0x6a, 0xb1, 0x76, 0x0d,
	0x7b, 0xc3, 0x16, 0x3f, 0x73, 0x3c, 0x1a, 0x62, 0x86, 0xd7, 0x4c, 0xfc, 0x36, 0xbe, 0xa9, 0x80,
	0x9e, 0xab, 0x10, 0x66, 0xd6, 0x3e, 0x45, 0x1c, 0x2c, 0xac, 0x5d, 0xc4, 0xb2, 0xf2, 0xd4, 0x9a,
	0x15, 0xa5, 0xca, 0xb3, 0xa2, 0x14, 0x8f, 0x95, 0x87, 0x87, 0x72, 0xc8, 0x8f, 0x9a, 0xe4, 0x71,
	0x44, 0xb4, 0xab, 0x48, 0xb4, 0x2e, 0xfa, 0x34, 0xbb, 0x97, 0x02, 0xb2, 0xbd, 0xcc, 0xda, 0x50,
	0x3e, 0x30, 0x39, 0xfd, 0x39, 0x61, 0x22, 0x4f, 0xdd, 0xfa, 0x22, 0xd4, 0xfd, 0x68, 0x6e, 0x74,
	0x7e, 0xbe, 0x58, 0x58, 0xfa, 0x38, 0xc2, 0x1b, 0x5d, 0xa8, 0xbc, 0xb6, 0xd8, 0x71, 0xba, 0x72,
	0x2e, 0x4b, 0x19, 0xca, 0xf8, 0xad, 0x02, 0xda, 0x1b, 0xd7, 0x67, 0xd6, 0xe1, 0x98, 0x8a, 0xb4,
	0xb1, 0x01, 0x75, 0x97, 0x9e, 0x0f, 0x4e, 0x2d, 0x76, 0x1c, 0x16, 0x0c, 0x0d, 0x9c, 0x8d, 0x03,
	0x99, 0x35, 0x97, 0x9e, 0x23, 0xe2, 0x26, 0x68, 0x41, 0xa8, 0x26, 0x86, 0x96, 0xb2, 0x43, 0x9b,
	0x51, 0x3f, 0x8e, 0x0f, 0xd3, 0x35, 0x8f, 0x7c, 0x55, 0x91, 0xae, 0xc3, 0xf4, 0xa4, 0x26, 0xe9,
	0x49, 0xaa, 0x30, 0x9a, 0xa9, 0x0a, 0xc3, 0xf8, 0x5b, 0x19, 0xaa, 0xa9, 0xa4, 0xb6, 0x88, 0x16,
	0xe9, 0x41, 0xc5, 0xb6, 0xc6, 0xe3, 0xb6, 0x86, 0x84, 0xb8, 0x9c, 0x94, 0x3d, 0x58, 0xa6, 0x09,
	0xef, 0xe3, 0x08, 0xb2, 0x01, 0x15, 0x5e, 0xbc, 0x60, 0x9e, 0x6b, 0x85, 0xce, 0x7e, 0x1e, 0xbc,
	0x7b, 0xe7, 0xb8, 0x23, 0x5e, 0xb1, 0x98, 0xd8, 0x4b, 0xbe, 0x2e, 0x3a, 0x1a, 0x32, 0x5b, 0x05,
	0xf8, 0xa2, 0x71, 0xf9, 0x59, 0x96, 0xb8, 0x72, 0x84, 0x15, 0x50, 0xf3, 0x92, 0xda, 0x0e, 0x34,
	0xe2, 0xad, 0x14, 0xb0, 0xe6, 0x56, 0x9a, 0x35, 0x8d, 0xb8, 0x44, 0x95, 0x19, 0xd8, 0x5f, 0x3c,
	0xec, 0xce, 0xa6, 0xf1, 0xbf, 0x9d, 0x5d, 0x7f, 0xa7, 0x00, 0x24, 0x65, 0xeb, 0x02, 0x25, 0xeb,
	0xce, 0xac, 0x38, 0xa5, 0x6e, 0x5d, 0x29, 0x3c, 0xfa, 0x05, 0x1e, 0xc8, 0xdd, 0x0b, 0xca, 0x8b,
	0xdd, 0x0b, 0xfe, 0xa9, 0xc0, 0x8a, 0x49, 0xc3, 0x52, 0x35, 0xae, 0x81, 0xee, 0xc9, 0x79, 0x56,
	0xac, 0x5b, 0x4b, 0xd5, 0x28, 0x52, 0x56, 0xfd, 0x3e, 0x10, 0xdb, 0x73, 0x98, 0x63, 0x5b, 0xe3,
	0xe4, 0x82, 0x19, 0xde, 0x24, 0xb2, 0x17, 0x99, 0x95, 0x68, 0x64, 0x52, 0xc2, 0x66, 0xa2, 0x94,
	0x85, 0xe7, 0x6a, 0x4e, 0x94, 0xb2, 0xc8, 0x17, 0xc5, 0x85, 0x54, 0x07, 0xb5, 0xe2, 0xfd, 0xbc,
	0x67, 0xdf, 0x7f, 0x51, 0xe0, 0x4a, 0xe1, 0xb8, 0xbc, 0x25, 0xc5, 0xfe, 0xe7, 0x59, 0xf2, 0x23,
	0x37, 0xf2, 0x50, 0xb6, 0x74, 0x45, 0xba, 0x7e, 0xe5, 0x9c, 0x92, 0x98, 0xdc, 0xf8, 0x87, 0x02,
	0xab, 0x71, 0xff, 0x7f, 0x9d, 0x6a, 0xff, 0x23, 0x8f, 0xfd, 0xaa, 0x06, 0x4b, 0xfd, 0xa9, 0x77,
	0x1a, 0xf0, 0x2b, 0x73, 0xea, 0xe6, 0x18, 0xde, 0x57, 0xb1, 0xaf, 0x20, 0xab, 0xbe, 0x2a, 0xda,
	0xb3, 0x30, 0xf5, 0xff, 0xc9, 0x9a, 0x8b, 0x06, 0xbb, 0xaf, 0x60, 0x39, 0x6f, 0xc1, 0xa4, 0x14,
	0x0d, 0xd1, 0xfa, 0x05, 0x58, 0xad, 0x0c, 0xd2, 0x4e, 0xd6, 0x26, 0x55, 0xc4, 0x59, 0x97, 0x71,
	0xe6, 0x65, 0xf9, 0xc7, 0x32, 0x81, 0x96, 0x50, 0xff, 0x7a, 0xca, 0x1e, 0x33, 0x8a, 0xe1, 0x2e,
	0x54, 0xf9, 0x2d, 0xd6, 0xc7, 0x4a, 0x2c, 0xe2, 0xca, 0x01, 0x97, 0x98, 0xa2, 0x83, 0x23, 0xf3,
	0xec, 0x29, 0x2c, 0xdd, 0xc8, 0x23, 0xbf, 0xa2, 0xe7, 0x92, 0xb1, 0x79, 0xa6, 0xc5, 0x66, 0x67,
	0x77, 0x4e, 0x05, 0xd1, 0x4d, 0x87, 0xf2, 0x14, 0x4b, 0x93, 0x30, 0xfc, 0xb3, 0xc5, 0x63, 0xf9,
	0xfd, 0x34, 0xe0, 0x0c, 0x22, 0x4b, 0xd8, 0x3f, 0x85, 0xd5, 0xfe, 0x7f, 0x06, 0xd9, 0x5c, 0x2c,
	0x79, 0xdc, 0x4d, 0xe3, 0x16, 0xc4, 0x16, 0x09, 0xf3, 0x87, 0xf3, 0x4b, 0xfd, 0xdb, 0x69, 0xbc,
	0x4c, 0xac, 0x96, 0xb0, 0xf6, 0x40, 0x4b, 0xb9, 0xed, 0x63, 0xdd, 0x63, 0x9c, 0x81, 0xfa, 0xc6,
	0xa7, 0x47, 0xc1, 0x58, 0xd4, 0x32, 0x0b, 0xbd, 0xcb, 0xf0, 0x88, 0x81, 0xa8, 0x8a, 0x89, 0xdf,
	0x7c, 0x72, 0x37, 0x98, 0x84, 0xcf, 0x89, 0xfc, 0x93, 0xdc, 0x02, 0x95, 0x73, 0x4e, 0x3e, 0xa5,
	0x9a, 0x09, 0x2e, 0x3d, 0x8f, 0xa2, 0xc0, 0x9f, 0x14, 0x68, 0xf0, 0x3a, 0xc6, 0xf1, 0x99, 0x63,
	0xf3, 0x62, 0x27, 0xbe, 0xab, 0x17, 0x16, 0x3b, 0x78, 0x7b, 0xbf, 0x09, 0x40, 0xdf, 0x52, 0x3b,
	0x60, 0xf4, 0x55, 0x30, 0x09, 0x1f, 0x07, 0x24, 0x49, 0xbc, 0xb4, 0xa6, 0xb4, 0xb4, 0x3b, 0xd0,
	0x72, 0xe9, 0xf9, 0x01, 0xf5, 0x59, 0xdf, 0xf2, 0x51, 0x4f, 0x43, 0xbd, 0x8c, 0x94, 0x6c, 0x80,
	0x96, 0xac, 0x8e, 0x0f, 0x6b, 0xe1, 0xb0, 0xb4, 0xd0, 0xf8, 0x43, 0x09, 0x20, 0x5e, 0xb5, 0x8f,
	0xaf, 0x9a, 0xce, 0xc8, 0xb5, 0xc6, 0x5c, 0x41, 0x09, 0x5f, 0x35, 0x23, 0x01, 0xf9, 0x14, 0xc8,
	0xa1, 0xe5, 0x3b, 0xf6, 0xe0, 0x70, 0x3c, 0xb5, 0x4f, 0x06, 0x6e, 0x30, 0x39, 0xa4, 0x5e, 0xf8,
	0x3a, 0xa4, 0x63, 0xcf, 0x0e, 0xef, 0x78, 0x85, 0x72, 0xf2, 0x09, 0xd4, 0x91, 0x8e, 0xd6, 0x28,
	0x2a, 0xf0, 0xb5, 0xf0, 0x90, 0x0a, 0xa1, 0x19, 0x77, 0x93, 0xcf, 0xc2, 0xd2, 0x50, 0x95, 0xce,
	0x72, 0xb2, 0x2a, 0xfc, 0x0c, 0x2b, 0x49, 0xac, 0x11, 0x1f, 0x42, 0x33, 0x40, 0x17, 0x87, 0x21,
	0xa0, 0x89, 0x6a, 0xc2, 0xc8, 0x92, 0xef, 0x4d, 0x35, 0x48, 0x1a, 0x9d, 0x3d, 0xe1, 0x9e, 0x1c,
	0xb9, 0xaa, 0x82, 0x5c, 0x1b, 0x69, 0x72, 0xb5, 0xd2, 0x6b, 0x90, 0x09, 0xf6, 0xeb, 0x1a, 0x54,
	0x78, 0x38, 0x5a, 0xf8, 0xed, 0x47, 0x2a, 0x9e, 0xcb, 0xe9, 0xe2, 0x79, 0x0d, 0x1a, 0x22, 0xcc,
	0x26, 0xe5, 0x76, 0x1d, 0x05, 0xfb, 0xce, 0x88, 0x33, 0x4e, 0x74, 0x0a, 0x48, 0xf1, 0x78, 0x06,
	0x28, 0x7a, 0x81, 0xb8, 0xf1, 0xc5, 0x36, 0x42, 0xd7, 0x10, 0x5d, 0x44, 0xe1, 0xd7, 0xe1, 0x14,
	0xb9, 0xdb, 0x6f, 0xab, 0xe0, 0xf6, 0x2b, 0xbf, 0x01, 0x2e, 0x67, 0xde, 0x00, 0x5f, 0x16, 0x25,
	0xa9, 0x2b, 0x52, 0x5a, 0xe1, 0xb6, 0x58, 0x38, 0x45, 0x3d, 0xcf, 0xa7, 0xa8, 0x6b, 0x52, 0x6a,
	0x41, 0xac, 0x45, 0x12, 0x54, 0xe6, 0x39, 0xb4, 0x3d, 0xff, 0x39, 0x74, 0x13, 0x56, 0xf1, 0x1d,
	0x70, 0x90, 0xbd, 0x0f, 0x28, 0xbd, 0xba, 0xb9, 0x82, 0x5d, 0xa9, 0x6a, 0xeb, 0xbb, 0x70, 0xbd,
	0x60, 0xfc, 0xe0, 0xc8, 0x71, 0xad, 0x71, 0xbb, 0x83, 0x5a, 0x57, 0x73, 0x5a, 0xcf, 0x79, 0x2f,
	0x79, 0x0a, 0x9d, 0x22, 0x55, 0x8f, 0x4e, 0xa6, 0x67, 0xb4, 0xbd, 0x26, 0x3d, 0x4a, 0xa6, 0x22,
	0x2b, 0x76, 0x73, 0x4e, 0xe0, 0x1c, 0x03, 0x7e, 0x95, 0xbb, 0x21, 0x9c, 0x81, 0x82, 0x17, 0xf8,
	0xfc, 0xba, 0x2c, 0x3a, 0x43, 0x66, 0x0c, 0xdf, 0xb6, 0xd7, 0xc5, 0xa3, 0x2e, 0x8a, 0x11, 0x8e,
	0x8f, 0x5b, 0x07, 0x10, 0xb3, 0xe1, 0x90, 0x9b, 0x38, 0xa4, 0x21, 0x24, 0xbc, 0xbb, 0x07, 0x7a,
	0xd8, 0x9d, 0xe0, 0xdc, 0xc2, 0x41, 0x2d, 0x21, 0x8f, 0x80, 0x3a, 0x6f, 0x16, 0x4f, 0x76, 0x77,
	0xd2, 0x27, 0x28, 0x5f, 0x75, 0x49, 0xd1, 0x7e, 0x7f, 0xd1, 0x3c, 0xf7, 0x01, 0xa0, 0xc6, 0x36,
	0x54, 0xb1, 0x4c, 0x28, 0x7a, 0x69, 0x27, 0xeb, 0x50, 0xe1, 0x64, 0x08, 0x0b, 0xb3, 0x46, 0xcc,
	0x36, 0x13, 0xc5, 0xc6, 0x4b, 0xa8, 0x70, 0xc8, 0x38, 0xe2, 0x2a, 0xf9, 0x64, 0xc0, 0x57, 0x50,
	0x16, 0xc9, 0x20, 0x1d, 0xb7, 0xcb, 0xd8, 0x21, 0x49, 0x8c, 0xdf, 0x28, 0x50, 0x8f, 0xc2, 0x1c,
	0xf9, 0x8e, 0x14, 0x07, 0xc5, 0xec, 0x6b, 0xa9, 0x38, 0x18, 0x7f, 0x84, 0xe5, 0x4a, 0x1c, 0x15,
	0xd7, 0xe3, 0xc4, 0x24, 0x2d, 0xd9, 0x99, 0x50, 0xb1, 0xac, 0xce, 0x53, 0xd0, 0x52, 0x9a, 0x1f,
	0x72, 0x15, 0xbc, 0x77, 0x04, 0xf2, 0xd9, 0x68, 0x42, 0x3d, 0x70, 0x19, 0xf5, 0x19, 0x1d, 0xea,
	0x97, 0x88, 0x06, 0x0d, 0x2f, 0x2a, 0x7b, 0x75, 0x85, 0x00, 0x2c, 0x85, 0x5d, 0x25, 0x52, 0x83,
	0xf2, 0x34, 0x60, 0x7a, 0x99, 0xa8, 0x50, 0x0b, 0x59, 0xa1, 0x57, 0x78, 0x83, 0x8f, 0x70, 0xdc,
	0x91, 0x5e, 0x15, 0x58, 0xe2, 0x51, 0x42, 0x5f, 0xba, 0xf7, 0x47, 0x05, 0x54, 0x29, 0xef, 0x91,
	0x65, 0x50, 0xf9, 0xef, 0x2e, 0x3d, 0xb2, 0x82, 0x31, 0xd3, 0x2f, 0x11, 0x1d, 0x9a, 0x5c, 0xb0,
	0x47, 0x5d, 0xea, 0x59, 0x8c, 0xcf, 0xd7, 0x84, 0x3a, 0x97, 0x70, 0x2d, 0xbd, 0x44, 0x56, 0x40,
	0xe3, 0xad, 0xbe, 0xe5, 0x0e, 0x9d, 0x21, 0x1f, 0x50, 0x26, 0x2d, 0x91, 0xb2, 0x0e, 0x3c, 0xc7,
	0x1a, 0x51, 0xbd, 0x12, 0x41, 0x7c, 0xed, 0xb8, 0xce, 0xc4, 0x79, 0x47, 0xf5, 0x2a, 0xdf, 0x01,
	0x97, 0xec, 0x4f, 0x2c, 0xff, 0x58, 0x5f, 0x8a, 0x10, 0xbf, 0x72, 0x5c, 0xa6, 0xd7, 0xa2, 0xd6,
	0x3e, 0xa5, 0x43, 0xbd, 0x4e, 0x08, 0xb4, 0xc4, 0x82, 0xa2, 0xbb, 0x8a, 0xde, 0xd8, 0xfa, 0x6b,
	0x15, 0xb4, 0xd4, 0x3f, 0xa5, 0xa4, 0x07, 0xcd, 0x3d, 0xca, 0x7e, 0x3c, 0xf9, 0xd1, 0xd1, 0x91,
	0x4f, 0x99, 0x4f, 0x44, 0x19, 0x81, 0xff, 0x98, 0x76, 0xa4, 0x6f, 0xe3, 0x12, 0x79, 0x00, 0x97,
	0xf7, 0xa9, 0x3b, 0xdc, 0xc9, 0x66, 0xc3, 0xd9, 0x1a, 0x3d, 0x50, 0xf7, 0x28, 0x8b, 0x8a, 0x9f,
	0xd4, 0x40, 0x35, 0xa9, 0x56, 0x7c, 0xe3, 0x12, 0xf9, 0x1c, 0x5a, 0x1c, 0x5b, 0xba, 0x57, 0x89,
	0x88, 0x97, 0x08, 0x32, 0xd0, 0x9f, 0xe1, 0xb2, 0x93, 0x2b, 0xad, 0x8c, 0xbd, 0x9c, 0xbe, 0x01,
	0x73, 0xfc, 0x47, 0xa0, 0x73, 0xfc, 0x54, 0x18, 0x5c, 0xcd, 0x55, 0x80, 0xd4, 0xcf, 0xcc, 0x72,
	0x1b, 0x6a, 0xfd, 0xa9, 0xeb, 0x52, 0x9b, 0xbd, 0x77, 0x97, 0x4d, 0x8e, 0x9d, 0xd9, 0xa6, 0x48,
	0xcd, 0xe9, 0x91, 0x1b, 0x50, 0xdf, 0xa3, 0x4c, 0x9c, 0xe4, 0x3c, 0x1e, 0xca, 0x8d, 0x4b, 0xe4,
	0x2e, 0xa8, 0x26, 0x65, 0x81, 0xe7, 0xca, 0x03, 0xf1, 0x3b, 0x03, 0xf7, 0x08, 0x56, 0xf8, 0xc4,
	0xe9, 0xf7, 0x37, 0x12, 0xd6, 0xcb, 0x92, 0x2c, 0xa3, 0xf6, 0x39, 0x90, 0x3d, 0x2a, 0xd1, 0x62,
	0xae, 0x73, 0xb6, 0xf9, 0xb5, 0x9d, 0x2f, 0x28, 0xab, 0xb3, 0x9a, 0xf1, 0x11, 0x3f, 0x77, 0x79,
	0x0b, 0xf2, 0x35, 0xbe, 0x9c, 0x8e, 0xde, 0x6b, 0xc1, 0xba, 0x4f, 0xdd, 0x21, 0x1e, 0xa3, 0x4c,
	0x79, 0x92, 0x1e, 0x79, 0xb8, 0x84, 0x7f, 0xec, 0x3f, 0xfc, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x63, 0x8a, 0x44, 0x89, 0xef, 0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DependencyRPCClient is the client API for DependencyRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DependencyRPCClient interface {
	// DRA and syz-manager
	GetVmOffsets(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendBasicBlockNumber(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	GetNewInput(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Inputs, error)
	SendDependency(ctx context.Context, in *Dependency, opts ...grpc.CallOption) (*Empty, error)
	GetCondition(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Conditions, error)
	SendWriteAddress(ctx context.Context, in *WriteAddresses, opts ...grpc.CallOption) (*Empty, error)
	//syz-fuzzer and syz-manager
	Connect(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendNewInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error)
	GetTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Tasks, error)
	ReturnTasks(ctx context.Context, in *Tasks, opts ...grpc.CallOption) (*Empty, error)
	SendUnstableInput(ctx context.Context, in *UnstableInput, opts ...grpc.CallOption) (*Empty, error)
	GetDependencyInput(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Inputs, error)
	ReturnDependencyInput(ctx context.Context, in *Dependencytask, opts ...grpc.CallOption) (*Empty, error)
	SendLog(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SendStat(ctx context.Context, in *Statistic, opts ...grpc.CallOption) (*Empty, error)
}

type dependencyRPCClient struct {
	cc *grpc.ClientConn
}

func NewDependencyRPCClient(cc *grpc.ClientConn) DependencyRPCClient {
	return &dependencyRPCClient{cc}
}

func (c *dependencyRPCClient) GetVmOffsets(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetVmOffsets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendBasicBlockNumber(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendBasicBlockNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetNewInput(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Inputs, error) {
	out := new(Inputs)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetNewInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendDependency(ctx context.Context, in *Dependency, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendDependency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetCondition(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Conditions, error) {
	out := new(Conditions)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendWriteAddress(ctx context.Context, in *WriteAddresses, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendWriteAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) Connect(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendNewInput(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendNewInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) ReturnTasks(ctx context.Context, in *Tasks, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/ReturnTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendUnstableInput(ctx context.Context, in *UnstableInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendUnstableInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) GetDependencyInput(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Inputs, error) {
	out := new(Inputs)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/GetDependencyInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) ReturnDependencyInput(ctx context.Context, in *Dependencytask, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/ReturnDependencyInput", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendLog(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/SendLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyRPCClient) SendStat(ctx context.Context, in *Statistic, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/dra.DependencyRPC/sendStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DependencyRPCServer is the server API for DependencyRPC service.
type DependencyRPCServer interface {
	// DRA and syz-manager
	GetVmOffsets(context.Context, *Empty) (*Empty, error)
	SendBasicBlockNumber(context.Context, *Empty) (*Empty, error)
	GetNewInput(context.Context, *Empty) (*Inputs, error)
	SendDependency(context.Context, *Dependency) (*Empty, error)
	GetCondition(context.Context, *Empty) (*Conditions, error)
	SendWriteAddress(context.Context, *WriteAddresses) (*Empty, error)
	//syz-fuzzer and syz-manager
	Connect(context.Context, *Empty) (*Empty, error)
	SendNewInput(context.Context, *Input) (*Empty, error)
	GetTasks(context.Context, *Empty) (*Tasks, error)
	ReturnTasks(context.Context, *Tasks) (*Empty, error)
	SendUnstableInput(context.Context, *UnstableInput) (*Empty, error)
	GetDependencyInput(context.Context, *Empty) (*Inputs, error)
	ReturnDependencyInput(context.Context, *Dependencytask) (*Empty, error)
	SendLog(context.Context, *Empty) (*Empty, error)
	SendStat(context.Context, *Statistic) (*Empty, error)
}

// UnimplementedDependencyRPCServer can be embedded to have forward compatible implementations.
type UnimplementedDependencyRPCServer struct {
}

func (*UnimplementedDependencyRPCServer) GetVmOffsets(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVmOffsets not implemented")
}
func (*UnimplementedDependencyRPCServer) SendBasicBlockNumber(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendBasicBlockNumber not implemented")
}
func (*UnimplementedDependencyRPCServer) GetNewInput(ctx context.Context, req *Empty) (*Inputs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNewInput not implemented")
}
func (*UnimplementedDependencyRPCServer) SendDependency(ctx context.Context, req *Dependency) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendDependency not implemented")
}
func (*UnimplementedDependencyRPCServer) GetCondition(ctx context.Context, req *Empty) (*Conditions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCondition not implemented")
}
func (*UnimplementedDependencyRPCServer) SendWriteAddress(ctx context.Context, req *WriteAddresses) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendWriteAddress not implemented")
}
func (*UnimplementedDependencyRPCServer) Connect(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedDependencyRPCServer) SendNewInput(ctx context.Context, req *Input) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNewInput not implemented")
}
func (*UnimplementedDependencyRPCServer) GetTasks(ctx context.Context, req *Empty) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasks not implemented")
}
func (*UnimplementedDependencyRPCServer) ReturnTasks(ctx context.Context, req *Tasks) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnTasks not implemented")
}
func (*UnimplementedDependencyRPCServer) SendUnstableInput(ctx context.Context, req *UnstableInput) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendUnstableInput not implemented")
}
func (*UnimplementedDependencyRPCServer) GetDependencyInput(ctx context.Context, req *Empty) (*Inputs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDependencyInput not implemented")
}
func (*UnimplementedDependencyRPCServer) ReturnDependencyInput(ctx context.Context, req *Dependencytask) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnDependencyInput not implemented")
}
func (*UnimplementedDependencyRPCServer) SendLog(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLog not implemented")
}
func (*UnimplementedDependencyRPCServer) SendStat(ctx context.Context, req *Statistic) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendStat not implemented")
}

func RegisterDependencyRPCServer(s *grpc.Server, srv DependencyRPCServer) {
	s.RegisterService(&_DependencyRPC_serviceDesc, srv)
}

func _DependencyRPC_GetVmOffsets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetVmOffsets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetVmOffsets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetVmOffsets(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendBasicBlockNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendBasicBlockNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendBasicBlockNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendBasicBlockNumber(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetNewInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetNewInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetNewInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetNewInput(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendDependency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dependency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendDependency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendDependency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendDependency(ctx, req.(*Dependency))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetCondition(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendWriteAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteAddresses)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendWriteAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendWriteAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendWriteAddress(ctx, req.(*WriteAddresses))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).Connect(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendNewInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendNewInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendNewInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendNewInput(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetTasks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_ReturnTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tasks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).ReturnTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/ReturnTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).ReturnTasks(ctx, req.(*Tasks))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendUnstableInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnstableInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendUnstableInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendUnstableInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendUnstableInput(ctx, req.(*UnstableInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_GetDependencyInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).GetDependencyInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/GetDependencyInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).GetDependencyInput(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_ReturnDependencyInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dependencytask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).ReturnDependencyInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/ReturnDependencyInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).ReturnDependencyInput(ctx, req.(*Dependencytask))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendLog(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyRPC_SendStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Statistic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyRPCServer).SendStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dra.DependencyRPC/SendStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyRPCServer).SendStat(ctx, req.(*Statistic))
	}
	return interceptor(ctx, in, info, handler)
}

var _DependencyRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dra.DependencyRPC",
	HandlerType: (*DependencyRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVmOffsets",
			Handler:    _DependencyRPC_GetVmOffsets_Handler,
		},
		{
			MethodName: "SendBasicBlockNumber",
			Handler:    _DependencyRPC_SendBasicBlockNumber_Handler,
		},
		{
			MethodName: "GetNewInput",
			Handler:    _DependencyRPC_GetNewInput_Handler,
		},
		{
			MethodName: "SendDependency",
			Handler:    _DependencyRPC_SendDependency_Handler,
		},
		{
			MethodName: "GetCondition",
			Handler:    _DependencyRPC_GetCondition_Handler,
		},
		{
			MethodName: "SendWriteAddress",
			Handler:    _DependencyRPC_SendWriteAddress_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _DependencyRPC_Connect_Handler,
		},
		{
			MethodName: "SendNewInput",
			Handler:    _DependencyRPC_SendNewInput_Handler,
		},
		{
			MethodName: "GetTasks",
			Handler:    _DependencyRPC_GetTasks_Handler,
		},
		{
			MethodName: "ReturnTasks",
			Handler:    _DependencyRPC_ReturnTasks_Handler,
		},
		{
			MethodName: "SendUnstableInput",
			Handler:    _DependencyRPC_SendUnstableInput_Handler,
		},
		{
			MethodName: "GetDependencyInput",
			Handler:    _DependencyRPC_GetDependencyInput_Handler,
		},
		{
			MethodName: "ReturnDependencyInput",
			Handler:    _DependencyRPC_ReturnDependencyInput_Handler,
		},
		{
			MethodName: "SendLog",
			Handler:    _DependencyRPC_SendLog_Handler,
		},
		{
			MethodName: "sendStat",
			Handler:    _DependencyRPC_SendStat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "DependencyRPC.proto",
}
