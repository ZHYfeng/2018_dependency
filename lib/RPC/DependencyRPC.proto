syntax = "proto3";

package dra;

// The DependencyRPC service definition.
service DependencyRPC {
    
    // C++ and syz-manager
    rpc GetVmOffsets (Empty) returns (Empty) {
    }
    rpc GetNewInput (Empty) returns (NewInput) {
    }
    rpc SendDependencyInput (DependencyInput) returns (Empty) {
    }
    
    //syz-fuzzer and syz-manager
    rpc Connect (Empty) returns (Empty) {
    }
    rpc GetDependencyInput (Empty) returns (NewDependencyInput) {
    }
    rpc SendInput (Input) returns (Empty) {
    }
}

message Empty {
    uint32 address = 1;
    string name = 2;
}

message RelatedInput {
    string sig = 1; // hash value for each input from syzkaller
    bytes prog = 3;
}

message RelatedSyscall {
    string name = 1;
    uint64 number =3;
}

message RelatedAddress {
    uint32 repeat = 7;
    uint32 prio = 6;
    uint32 address = 2;
    repeated RelatedInput related_input = 4;
    repeated RelatedSyscall related_syscall = 5;
}

message UncoveredAddress {
    uint32 address = 1;
    uint32 idx = 2;
    uint32 condition_address = 3;
    repeated RelatedAddress related_address = 4;
}

message DependencyInput {
    string sig = 1; // hash value for each input from syzkaller
    repeated UncoveredAddress uncovered_address = 2;
    bytes prog = 3;
}

message NewDependencyInput {
    repeated DependencyInput dependencyInput = 1;
}

message Call {
    uint32 idx = 1;
    map<uint32, uint32> address = 2;
}

message Input {
    string sig = 1;
    map<uint32, Call> call = 2;
    bytes prog = 3;
}

message NewInput {
    repeated Input input = 1;
}
