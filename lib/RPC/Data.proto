syntax = "proto3";

package dra;

message Empty {
    uint32 address = 1;
    string name = 2;
}

message condition {
    uint32 condition_address = 1;
    uint32 uncovered_address = 2;
    uint32 idx = 4;

    repeated uint32 right_branch_address = 5;
    repeated uint32 wrong_branch_address = 6;
}

message Syscall {
    string name = 1;
    uint64 number = 3;

    repeated condition critical_condition = 10;

}

message WriteAddress {
    uint32 repeat = 7;
    uint32 prio = 6;
    // the address writes to global variable
    uint32 write_address = 2;
    // the address of condition is related to this global variable
    uint32 condition_address = 3;

    repeated Input write_input = 4;
    repeated Syscall write_syscall = 5;
}

message UncoveredAddress {
    uint32 condition_address = 3;
    uint32 uncovered_address = 1;
    uint32 idx = 2;
    repeated WriteAddress write_address = 4;
}

message Call {
    uint32 idx = 1;
    map<uint32, uint32> address = 2;
}

message Input {
    // hash value for each input from syzkaller
    string sig = 1;
    bytes prog = 2;
    map<uint32, Call> call = 3;
    bool dependency = 4;

    repeated UncoveredAddress uncovered_address = 5;
}
