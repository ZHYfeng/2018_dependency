// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DependencyRPC.proto

#include "DependencyRPC.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Call_AddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Condition_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Coverage_CoverageEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileOperationsFunction_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Input_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Input_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Path_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Statistic_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Time_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UncoveredAddress_InputEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WriteAddress_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WriteAddress_InputEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_runTimeData_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_writeAddressAttributes_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Call_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_FileOperationsEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_InputEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_NewInputEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileOperations_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileOperations_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Input_CallEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Statistics_StatEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TaskRunTimeData_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TaskRunTimeData_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Task_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Task_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Tasks_TaskMapEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UncoveredAddress_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsefulInput_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WriteAddress_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Coverage_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FileOperationsFunction_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TaskRunTimeData_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Tasks_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Input_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Task_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UncoveredAddress_DependencyRPC_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_WriteAddress_DependencyRPC_2eproto;
namespace dra {
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class ConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Condition> _instance;
} _Condition_default_instance_;
class Call_AddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Call_AddressEntry_DoNotUse> _instance;
} _Call_AddressEntry_DoNotUse_default_instance_;
class CallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Call> _instance;
} _Call_default_instance_;
class InputsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Inputs> _instance;
} _Inputs_default_instance_;
class DependencytaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dependencytask> _instance;
} _Dependencytask_default_instance_;
class runTimeDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<runTimeData> _instance;
} _runTimeData_default_instance_;
class FileOperationsFunction_WriteAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileOperationsFunction_WriteAddressEntry_DoNotUse> _instance;
} _FileOperationsFunction_WriteAddressEntry_DoNotUse_default_instance_;
class FileOperationsFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileOperationsFunction> _instance;
} _FileOperationsFunction_default_instance_;
class FileOperations_FileOperationsFunctionEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileOperations_FileOperationsFunctionEntry_DoNotUse> _instance;
} _FileOperations_FileOperationsFunctionEntry_DoNotUse_default_instance_;
class FileOperationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileOperations> _instance;
} _FileOperations_default_instance_;
class WriteAddress_UncoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteAddress_UncoveredAddressEntry_DoNotUse> _instance;
} _WriteAddress_UncoveredAddressEntry_DoNotUse_default_instance_;
class WriteAddress_FileOperationsFunctionEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteAddress_FileOperationsFunctionEntry_DoNotUse> _instance;
} _WriteAddress_FileOperationsFunctionEntry_DoNotUse_default_instance_;
class WriteAddress_InputEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteAddress_InputEntry_DoNotUse> _instance;
} _WriteAddress_InputEntry_DoNotUse_default_instance_;
class WriteAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteAddress> _instance;
} _WriteAddress_default_instance_;
class writeAddressAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<writeAddressAttributes> _instance;
} _writeAddressAttributes_default_instance_;
class UncoveredAddress_InputEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UncoveredAddress_InputEntry_DoNotUse> _instance;
} _UncoveredAddress_InputEntry_DoNotUse_default_instance_;
class UncoveredAddress_WriteAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UncoveredAddress_WriteAddressEntry_DoNotUse> _instance;
} _UncoveredAddress_WriteAddressEntry_DoNotUse_default_instance_;
class UncoveredAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UncoveredAddress> _instance;
} _UncoveredAddress_default_instance_;
class PathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Path> _instance;
} _Path_default_instance_;
class UnstableInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnstableInput> _instance;
} _UnstableInput_default_instance_;
class Input_CallEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Input_CallEntry_DoNotUse> _instance;
} _Input_CallEntry_DoNotUse_default_instance_;
class Input_UncoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Input_UncoveredAddressEntry_DoNotUse> _instance;
} _Input_UncoveredAddressEntry_DoNotUse_default_instance_;
class Input_WriteAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Input_WriteAddressEntry_DoNotUse> _instance;
} _Input_WriteAddressEntry_DoNotUse_default_instance_;
class InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Input> _instance;
} _Input_default_instance_;
class DependencyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dependency> _instance;
} _Dependency_default_instance_;
class Corpus_InputEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus_InputEntry_DoNotUse> _instance;
} _Corpus_InputEntry_DoNotUse_default_instance_;
class Corpus_UncoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus_UncoveredAddressEntry_DoNotUse> _instance;
} _Corpus_UncoveredAddressEntry_DoNotUse_default_instance_;
class Corpus_CoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus_CoveredAddressEntry_DoNotUse> _instance;
} _Corpus_CoveredAddressEntry_DoNotUse_default_instance_;
class Corpus_WriteAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus_WriteAddressEntry_DoNotUse> _instance;
} _Corpus_WriteAddressEntry_DoNotUse_default_instance_;
class Corpus_FileOperationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus_FileOperationsEntry_DoNotUse> _instance;
} _Corpus_FileOperationsEntry_DoNotUse_default_instance_;
class Corpus_NewInputEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus_NewInputEntry_DoNotUse> _instance;
} _Corpus_NewInputEntry_DoNotUse_default_instance_;
class CorpusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Corpus> _instance;
} _Corpus_default_instance_;
class UsefulInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsefulInput> _instance;
} _UsefulInput_default_instance_;
class StatisticDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Statistic> _instance;
} _Statistic_default_instance_;
class Statistics_StatEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Statistics_StatEntry_DoNotUse> _instance;
} _Statistics_StatEntry_DoNotUse_default_instance_;
class StatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Statistics> _instance;
} _Statistics_default_instance_;
class TaskRunTimeData_UncoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskRunTimeData_UncoveredAddressEntry_DoNotUse> _instance;
} _TaskRunTimeData_UncoveredAddressEntry_DoNotUse_default_instance_;
class TaskRunTimeData_CoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskRunTimeData_CoveredAddressEntry_DoNotUse> _instance;
} _TaskRunTimeData_CoveredAddressEntry_DoNotUse_default_instance_;
class TaskRunTimeDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskRunTimeData> _instance;
} _TaskRunTimeData_default_instance_;
class Task_UncoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Task_UncoveredAddressEntry_DoNotUse> _instance;
} _Task_UncoveredAddressEntry_DoNotUse_default_instance_;
class Task_CoveredAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Task_CoveredAddressEntry_DoNotUse> _instance;
} _Task_CoveredAddressEntry_DoNotUse_default_instance_;
class TaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Task> _instance;
} _Task_default_instance_;
class Tasks_TaskMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tasks_TaskMapEntry_DoNotUse> _instance;
} _Tasks_TaskMapEntry_DoNotUse_default_instance_;
class TasksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tasks> _instance;
} _Tasks_default_instance_;
class TimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Time> _instance;
} _Time_default_instance_;
class Coverage_CoverageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coverage_CoverageEntry_DoNotUse> _instance;
} _Coverage_CoverageEntry_DoNotUse_default_instance_;
class CoverageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coverage> _instance;
} _Coverage_default_instance_;
class ConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Conditions> _instance;
} _Conditions_default_instance_;
class WriteAddressesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteAddresses> _instance;
} _WriteAddresses_default_instance_;
}  // namespace dra
static void InitDefaultsEmpty_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Empty_default_instance_;
    new (ptr) ::dra::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty_DependencyRPC_2eproto}, {}};

static void InitDefaultsCondition_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Condition_default_instance_;
    new (ptr) ::dra::Condition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Condition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Condition_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCondition_DependencyRPC_2eproto}, {}};

static void InitDefaultsCall_AddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Call_AddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Call_AddressEntry_DoNotUse();
  }
  ::dra::Call_AddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Call_AddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCall_AddressEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsCall_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Call_default_instance_;
    new (ptr) ::dra::Call();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Call::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Call_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCall_DependencyRPC_2eproto}, {
      &scc_info_Call_AddressEntry_DoNotUse_DependencyRPC_2eproto.base,}};

static void InitDefaultsInputs_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Inputs_default_instance_;
    new (ptr) ::dra::Inputs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Inputs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Inputs_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputs_DependencyRPC_2eproto}, {
      &scc_info_Input_DependencyRPC_2eproto.base,}};

static void InitDefaultsDependencytask_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Dependencytask_default_instance_;
    new (ptr) ::dra::Dependencytask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Dependencytask::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Dependencytask_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDependencytask_DependencyRPC_2eproto}, {
      &scc_info_Input_DependencyRPC_2eproto.base,}};

static void InitDefaultsrunTimeData_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_runTimeData_default_instance_;
    new (ptr) ::dra::runTimeData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::runTimeData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_runTimeData_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrunTimeData_DependencyRPC_2eproto}, {}};

static void InitDefaultsFileOperationsFunction_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_FileOperationsFunction_WriteAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse();
  }
  ::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileOperationsFunction_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileOperationsFunction_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsFileOperationsFunction_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_FileOperationsFunction_default_instance_;
    new (ptr) ::dra::FileOperationsFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::FileOperationsFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FileOperationsFunction_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFileOperationsFunction_DependencyRPC_2eproto}, {
      &scc_info_runTimeData_DependencyRPC_2eproto.base,
      &scc_info_FileOperationsFunction_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base,}};

static void InitDefaultsFileOperations_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_FileOperations_FileOperationsFunctionEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse();
  }
  ::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileOperations_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileOperations_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_FileOperationsFunction_DependencyRPC_2eproto.base,}};

static void InitDefaultsFileOperations_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_FileOperations_default_instance_;
    new (ptr) ::dra::FileOperations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::FileOperations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileOperations_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileOperations_DependencyRPC_2eproto}, {
      &scc_info_FileOperations_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto.base,}};

static void InitDefaultsWriteAddress_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_WriteAddress_UncoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::WriteAddress_UncoveredAddressEntry_DoNotUse();
  }
  ::dra::WriteAddress_UncoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteAddress_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteAddress_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_writeAddressAttributes_DependencyRPC_2eproto.base,}};

static void InitDefaultsWriteAddress_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_WriteAddress_FileOperationsFunctionEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse();
  }
  ::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteAddress_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteAddress_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsWriteAddress_InputEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_WriteAddress_InputEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::WriteAddress_InputEntry_DoNotUse();
  }
  ::dra::WriteAddress_InputEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteAddress_InputEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteAddress_InputEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsWriteAddress_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_WriteAddress_default_instance_;
    new (ptr) ::dra::WriteAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::WriteAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_WriteAddress_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsWriteAddress_DependencyRPC_2eproto}, {
      &scc_info_WriteAddress_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_WriteAddress_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_WriteAddress_InputEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_runTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultswriteAddressAttributes_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_writeAddressAttributes_default_instance_;
    new (ptr) ::dra::writeAddressAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::writeAddressAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_writeAddressAttributes_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultswriteAddressAttributes_DependencyRPC_2eproto}, {}};

static void InitDefaultsUncoveredAddress_InputEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_UncoveredAddress_InputEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::UncoveredAddress_InputEntry_DoNotUse();
  }
  ::dra::UncoveredAddress_InputEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UncoveredAddress_InputEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUncoveredAddress_InputEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsUncoveredAddress_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_UncoveredAddress_WriteAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::UncoveredAddress_WriteAddressEntry_DoNotUse();
  }
  ::dra::UncoveredAddress_WriteAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UncoveredAddress_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUncoveredAddress_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_writeAddressAttributes_DependencyRPC_2eproto.base,}};

static void InitDefaultsUncoveredAddress_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_UncoveredAddress_default_instance_;
    new (ptr) ::dra::UncoveredAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::UncoveredAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UncoveredAddress_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUncoveredAddress_DependencyRPC_2eproto}, {
      &scc_info_UncoveredAddress_InputEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_UncoveredAddress_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_runTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultsPath_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Path_default_instance_;
    new (ptr) ::dra::Path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Path::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Path_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPath_DependencyRPC_2eproto}, {}};

static void InitDefaultsUnstableInput_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_UnstableInput_default_instance_;
    new (ptr) ::dra::UnstableInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::UnstableInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnstableInput_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnstableInput_DependencyRPC_2eproto}, {
      &scc_info_Path_DependencyRPC_2eproto.base,}};

static void InitDefaultsInput_CallEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Input_CallEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Input_CallEntry_DoNotUse();
  }
  ::dra::Input_CallEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Input_CallEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInput_CallEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_Call_DependencyRPC_2eproto.base,}};

static void InitDefaultsInput_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Input_UncoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Input_UncoveredAddressEntry_DoNotUse();
  }
  ::dra::Input_UncoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Input_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInput_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsInput_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Input_WriteAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Input_WriteAddressEntry_DoNotUse();
  }
  ::dra::Input_WriteAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Input_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInput_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsInput_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Input_default_instance_;
    new (ptr) ::dra::Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Input_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsInput_DependencyRPC_2eproto}, {
      &scc_info_Input_CallEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Input_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Input_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base,}};

static void InitDefaultsDependency_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Dependency_default_instance_;
    new (ptr) ::dra::Dependency();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Dependency::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Dependency_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDependency_DependencyRPC_2eproto}, {
      &scc_info_Input_DependencyRPC_2eproto.base,
      &scc_info_UncoveredAddress_DependencyRPC_2eproto.base,
      &scc_info_WriteAddress_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_InputEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_InputEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Corpus_InputEntry_DoNotUse();
  }
  ::dra::Corpus_InputEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_InputEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCorpus_InputEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_Input_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_UncoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Corpus_UncoveredAddressEntry_DoNotUse();
  }
  ::dra::Corpus_UncoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCorpus_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_UncoveredAddress_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_CoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Corpus_CoveredAddressEntry_DoNotUse();
  }
  ::dra::Corpus_CoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCorpus_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_UncoveredAddress_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_WriteAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Corpus_WriteAddressEntry_DoNotUse();
  }
  ::dra::Corpus_WriteAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCorpus_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_WriteAddress_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_FileOperationsEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_FileOperationsEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Corpus_FileOperationsEntry_DoNotUse();
  }
  ::dra::Corpus_FileOperationsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_FileOperationsEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCorpus_FileOperationsEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_FileOperations_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_NewInputEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_NewInputEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Corpus_NewInputEntry_DoNotUse();
  }
  ::dra::Corpus_NewInputEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Corpus_NewInputEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCorpus_NewInputEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_Input_DependencyRPC_2eproto.base,}};

static void InitDefaultsCorpus_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Corpus_default_instance_;
    new (ptr) ::dra::Corpus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Corpus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_Corpus_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsCorpus_DependencyRPC_2eproto}, {
      &scc_info_Corpus_InputEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Corpus_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Corpus_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Corpus_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Corpus_FileOperationsEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Tasks_DependencyRPC_2eproto.base,
      &scc_info_Corpus_NewInputEntry_DoNotUse_DependencyRPC_2eproto.base,}};

static void InitDefaultsUsefulInput_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_UsefulInput_default_instance_;
    new (ptr) ::dra::UsefulInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::UsefulInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsefulInput_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsefulInput_DependencyRPC_2eproto}, {
      &scc_info_Input_DependencyRPC_2eproto.base,}};

static void InitDefaultsStatistic_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Statistic_default_instance_;
    new (ptr) ::dra::Statistic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Statistic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Statistic_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatistic_DependencyRPC_2eproto}, {}};

static void InitDefaultsStatistics_StatEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Statistics_StatEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Statistics_StatEntry_DoNotUse();
  }
  ::dra::Statistics_StatEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Statistics_StatEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStatistics_StatEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_Statistic_DependencyRPC_2eproto.base,}};

static void InitDefaultsStatistics_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Statistics_default_instance_;
    new (ptr) ::dra::Statistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Statistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Statistics_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStatistics_DependencyRPC_2eproto}, {
      &scc_info_Coverage_DependencyRPC_2eproto.base,
      &scc_info_Statistics_StatEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_UsefulInput_DependencyRPC_2eproto.base,}};

static void InitDefaultsTaskRunTimeData_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_TaskRunTimeData_UncoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse();
  }
  ::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TaskRunTimeData_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTaskRunTimeData_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_runTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultsTaskRunTimeData_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_TaskRunTimeData_CoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse();
  }
  ::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TaskRunTimeData_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTaskRunTimeData_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_runTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultsTaskRunTimeData_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_TaskRunTimeData_default_instance_;
    new (ptr) ::dra::TaskRunTimeData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::TaskRunTimeData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TaskRunTimeData_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTaskRunTimeData_DependencyRPC_2eproto}, {
      &scc_info_TaskRunTimeData_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_TaskRunTimeData_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,}};

static void InitDefaultsTask_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Task_UncoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Task_UncoveredAddressEntry_DoNotUse();
  }
  ::dra::Task_UncoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Task_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTask_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_runTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultsTask_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Task_CoveredAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Task_CoveredAddressEntry_DoNotUse();
  }
  ::dra::Task_CoveredAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Task_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTask_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_runTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultsTask_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Task_default_instance_;
    new (ptr) ::dra::Task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Task::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Task_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTask_DependencyRPC_2eproto}, {
      &scc_info_Task_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Task_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_TaskRunTimeData_DependencyRPC_2eproto.base,}};

static void InitDefaultsTasks_TaskMapEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Tasks_TaskMapEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Tasks_TaskMapEntry_DoNotUse();
  }
  ::dra::Tasks_TaskMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Tasks_TaskMapEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTasks_TaskMapEntry_DoNotUse_DependencyRPC_2eproto}, {
      &scc_info_Task_DependencyRPC_2eproto.base,}};

static void InitDefaultsTasks_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Tasks_default_instance_;
    new (ptr) ::dra::Tasks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Tasks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Tasks_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTasks_DependencyRPC_2eproto}, {
      &scc_info_Tasks_TaskMapEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Task_DependencyRPC_2eproto.base,}};

static void InitDefaultsTime_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Time_default_instance_;
    new (ptr) ::dra::Time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Time::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Time_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTime_DependencyRPC_2eproto}, {}};

static void InitDefaultsCoverage_CoverageEntry_DoNotUse_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Coverage_CoverageEntry_DoNotUse_default_instance_;
    new (ptr) ::dra::Coverage_CoverageEntry_DoNotUse();
  }
  ::dra::Coverage_CoverageEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Coverage_CoverageEntry_DoNotUse_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoverage_CoverageEntry_DoNotUse_DependencyRPC_2eproto}, {}};

static void InitDefaultsCoverage_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Coverage_default_instance_;
    new (ptr) ::dra::Coverage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Coverage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Coverage_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCoverage_DependencyRPC_2eproto}, {
      &scc_info_Coverage_CoverageEntry_DoNotUse_DependencyRPC_2eproto.base,
      &scc_info_Time_DependencyRPC_2eproto.base,}};

static void InitDefaultsConditions_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_Conditions_default_instance_;
    new (ptr) ::dra::Conditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::Conditions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Conditions_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConditions_DependencyRPC_2eproto}, {
      &scc_info_Condition_DependencyRPC_2eproto.base,}};

static void InitDefaultsWriteAddresses_DependencyRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dra::_WriteAddresses_default_instance_;
    new (ptr) ::dra::WriteAddresses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dra::WriteAddresses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WriteAddresses_DependencyRPC_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWriteAddresses_DependencyRPC_2eproto}, {
      &scc_info_Condition_DependencyRPC_2eproto.base,
      &scc_info_WriteAddress_DependencyRPC_2eproto.base,}};

void InitDefaults_DependencyRPC_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Empty_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Condition_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Call_AddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Call_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Inputs_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dependencytask_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_runTimeData_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileOperationsFunction_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileOperationsFunction_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileOperations_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileOperations_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteAddress_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteAddress_FileOperationsFunctionEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteAddress_InputEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteAddress_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_writeAddressAttributes_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UncoveredAddress_InputEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UncoveredAddress_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UncoveredAddress_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Path_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnstableInput_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Input_CallEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Input_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Input_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Input_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dependency_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_InputEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_WriteAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_FileOperationsEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_NewInputEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Corpus_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsefulInput_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Statistic_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Statistics_StatEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Statistics_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskRunTimeData_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskRunTimeData_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskRunTimeData_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Task_UncoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Task_CoveredAddressEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Task_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tasks_TaskMapEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tasks_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Time_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Coverage_CoverageEntry_DoNotUse_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Coverage_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Conditions_DependencyRPC_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteAddresses_DependencyRPC_2eproto.base);
}

static ::google::protobuf::Metadata file_level_metadata_DependencyRPC_2eproto[50];
static const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_DependencyRPC_2eproto[5];
static constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_DependencyRPC_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_DependencyRPC_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Empty, address_),
  PROTOBUF_FIELD_OFFSET(::dra::Empty, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Condition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Condition, condition_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, syzkaller_condition_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, syzkaller_uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, idx_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, successor_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, right_branch_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Condition, syzkaller_right_branch_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Call, idx_),
  PROTOBUF_FIELD_OFFSET(::dra::Call, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Inputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Inputs, input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Dependencytask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Dependencytask, input_),
  PROTOBUF_FIELD_OFFSET(::dra::Dependencytask, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, priority_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, condition_address_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, address_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, right_branch_address_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, task_status_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, program_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, idx_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, rcursive_count_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, checkcondition_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, checkaddress_),
  PROTOBUF_FIELD_OFFSET(::dra::runTimeData, checkrightbranchaddress_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, name_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, file_operations_name_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, kind_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, cmd_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, run_time_date_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperationsFunction, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations, name_),
  PROTOBUF_FIELD_OFFSET(::dra::FileOperations, file_operations_function_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_UncoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_UncoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_UncoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_UncoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_InputEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_InputEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_InputEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress_InputEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, condition_address_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, kind_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, file_operations_function_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, input_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddress, run_time_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::writeAddressAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::writeAddressAttributes, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::writeAddressAttributes, repeat_),
  PROTOBUF_FIELD_OFFSET(::dra::writeAddressAttributes, prio_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_InputEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_InputEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_InputEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_InputEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_WriteAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_WriteAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_WriteAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress_WriteAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, condition_address_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, right_branch_address_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, number_arrive_basicblocks_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, kind_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, number_dominator_instructions_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, input_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, count_),
  PROTOBUF_FIELD_OFFSET(::dra::UncoveredAddress, run_time_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Path, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, new_path_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, unstable_path_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, idx_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, sig_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, program_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Input, sig_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, program_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, call_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, stable_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, total_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, stat_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, program_before_mini_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Dependency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Dependency, input_),
  PROTOBUF_FIELD_OFFSET(::dra::Dependency, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Dependency, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_InputEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_InputEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_InputEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_InputEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_UncoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_UncoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_UncoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_UncoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_CoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_CoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_CoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_CoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_WriteAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_WriteAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_WriteAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_WriteAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_FileOperationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_FileOperationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_FileOperationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_FileOperationsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_NewInputEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_NewInputEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_NewInputEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus_NewInputEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, input_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, covered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, file_operations_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, tasks_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, high_task_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, boot_task_),
  PROTOBUF_FIELD_OFFSET(::dra::Corpus, new_input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::UsefulInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::UsefulInput, input_),
  PROTOBUF_FIELD_OFFSET(::dra::UsefulInput, time_),
  PROTOBUF_FIELD_OFFSET(::dra::UsefulInput, num_),
  PROTOBUF_FIELD_OFFSET(::dra::UsefulInput, new_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Statistic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Statistic, name_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistic, executenum_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistic, time_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistic, newtestcasenum_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistic, newaddressnum_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics_StatEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics_StatEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Statistics_StatEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics_StatEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Statistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Statistics, signalnum_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics, basic_block_number_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics, coverage_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics, stat_),
  PROTOBUF_FIELD_OFFSET(::dra::Statistics, useful_input_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, hash_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, program_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, write_idx_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, condition_idx_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, check_write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::TaskRunTimeData, covered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Task_UncoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Task_UncoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Task_UncoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Task_UncoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Task_CoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Task_CoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Task_CoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Task_CoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Task, sig_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, index_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, program_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, kind_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, priority_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, hash_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, count_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, write_sig_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, write_index_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, write_program_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, task_status_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, check_write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, covered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Task, task_run_time_data_),
  PROTOBUF_FIELD_OFFSET(::dra::Tasks_TaskMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Tasks_TaskMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Tasks_TaskMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Tasks_TaskMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Tasks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Tasks, name_),
  PROTOBUF_FIELD_OFFSET(::dra::Tasks, kind_),
  PROTOBUF_FIELD_OFFSET(::dra::Tasks, task_map_),
  PROTOBUF_FIELD_OFFSET(::dra::Tasks, task_array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Time, time_),
  PROTOBUF_FIELD_OFFSET(::dra::Time, num_),
  PROTOBUF_FIELD_OFFSET(::dra::Time, executenum_),
  PROTOBUF_FIELD_OFFSET(::dra::Coverage_CoverageEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Coverage_CoverageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Coverage_CoverageEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Coverage_CoverageEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Coverage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Coverage, coverage_),
  PROTOBUF_FIELD_OFFSET(::dra::Coverage, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Conditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::Conditions, condition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddresses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddresses, condition_),
  PROTOBUF_FIELD_OFFSET(::dra::WriteAddresses, write_address_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dra::Empty)},
  { 7, -1, sizeof(::dra::Condition)},
  { 20, 27, sizeof(::dra::Call_AddressEntry_DoNotUse)},
  { 29, -1, sizeof(::dra::Call)},
  { 36, -1, sizeof(::dra::Inputs)},
  { 42, -1, sizeof(::dra::Dependencytask)},
  { 49, -1, sizeof(::dra::runTimeData)},
  { 65, 72, sizeof(::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse)},
  { 74, -1, sizeof(::dra::FileOperationsFunction)},
  { 85, 92, sizeof(::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse)},
  { 94, -1, sizeof(::dra::FileOperations)},
  { 101, 108, sizeof(::dra::WriteAddress_UncoveredAddressEntry_DoNotUse)},
  { 110, 117, sizeof(::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse)},
  { 119, 126, sizeof(::dra::WriteAddress_InputEntry_DoNotUse)},
  { 128, -1, sizeof(::dra::WriteAddress)},
  { 140, -1, sizeof(::dra::writeAddressAttributes)},
  { 148, 155, sizeof(::dra::UncoveredAddress_InputEntry_DoNotUse)},
  { 157, 164, sizeof(::dra::UncoveredAddress_WriteAddressEntry_DoNotUse)},
  { 166, -1, sizeof(::dra::UncoveredAddress)},
  { 181, -1, sizeof(::dra::Path)},
  { 187, -1, sizeof(::dra::UnstableInput)},
  { 197, 204, sizeof(::dra::Input_CallEntry_DoNotUse)},
  { 206, 213, sizeof(::dra::Input_UncoveredAddressEntry_DoNotUse)},
  { 215, 222, sizeof(::dra::Input_WriteAddressEntry_DoNotUse)},
  { 224, -1, sizeof(::dra::Input)},
  { 238, -1, sizeof(::dra::Dependency)},
  { 246, 253, sizeof(::dra::Corpus_InputEntry_DoNotUse)},
  { 255, 262, sizeof(::dra::Corpus_UncoveredAddressEntry_DoNotUse)},
  { 264, 271, sizeof(::dra::Corpus_CoveredAddressEntry_DoNotUse)},
  { 273, 280, sizeof(::dra::Corpus_WriteAddressEntry_DoNotUse)},
  { 282, 289, sizeof(::dra::Corpus_FileOperationsEntry_DoNotUse)},
  { 291, 298, sizeof(::dra::Corpus_NewInputEntry_DoNotUse)},
  { 300, -1, sizeof(::dra::Corpus)},
  { 314, -1, sizeof(::dra::UsefulInput)},
  { 323, -1, sizeof(::dra::Statistic)},
  { 333, 340, sizeof(::dra::Statistics_StatEntry_DoNotUse)},
  { 342, -1, sizeof(::dra::Statistics)},
  { 352, 359, sizeof(::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse)},
  { 361, 368, sizeof(::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse)},
  { 370, -1, sizeof(::dra::TaskRunTimeData)},
  { 382, 389, sizeof(::dra::Task_UncoveredAddressEntry_DoNotUse)},
  { 391, 398, sizeof(::dra::Task_CoveredAddressEntry_DoNotUse)},
  { 400, -1, sizeof(::dra::Task)},
  { 421, 428, sizeof(::dra::Tasks_TaskMapEntry_DoNotUse)},
  { 430, -1, sizeof(::dra::Tasks)},
  { 439, -1, sizeof(::dra::Time)},
  { 447, 454, sizeof(::dra::Coverage_CoverageEntry_DoNotUse)},
  { 456, -1, sizeof(::dra::Coverage)},
  { 463, -1, sizeof(::dra::Conditions)},
  { 469, -1, sizeof(::dra::WriteAddresses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Condition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Call_AddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Call_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Inputs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Dependencytask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_runTimeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_FileOperationsFunction_WriteAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_FileOperationsFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_FileOperations_FileOperationsFunctionEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_FileOperations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_WriteAddress_UncoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_WriteAddress_FileOperationsFunctionEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_WriteAddress_InputEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_WriteAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_writeAddressAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_UncoveredAddress_InputEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_UncoveredAddress_WriteAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_UncoveredAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_UnstableInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Input_CallEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Input_UncoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Input_WriteAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Dependency_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_InputEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_UncoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_CoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_WriteAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_FileOperationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_NewInputEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Corpus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_UsefulInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Statistic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Statistics_StatEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Statistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_TaskRunTimeData_UncoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_TaskRunTimeData_CoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_TaskRunTimeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Task_UncoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Task_CoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Tasks_TaskMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Tasks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Coverage_CoverageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Coverage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_Conditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dra::_WriteAddresses_default_instance_),
};

static ::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_DependencyRPC_2eproto = {
  {}, AddDescriptors_DependencyRPC_2eproto, "DependencyRPC.proto", schemas,
  file_default_instances, TableStruct_DependencyRPC_2eproto::offsets,
  file_level_metadata_DependencyRPC_2eproto, 50, file_level_enum_descriptors_DependencyRPC_2eproto, file_level_service_descriptors_DependencyRPC_2eproto,
};

const char descriptor_table_protodef_DependencyRPC_2eproto[] =
  "\n\023DependencyRPC.proto\022\003dra\"&\n\005Empty\022\017\n\007a"
  "ddress\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\"\361\001\n\tCondition"
  "\022\031\n\021condition_address\030\001 \001(\004\022#\n\033syzkaller"
  "_condition_address\030\002 \001(\r\022\031\n\021uncovered_ad"
  "dress\030\003 \001(\004\022#\n\033syzkaller_uncovered_addre"
  "ss\030\004 \001(\r\022\013\n\003idx\030\005 \001(\r\022\021\n\tsuccessor\030\006 \001(\004"
  "\022\034\n\024right_branch_address\030\007 \003(\004\022&\n\036syzkal"
  "ler_right_branch_address\030\010 \003(\r\"l\n\004Call\022\013"
  "\n\003idx\030\001 \001(\r\022\'\n\007address\030\002 \003(\0132\026.dra.Call."
  "AddressEntry\032.\n\014AddressEntry\022\013\n\003key\030\001 \001("
  "\r\022\r\n\005value\030\002 \001(\r:\0028\001\"#\n\006Inputs\022\031\n\005input\030"
  "\001 \003(\0132\n.dra.Input\"9\n\016Dependencytask\022\031\n\005i"
  "nput\030\001 \001(\0132\n.dra.Input\022\014\n\004name\030) \001(\t\"\224\002\n"
  "\013runTimeData\022\020\n\010priority\030\001 \001(\r\022\031\n\021condit"
  "ion_address\030\002 \001(\r\022\017\n\007address\030\004 \001(\r\022\034\n\024ri"
  "ght_branch_address\030\006 \003(\r\022$\n\013task_status\030"
  "\n \001(\0162\017.dra.taskStatus\022\017\n\007program\030\014 \001(\014\022"
  "\013\n\003idx\030\r \001(\r\022\026\n\016rcursive_count\030\016 \001(\r\022\026\n\016"
  "checkCondition\030\025 \001(\010\022\024\n\014checkAddress\030\026 \001"
  "(\010\022\037\n\027checkRightBranchAddress\030\027 \001(\010\"\236\002\n\026"
  "FileOperationsFunction\022\014\n\004name\030\001 \001(\t\022\034\n\024"
  "file_operations_name\030\002 \001(\t\022\'\n\004kind\030\003 \001(\016"
  "2\031.dra.file_operations_kind\022\013\n\003cmd\030\004 \001(\004"
  "\022\'\n\rrun_time_date\030\005 \001(\0132\020.dra.runTimeDat"
  "a\022D\n\rwrite_address\030\013 \003(\0132-.dra.FileOpera"
  "tionsFunction.WriteAddressEntry\0323\n\021Write"
  "AddressEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r"
  ":\0028\001\"\315\001\n\016FileOperations\022\014\n\004name\030\001 \001(\t\022Q\n"
  "\030file_operations_function\030\003 \003(\0132/.dra.Fi"
  "leOperations.FileOperationsFunctionEntry"
  "\032Z\n\033FileOperationsFunctionEntry\022\013\n\003key\030\001"
  " \001(\003\022*\n\005value\030\002 \001(\0132\033.dra.FileOperations"
  "Function:\0028\001\"\374\003\n\014WriteAddress\022\025\n\rwrite_a"
  "ddress\030\002 \001(\r\022\031\n\021condition_address\030\003 \001(\r\022"
  "\014\n\004kind\030\004 \001(\r\022B\n\021uncovered_address\030\027 \003(\013"
  "2\'.dra.WriteAddress.UncoveredAddressEntr"
  "y\022O\n\030file_operations_function\030\030 \003(\0132-.dr"
  "a.WriteAddress.FileOperationsFunctionEnt"
  "ry\022+\n\005input\030\031 \003(\0132\034.dra.WriteAddress.Inp"
  "utEntry\022\'\n\rrun_time_date\030\013 \001(\0132\020.dra.run"
  "TimeData\032T\n\025UncoveredAddressEntry\022\013\n\003key"
  "\030\001 \001(\r\022*\n\005value\030\002 \001(\0132\033.dra.writeAddress"
  "Attributes:\0028\001\032=\n\033FileOperationsFunction"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032,\n"
  "\nInputEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:"
  "\0028\001\"M\n\026writeAddressAttributes\022\025\n\rwrite_a"
  "ddress\030\002 \001(\r\022\016\n\006repeat\030\007 \001(\r\022\014\n\004prio\030\006 \001"
  "(\r\"\202\004\n\020UncoveredAddress\022\031\n\021condition_add"
  "ress\030\001 \001(\r\022\031\n\021uncovered_address\030\002 \001(\r\022\034\n"
  "\024right_branch_address\030\003 \003(\r\022!\n\031number_ar"
  "rive_basicblocks\030\004 \001(\r\022\'\n\004kind\030\005 \001(\0162\031.d"
  "ra.UncoveredAddressKind\022%\n\035number_domina"
  "tor_instructions\030\006 \001(\r\022/\n\005input\030\026 \003(\0132 ."
  "dra.UncoveredAddress.InputEntry\022>\n\rwrite"
  "_address\030\027 \003(\0132\'.dra.UncoveredAddress.Wr"
  "iteAddressEntry\022\r\n\005count\030\030 \001(\r\022\'\n\rrun_ti"
  "me_date\030\010 \001(\0132\020.dra.runTimeData\032,\n\nInput"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032P\n"
  "\021WriteAddressEntry\022\013\n\003key\030\001 \001(\r\022*\n\005value"
  "\030\002 \001(\0132\033.dra.writeAddressAttributes:\0028\001\""
  "\027\n\004Path\022\017\n\007address\030\001 \003(\r\"y\n\rUnstableInpu"
  "t\022\033\n\010new_path\030\001 \001(\0132\t.dra.Path\022 \n\runstab"
  "le_path\030\002 \001(\0132\t.dra.Path\022\013\n\003idx\030\003 \001(\005\022\013\n"
  "\003sig\030\013 \001(\t\022\017\n\007program\030\014 \001(\014\"\275\003\n\005Input\022\013\n"
  "\003sig\030\013 \001(\t\022\017\n\007program\030\014 \001(\014\022\"\n\004call\030\r \003("
  "\0132\024.dra.Input.CallEntry\022\016\n\006stable\030\016 \001(\r\022"
  "\r\n\005total\030\017 \001(\r\022\036\n\004stat\030\025 \001(\0162\020.dra.Fuzzi"
  "ngStat\022;\n\021uncovered_address\030\026 \003(\0132 .dra."
  "Input.UncoveredAddressEntry\0223\n\rwrite_add"
  "ress\030\031 \003(\0132\034.dra.Input.WriteAddressEntry"
  "\022\033\n\023program_before_mini\030\036 \001(\014\0326\n\tCallEnt"
  "ry\022\013\n\003key\030\001 \001(\r\022\030\n\005value\030\002 \001(\0132\t.dra.Cal"
  "l:\0028\001\0327\n\025UncoveredAddressEntry\022\013\n\003key\030\001 "
  "\001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\0323\n\021WriteAddressEn"
  "try\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\203\001\n\n"
  "Dependency\022\031\n\005input\030\001 \001(\0132\n.dra.Input\0220\n"
  "\021uncovered_address\030\002 \001(\0132\025.dra.Uncovered"
  "Address\022(\n\rwrite_address\030\003 \003(\0132\021.dra.Wri"
  "teAddress\"\307\006\n\006Corpus\022%\n\005input\030\001 \003(\0132\026.dr"
  "a.Corpus.InputEntry\022<\n\021uncovered_address"
  "\030\004 \003(\0132!.dra.Corpus.UncoveredAddressEntr"
  "y\0228\n\017covered_address\030\002 \003(\0132\037.dra.Corpus."
  "CoveredAddressEntry\0224\n\rwrite_address\030\005 \003"
  "(\0132\035.dra.Corpus.WriteAddressEntry\0228\n\017fil"
  "e_operations\030\006 \003(\0132\037.dra.Corpus.FileOper"
  "ationsEntry\022\031\n\005tasks\030\007 \001(\0132\n.dra.Tasks\022\035"
  "\n\thigh_task\030\010 \001(\0132\n.dra.Tasks\022\035\n\tboot_ta"
  "sk\030\t \001(\0132\n.dra.Tasks\022,\n\tnew_input\030\013 \003(\0132"
  "\031.dra.Corpus.NewInputEntry\0328\n\nInputEntry"
  "\022\013\n\003key\030\001 \001(\t\022\031\n\005value\030\002 \001(\0132\n.dra.Input"
  ":\0028\001\032N\n\025UncoveredAddressEntry\022\013\n\003key\030\001 \001"
  "(\r\022$\n\005value\030\002 \001(\0132\025.dra.UncoveredAddress"
  ":\0028\001\032L\n\023CoveredAddressEntry\022\013\n\003key\030\001 \001(\r"
  "\022$\n\005value\030\002 \001(\0132\025.dra.UncoveredAddress:\002"
  "8\001\032F\n\021WriteAddressEntry\022\013\n\003key\030\001 \001(\r\022 \n\005"
  "value\030\002 \001(\0132\021.dra.WriteAddress:\0028\001\032J\n\023Fi"
  "leOperationsEntry\022\013\n\003key\030\001 \001(\t\022\"\n\005value\030"
  "\002 \001(\0132\023.dra.FileOperations:\0028\001\032;\n\rNewInp"
  "utEntry\022\013\n\003key\030\001 \001(\t\022\031\n\005value\030\002 \001(\0132\n.dr"
  "a.Input:\0028\001\"X\n\013UsefulInput\022\031\n\005input\030\001 \001("
  "\0132\n.dra.Input\022\014\n\004time\030\002 \001(\001\022\013\n\003num\030\003 \001(\004"
  "\022\023\n\013new_address\030\004 \003(\r\"|\n\tStatistic\022\036\n\004na"
  "me\030\001 \001(\0162\020.dra.FuzzingStat\022\022\n\nexecuteNum"
  "\030\013 \001(\004\022\014\n\004time\030\014 \001(\001\022\026\n\016newTestCaseNum\030\r"
  " \001(\004\022\025\n\rnewAddressNum\030\016 \001(\004\"\352\001\n\nStatisti"
  "cs\022\021\n\tsignalNum\030\001 \001(\004\022\032\n\022basic_block_num"
  "ber\030\n \001(\r\022\037\n\010coverage\030\010 \001(\0132\r.dra.Covera"
  "ge\022\'\n\004stat\030\013 \003(\0132\031.dra.Statistics.StatEn"
  "try\022&\n\014useful_input\030\014 \003(\0132\020.dra.UsefulIn"
  "put\032;\n\tStatEntry\022\013\n\003key\030\001 \001(\005\022\035\n\005value\030\002"
  " \001(\0132\016.dra.Statistic:\0028\001\"\225\003\n\017TaskRunTime"
  "Data\022\014\n\004hash\030\001 \001(\t\022\017\n\007program\030\002 \001(\014\022\021\n\tw"
  "rite_idx\030\005 \001(\r\022\025\n\rcondition_idx\030\006 \001(\r\022\033\n"
  "\023check_write_address\030\n \001(\010\022E\n\021uncovered_"
  "address\030\025 \003(\0132*.dra.TaskRunTimeData.Unco"
  "veredAddressEntry\022A\n\017covered_address\030\027 \003"
  "(\0132(.dra.TaskRunTimeData.CoveredAddressE"
  "ntry\032I\n\025UncoveredAddressEntry\022\013\n\003key\030\001 \001"
  "(\r\022\037\n\005value\030\002 \001(\0132\020.dra.runTimeData:\0028\001\032"
  "G\n\023CoveredAddressEntry\022\013\n\003key\030\001 \001(\r\022\037\n\005v"
  "alue\030\002 \001(\0132\020.dra.runTimeData:\0028\001\"\303\004\n\004Tas"
  "k\022\013\n\003sig\030\001 \001(\t\022\r\n\005index\030\002 \001(\r\022\017\n\007program"
  "\030\003 \001(\014\022\014\n\004kind\030\004 \001(\r\022\020\n\010priority\030\005 \001(\005\022\014"
  "\n\004hash\030\006 \001(\t\022\r\n\005count\030\007 \001(\r\022\021\n\twrite_sig"
  "\030\013 \001(\t\022\023\n\013write_index\030\014 \001(\r\022\025\n\rwrite_pro"
  "gram\030\r \001(\014\022\025\n\rwrite_address\030\016 \001(\r\022$\n\013tas"
  "k_status\030\030 \001(\0162\017.dra.taskStatus\022\033\n\023check"
  "_write_address\030\031 \001(\010\022:\n\021uncovered_addres"
  "s\030\025 \003(\0132\037.dra.Task.UncoveredAddressEntry"
  "\0226\n\017covered_address\030\027 \003(\0132\035.dra.Task.Cov"
  "eredAddressEntry\0220\n\022task_run_time_data\030\037"
  " \003(\0132\024.dra.TaskRunTimeData\032I\n\025UncoveredA"
  "ddressEntry\022\013\n\003key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132"
  "\020.dra.runTimeData:\0028\001\032G\n\023CoveredAddressE"
  "ntry\022\013\n\003key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.dra.r"
  "unTimeData:\0028\001\"\267\001\n\005Tasks\022\014\n\004name\030) \001(\t\022\033"
  "\n\004kind\030* \001(\0162\r.dra.TaskKind\022)\n\010task_map\030"
  "\001 \003(\0132\027.dra.Tasks.TaskMapEntry\022\035\n\ntask_a"
  "rray\030\002 \003(\0132\t.dra.Task\0329\n\014TaskMapEntry\022\013\n"
  "\003key\030\001 \001(\t\022\030\n\005value\030\002 \001(\0132\t.dra.Task:\0028\001"
  "\"5\n\004Time\022\014\n\004time\030\001 \001(\001\022\013\n\003num\030\002 \001(\003\022\022\n\ne"
  "xecuteNum\030\003 \001(\003\"\203\001\n\010Coverage\022-\n\010coverage"
  "\030\001 \003(\0132\033.dra.Coverage.CoverageEntry\022\027\n\004t"
  "ime\030\002 \003(\0132\t.dra.Time\032/\n\rCoverageEntry\022\013\n"
  "\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"/\n\nConditi"
  "ons\022!\n\tcondition\030\n \003(\0132\016.dra.Condition\"]"
  "\n\016WriteAddresses\022!\n\tcondition\030\001 \001(\0132\016.dr"
  "a.Condition\022(\n\rwrite_address\030\004 \003(\0132\021.dra"
  ".WriteAddress*f\n\ntaskStatus\022\014\n\010untested\020"
  "\000\022\013\n\007testing\020\001\022\014\n\010unstable\020\002\022\n\n\006tested\020\003"
  "\022\013\n\007covered\020\004\022\r\n\trecursive\020\n\022\007\n\003out\020\013*\215\001"
  "\n\024file_operations_kind\022\013\n\007default\020\000\022\010\n\004i"
  "nit\020\001\022\n\n\006llseek\020\002\022\010\n\004read\020\003\022\t\n\005write\020\004\022\010"
  "\n\004poll\020\t\022\022\n\016unlocked_ioctl\020\n\022\010\n\004mmap\020\014\022\010"
  "\n\004open\020\016\022\013\n\007release\020\020*W\n\024UncoveredAddres"
  "sKind\022\013\n\007Outside\020\000\022\020\n\014InputRelated\020\001\022\025\n\021"
  "DependnecyRelated\020\002\022\t\n\005Other\020\003*\312\001\n\013Fuzzi"
  "ngStat\022\017\n\013StatDefault\020\000\022\020\n\014StatGenerate\020"
  "\001\022\014\n\010StatFuzz\020\002\022\021\n\rStatCandidate\020\003\022\016\n\nSt"
  "atTriage\020\004\022\020\n\014StatMinimize\020\005\022\r\n\tStatSmas"
  "h\020\006\022\014\n\010StatHint\020\007\022\014\n\010StatSeed\020\010\022\022\n\016StatD"
  "ependency\020\t\022\026\n\022StatDependencyBoot\020\n**\n\010T"
  "askKind\022\n\n\006Normal\020\000\022\010\n\004High\020\001\022\010\n\004Boot\020\0022"
  "\365\005\n\rDependencyRPC\022(\n\014GetVMOffsets\022\n.dra."
  "Empty\032\n.dra.Empty\"\000\0220\n\024SendBasicBlockNum"
  "ber\022\n.dra.Empty\032\n.dra.Empty\"\000\022(\n\013GetNewI"
  "nput\022\n.dra.Empty\032\013.dra.Inputs\"\000\022/\n\016SendD"
  "ependency\022\017.dra.Dependency\032\n.dra.Empty\"\000"
  "\022-\n\014GetCondition\022\n.dra.Empty\032\017.dra.Condi"
  "tions\"\000\0225\n\020SendWriteAddress\022\023.dra.WriteA"
  "ddresses\032\n.dra.Empty\"\000\022#\n\007Connect\022\n.dra."
  "Empty\032\n.dra.Empty\"\000\022(\n\014SendNewInput\022\n.dr"
  "a.Input\032\n.dra.Empty\"\000\022$\n\010GetTasks\022\n.dra."
  "Empty\032\n.dra.Tasks\"\000\022(\n\014GetBootTasks\022\n.dr"
  "a.Empty\032\n.dra.Tasks\"\000\022\'\n\013ReturnTasks\022\n.d"
  "ra.Tasks\032\n.dra.Empty\"\000\022)\n\rSendBootInput\022"
  "\n.dra.Input\032\n.dra.Empty\"\000\0225\n\021SendUnstabl"
  "eInput\022\022.dra.UnstableInput\032\n.dra.Empty\"\000"
  "\022#\n\007SendLog\022\n.dra.Empty\032\n.dra.Empty\"\000\022(\n"
  "\010sendStat\022\016.dra.Statistic\032\n.dra.Empty\"\000\022"
  "#\n\007GetNeed\022\n.dra.Empty\032\n.dra.Empty\"\000\022)\n\r"
  "SendNeedInput\022\n.dra.Input\032\n.dra.Empty\"\000b"
  "\006proto3"
  ;
static ::google::protobuf::internal::DescriptorTable descriptor_table_DependencyRPC_2eproto = {
  false, InitDefaults_DependencyRPC_2eproto, 
  descriptor_table_protodef_DependencyRPC_2eproto,
  "DependencyRPC.proto", &assign_descriptors_table_DependencyRPC_2eproto, 7287,
};

void AddDescriptors_DependencyRPC_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_DependencyRPC_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_DependencyRPC_2eproto = []() { AddDescriptors_DependencyRPC_2eproto(); return true; }();
namespace dra {
const ::google::protobuf::EnumDescriptor* taskStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_DependencyRPC_2eproto);
  return file_level_enum_descriptors_DependencyRPC_2eproto[0];
}
bool taskStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* file_operations_kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_DependencyRPC_2eproto);
  return file_level_enum_descriptors_DependencyRPC_2eproto[1];
}
bool file_operations_kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 9:
    case 10:
    case 12:
    case 14:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UncoveredAddressKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_DependencyRPC_2eproto);
  return file_level_enum_descriptors_DependencyRPC_2eproto[2];
}
bool UncoveredAddressKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FuzzingStat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_DependencyRPC_2eproto);
  return file_level_enum_descriptors_DependencyRPC_2eproto[3];
}
bool FuzzingStat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TaskKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_DependencyRPC_2eproto);
  return file_level_enum_descriptors_DependencyRPC_2eproto[4];
}
bool TaskKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Empty::kAddressFieldNumber;
const int Empty::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:dra.Empty)
}

void Empty::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Empty_DependencyRPC_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = 0u;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:dra.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Empty_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Empty::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "dra.Empty.name");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Empty.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Empty)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 address = 1;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->address(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Empty.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 address = 1;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->address(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Empty.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Empty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 address = 1;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_, other->address_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Condition::InitAsDefaultInstance() {
}
class Condition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Condition::kConditionAddressFieldNumber;
const int Condition::kSyzkallerConditionAddressFieldNumber;
const int Condition::kUncoveredAddressFieldNumber;
const int Condition::kSyzkallerUncoveredAddressFieldNumber;
const int Condition::kIdxFieldNumber;
const int Condition::kSuccessorFieldNumber;
const int Condition::kRightBranchAddressFieldNumber;
const int Condition::kSyzkallerRightBranchAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Condition::Condition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Condition)
}
Condition::Condition(const Condition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      right_branch_address_(from.right_branch_address_),
      syzkaller_right_branch_address_(from.syzkaller_right_branch_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&condition_address_, &from.condition_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
    reinterpret_cast<char*>(&condition_address_)) + sizeof(idx_));
  // @@protoc_insertion_point(copy_constructor:dra.Condition)
}

void Condition::SharedCtor() {
  ::memset(&condition_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&condition_address_)) + sizeof(idx_));
}

Condition::~Condition() {
  // @@protoc_insertion_point(destructor:dra.Condition)
  SharedDtor();
}

void Condition::SharedDtor() {
}

void Condition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Condition& Condition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Condition_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  right_branch_address_.Clear();
  syzkaller_right_branch_address_.Clear();
  ::memset(&condition_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&condition_address_)) + sizeof(idx_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Condition::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 condition_address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_condition_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 syzkaller_condition_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_syzkaller_condition_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 uncovered_address = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        set_uncovered_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 syzkaller_uncovered_address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_syzkaller_uncovered_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 idx = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        set_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 successor = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        set_successor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 right_branch_address = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) == 58) {
          ptr = ::google::protobuf::internal::PackedUInt64Parser(mutable_right_branch_address(), ptr, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        do {
          add_right_branch_address(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 56 && (ptr += 1));
        break;
      }
      // repeated uint32 syzkaller_right_branch_address = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) == 66) {
          ptr = ::google::protobuf::internal::PackedUInt32Parser(mutable_syzkaller_right_branch_address(), ptr, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        do {
          add_syzkaller_right_branch_address(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 64 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Condition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 condition_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &condition_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 syzkaller_condition_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &syzkaller_condition_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uncovered_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uncovered_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 syzkaller_uncovered_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &syzkaller_uncovered_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 idx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 successor = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &successor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 right_branch_address = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_right_branch_address())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_right_branch_address())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 syzkaller_right_branch_address = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_syzkaller_right_branch_address())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_syzkaller_right_branch_address())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Condition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 condition_address = 1;
  if (this->condition_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->condition_address(), output);
  }

  // uint32 syzkaller_condition_address = 2;
  if (this->syzkaller_condition_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->syzkaller_condition_address(), output);
  }

  // uint64 uncovered_address = 3;
  if (this->uncovered_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uncovered_address(), output);
  }

  // uint32 syzkaller_uncovered_address = 4;
  if (this->syzkaller_uncovered_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->syzkaller_uncovered_address(), output);
  }

  // uint32 idx = 5;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->idx(), output);
  }

  // uint64 successor = 6;
  if (this->successor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->successor(), output);
  }

  // repeated uint64 right_branch_address = 7;
  if (this->right_branch_address_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_right_branch_address_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->right_branch_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->right_branch_address(i), output);
  }

  // repeated uint32 syzkaller_right_branch_address = 8;
  if (this->syzkaller_right_branch_address_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_syzkaller_right_branch_address_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->syzkaller_right_branch_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->syzkaller_right_branch_address(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Condition)
}

::google::protobuf::uint8* Condition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 condition_address = 1;
  if (this->condition_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->condition_address(), target);
  }

  // uint32 syzkaller_condition_address = 2;
  if (this->syzkaller_condition_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->syzkaller_condition_address(), target);
  }

  // uint64 uncovered_address = 3;
  if (this->uncovered_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uncovered_address(), target);
  }

  // uint32 syzkaller_uncovered_address = 4;
  if (this->syzkaller_uncovered_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->syzkaller_uncovered_address(), target);
  }

  // uint32 idx = 5;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->idx(), target);
  }

  // uint64 successor = 6;
  if (this->successor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->successor(), target);
  }

  // repeated uint64 right_branch_address = 7;
  if (this->right_branch_address_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _right_branch_address_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->right_branch_address_, target);
  }

  // repeated uint32 syzkaller_right_branch_address = 8;
  if (this->syzkaller_right_branch_address_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _syzkaller_right_branch_address_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->syzkaller_right_branch_address_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Condition)
  return target;
}

size_t Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Condition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 right_branch_address = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->right_branch_address_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _right_branch_address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 syzkaller_right_branch_address = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->syzkaller_right_branch_address_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _syzkaller_right_branch_address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 condition_address = 1;
  if (this->condition_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->condition_address());
  }

  // uint64 uncovered_address = 3;
  if (this->uncovered_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uncovered_address());
  }

  // uint32 syzkaller_condition_address = 2;
  if (this->syzkaller_condition_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->syzkaller_condition_address());
  }

  // uint32 syzkaller_uncovered_address = 4;
  if (this->syzkaller_uncovered_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->syzkaller_uncovered_address());
  }

  // uint64 successor = 6;
  if (this->successor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->successor());
  }

  // uint32 idx = 5;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Condition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  const Condition* source =
      ::google::protobuf::DynamicCastToGenerated<Condition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Condition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Condition)
    MergeFrom(*source);
  }
}

void Condition::MergeFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  right_branch_address_.MergeFrom(from.right_branch_address_);
  syzkaller_right_branch_address_.MergeFrom(from.syzkaller_right_branch_address_);
  if (from.condition_address() != 0) {
    set_condition_address(from.condition_address());
  }
  if (from.uncovered_address() != 0) {
    set_uncovered_address(from.uncovered_address());
  }
  if (from.syzkaller_condition_address() != 0) {
    set_syzkaller_condition_address(from.syzkaller_condition_address());
  }
  if (from.syzkaller_uncovered_address() != 0) {
    set_syzkaller_uncovered_address(from.syzkaller_uncovered_address());
  }
  if (from.successor() != 0) {
    set_successor(from.successor());
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
}

void Condition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Condition::CopyFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Condition::IsInitialized() const {
  return true;
}

void Condition::Swap(Condition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Condition::InternalSwap(Condition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  right_branch_address_.InternalSwap(&other->right_branch_address_);
  syzkaller_right_branch_address_.InternalSwap(&other->syzkaller_right_branch_address_);
  swap(condition_address_, other->condition_address_);
  swap(uncovered_address_, other->uncovered_address_);
  swap(syzkaller_condition_address_, other->syzkaller_condition_address_);
  swap(syzkaller_uncovered_address_, other->syzkaller_uncovered_address_);
  swap(successor_, other->successor_);
  swap(idx_, other->idx_);
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Call_AddressEntry_DoNotUse::Call_AddressEntry_DoNotUse() {}
Call_AddressEntry_DoNotUse::Call_AddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Call_AddressEntry_DoNotUse::MergeFrom(const Call_AddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Call_AddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[2];
}
void Call_AddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Call::InitAsDefaultInstance() {
}
class Call::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call::kIdxFieldNumber;
const int Call::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call::Call()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Call)
}
Call::Call(const Call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.MergeFrom(from.address_);
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:dra.Call)
}

void Call::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Call_DependencyRPC_2eproto.base);
  idx_ = 0u;
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:dra.Call)
  SharedDtor();
}

void Call::SharedDtor() {
}

void Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Call& Call::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Call_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  idx_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Call::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 idx = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<uint32, uint32> address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Call)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          Call_AddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Call_AddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Call)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 idx = 1;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->idx(), output);
  }

  // map<uint32, uint32> address = 2;
  if (!this->address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->address().begin();
          it != this->address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Call_AddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->address().begin();
          it != this->address().end(); ++it) {
        Call_AddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Call)
}

::google::protobuf::uint8* Call::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 idx = 1;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->idx(), target);
  }

  // map<uint32, uint32> address = 2;
  if (!this->address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->address().begin();
          it != this->address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Call_AddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->address().begin();
          it != this->address().end(); ++it) {
        Call_AddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Call)
  return target;
}

size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Call)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, uint32> address = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
      it = this->address().begin();
      it != this->address().end(); ++it) {
    Call_AddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // uint32 idx = 1;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Call* source =
      ::google::protobuf::DynamicCastToGenerated<Call>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Call)
    MergeFrom(*source);
  }
}

void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
}

void Call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  return true;
}

void Call::Swap(Call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call::InternalSwap(Call* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_);
  swap(idx_, other->idx_);
}

::google::protobuf::Metadata Call::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Inputs::InitAsDefaultInstance() {
}
class Inputs::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Inputs::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Inputs::Inputs()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Inputs)
}
Inputs::Inputs(const Inputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      input_(from.input_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dra.Inputs)
}

void Inputs::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Inputs_DependencyRPC_2eproto.base);
}

Inputs::~Inputs() {
  // @@protoc_insertion_point(destructor:dra.Inputs)
  SharedDtor();
}

void Inputs::SharedDtor() {
}

void Inputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Inputs& Inputs::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Inputs_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Inputs::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Inputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Inputs::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .dra.Input input = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_input(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Inputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Inputs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dra.Input input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Inputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Inputs)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Inputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Inputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dra.Input input = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->input(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Inputs)
}

::google::protobuf::uint8* Inputs::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Inputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dra.Input input = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->input(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Inputs)
  return target;
}

size_t Inputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Inputs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dra.Input input = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->input_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Inputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Inputs)
  GOOGLE_DCHECK_NE(&from, this);
  const Inputs* source =
      ::google::protobuf::DynamicCastToGenerated<Inputs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Inputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Inputs)
    MergeFrom(*source);
  }
}

void Inputs::MergeFrom(const Inputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Inputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
}

void Inputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Inputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inputs::CopyFrom(const Inputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Inputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inputs::IsInitialized() const {
  return true;
}

void Inputs::Swap(Inputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inputs::InternalSwap(Inputs* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&input_)->InternalSwap(CastToBase(&other->input_));
}

::google::protobuf::Metadata Inputs::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Dependencytask::InitAsDefaultInstance() {
  ::dra::_Dependencytask_default_instance_._instance.get_mutable()->input_ = const_cast< ::dra::Input*>(
      ::dra::Input::internal_default_instance());
}
class Dependencytask::HasBitSetters {
 public:
  static const ::dra::Input& input(const Dependencytask* msg);
};

const ::dra::Input&
Dependencytask::HasBitSetters::input(const Dependencytask* msg) {
  return *msg->input_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dependencytask::kInputFieldNumber;
const int Dependencytask::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dependencytask::Dependencytask()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Dependencytask)
}
Dependencytask::Dependencytask(const Dependencytask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_input()) {
    input_ = new ::dra::Input(*from.input_);
  } else {
    input_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dra.Dependencytask)
}

void Dependencytask::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Dependencytask_DependencyRPC_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_ = nullptr;
}

Dependencytask::~Dependencytask() {
  // @@protoc_insertion_point(destructor:dra.Dependencytask)
  SharedDtor();
}

void Dependencytask::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete input_;
}

void Dependencytask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Dependencytask& Dependencytask::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Dependencytask_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Dependencytask::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Dependencytask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Dependencytask::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .dra.Input input = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_input(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 41;
      case 41: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "dra.Dependencytask.name");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Dependencytask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Dependencytask)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dra.Input input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (330 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Dependencytask.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Dependencytask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Dependencytask)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Dependencytask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Dependencytask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Input input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::input(this), output);
  }

  // string name = 41;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Dependencytask.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Dependencytask)
}

::google::protobuf::uint8* Dependencytask::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Dependencytask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Input input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::input(this), target);
  }

  // string name = 41;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Dependencytask.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Dependencytask)
  return target;
}

size_t Dependencytask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Dependencytask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 41;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .dra.Input input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dependencytask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Dependencytask)
  GOOGLE_DCHECK_NE(&from, this);
  const Dependencytask* source =
      ::google::protobuf::DynamicCastToGenerated<Dependencytask>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Dependencytask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Dependencytask)
    MergeFrom(*source);
  }
}

void Dependencytask::MergeFrom(const Dependencytask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Dependencytask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_input()) {
    mutable_input()->::dra::Input::MergeFrom(from.input());
  }
}

void Dependencytask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Dependencytask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dependencytask::CopyFrom(const Dependencytask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Dependencytask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dependencytask::IsInitialized() const {
  return true;
}

void Dependencytask::Swap(Dependencytask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dependencytask::InternalSwap(Dependencytask* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_, other->input_);
}

::google::protobuf::Metadata Dependencytask::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void runTimeData::InitAsDefaultInstance() {
}
class runTimeData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int runTimeData::kPriorityFieldNumber;
const int runTimeData::kConditionAddressFieldNumber;
const int runTimeData::kAddressFieldNumber;
const int runTimeData::kRightBranchAddressFieldNumber;
const int runTimeData::kTaskStatusFieldNumber;
const int runTimeData::kProgramFieldNumber;
const int runTimeData::kIdxFieldNumber;
const int runTimeData::kRcursiveCountFieldNumber;
const int runTimeData::kCheckConditionFieldNumber;
const int runTimeData::kCheckAddressFieldNumber;
const int runTimeData::kCheckRightBranchAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

runTimeData::runTimeData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.runTimeData)
}
runTimeData::runTimeData(const runTimeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      right_branch_address_(from.right_branch_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.program().size() > 0) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  ::memcpy(&priority_, &from.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&rcursive_count_) -
    reinterpret_cast<char*>(&priority_)) + sizeof(rcursive_count_));
  // @@protoc_insertion_point(copy_constructor:dra.runTimeData)
}

void runTimeData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_runTimeData_DependencyRPC_2eproto.base);
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rcursive_count_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(rcursive_count_));
}

runTimeData::~runTimeData() {
  // @@protoc_insertion_point(destructor:dra.runTimeData)
  SharedDtor();
}

void runTimeData::SharedDtor() {
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void runTimeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const runTimeData& runTimeData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_runTimeData_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void runTimeData::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.runTimeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  right_branch_address_.Clear();
  program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rcursive_count_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(rcursive_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* runTimeData::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 priority = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_priority(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 condition_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_condition_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 right_branch_address = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) == 50) {
          ptr = ::google::protobuf::internal::PackedUInt32Parser(mutable_right_branch_address(), ptr, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        do {
          add_right_branch_address(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 48 && (ptr += 1));
        break;
      }
      // .dra.taskStatus task_status = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_task_status(static_cast<::dra::taskStatus>(val));
        break;
      }
      // bytes program = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_program(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 idx = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        set_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 rcursive_count = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        set_rcursive_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool checkCondition = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        set_checkcondition(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool checkAddress = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 176) goto handle_unusual;
        set_checkaddress(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool checkRightBranchAddress = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 184) goto handle_unusual;
        set_checkrightbranchaddress(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool runTimeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.runTimeData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 priority = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 condition_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &condition_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 right_branch_address = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_right_branch_address())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_right_branch_address())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.taskStatus task_status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_task_status(static_cast< ::dra::taskStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes program = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 idx = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rcursive_count = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rcursive_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool checkCondition = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checkcondition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool checkAddress = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (176 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checkaddress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool checkRightBranchAddress = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (184 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checkrightbranchaddress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.runTimeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.runTimeData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void runTimeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.runTimeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 priority = 1;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->priority(), output);
  }

  // uint32 condition_address = 2;
  if (this->condition_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->condition_address(), output);
  }

  // uint32 address = 4;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->address(), output);
  }

  // repeated uint32 right_branch_address = 6;
  if (this->right_branch_address_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_right_branch_address_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->right_branch_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->right_branch_address(i), output);
  }

  // .dra.taskStatus task_status = 10;
  if (this->task_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->task_status(), output);
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->program(), output);
  }

  // uint32 idx = 13;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->idx(), output);
  }

  // uint32 rcursive_count = 14;
  if (this->rcursive_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->rcursive_count(), output);
  }

  // bool checkCondition = 21;
  if (this->checkcondition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->checkcondition(), output);
  }

  // bool checkAddress = 22;
  if (this->checkaddress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->checkaddress(), output);
  }

  // bool checkRightBranchAddress = 23;
  if (this->checkrightbranchaddress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->checkrightbranchaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.runTimeData)
}

::google::protobuf::uint8* runTimeData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.runTimeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 priority = 1;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->priority(), target);
  }

  // uint32 condition_address = 2;
  if (this->condition_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->condition_address(), target);
  }

  // uint32 address = 4;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->address(), target);
  }

  // repeated uint32 right_branch_address = 6;
  if (this->right_branch_address_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _right_branch_address_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->right_branch_address_, target);
  }

  // .dra.taskStatus task_status = 10;
  if (this->task_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->task_status(), target);
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->program(), target);
  }

  // uint32 idx = 13;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->idx(), target);
  }

  // uint32 rcursive_count = 14;
  if (this->rcursive_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->rcursive_count(), target);
  }

  // bool checkCondition = 21;
  if (this->checkcondition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->checkcondition(), target);
  }

  // bool checkAddress = 22;
  if (this->checkaddress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->checkaddress(), target);
  }

  // bool checkRightBranchAddress = 23;
  if (this->checkrightbranchaddress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->checkrightbranchaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.runTimeData)
  return target;
}

size_t runTimeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.runTimeData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 right_branch_address = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->right_branch_address_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _right_branch_address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->program());
  }

  // uint32 priority = 1;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->priority());
  }

  // uint32 condition_address = 2;
  if (this->condition_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->condition_address());
  }

  // uint32 address = 4;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->address());
  }

  // .dra.taskStatus task_status = 10;
  if (this->task_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->task_status());
  }

  // bool checkCondition = 21;
  if (this->checkcondition() != 0) {
    total_size += 2 + 1;
  }

  // bool checkAddress = 22;
  if (this->checkaddress() != 0) {
    total_size += 2 + 1;
  }

  // bool checkRightBranchAddress = 23;
  if (this->checkrightbranchaddress() != 0) {
    total_size += 2 + 1;
  }

  // uint32 idx = 13;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  // uint32 rcursive_count = 14;
  if (this->rcursive_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rcursive_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void runTimeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.runTimeData)
  GOOGLE_DCHECK_NE(&from, this);
  const runTimeData* source =
      ::google::protobuf::DynamicCastToGenerated<runTimeData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.runTimeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.runTimeData)
    MergeFrom(*source);
  }
}

void runTimeData::MergeFrom(const runTimeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.runTimeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  right_branch_address_.MergeFrom(from.right_branch_address_);
  if (from.program().size() > 0) {

    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.condition_address() != 0) {
    set_condition_address(from.condition_address());
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
  if (from.task_status() != 0) {
    set_task_status(from.task_status());
  }
  if (from.checkcondition() != 0) {
    set_checkcondition(from.checkcondition());
  }
  if (from.checkaddress() != 0) {
    set_checkaddress(from.checkaddress());
  }
  if (from.checkrightbranchaddress() != 0) {
    set_checkrightbranchaddress(from.checkrightbranchaddress());
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
  if (from.rcursive_count() != 0) {
    set_rcursive_count(from.rcursive_count());
  }
}

void runTimeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.runTimeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void runTimeData::CopyFrom(const runTimeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.runTimeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool runTimeData::IsInitialized() const {
  return true;
}

void runTimeData::Swap(runTimeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void runTimeData::InternalSwap(runTimeData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  right_branch_address_.InternalSwap(&other->right_branch_address_);
  program_.Swap(&other->program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(priority_, other->priority_);
  swap(condition_address_, other->condition_address_);
  swap(address_, other->address_);
  swap(task_status_, other->task_status_);
  swap(checkcondition_, other->checkcondition_);
  swap(checkaddress_, other->checkaddress_);
  swap(checkrightbranchaddress_, other->checkrightbranchaddress_);
  swap(idx_, other->idx_);
  swap(rcursive_count_, other->rcursive_count_);
}

::google::protobuf::Metadata runTimeData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

FileOperationsFunction_WriteAddressEntry_DoNotUse::FileOperationsFunction_WriteAddressEntry_DoNotUse() {}
FileOperationsFunction_WriteAddressEntry_DoNotUse::FileOperationsFunction_WriteAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void FileOperationsFunction_WriteAddressEntry_DoNotUse::MergeFrom(const FileOperationsFunction_WriteAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata FileOperationsFunction_WriteAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[7];
}
void FileOperationsFunction_WriteAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void FileOperationsFunction::InitAsDefaultInstance() {
  ::dra::_FileOperationsFunction_default_instance_._instance.get_mutable()->run_time_date_ = const_cast< ::dra::runTimeData*>(
      ::dra::runTimeData::internal_default_instance());
}
class FileOperationsFunction::HasBitSetters {
 public:
  static const ::dra::runTimeData& run_time_date(const FileOperationsFunction* msg);
};

const ::dra::runTimeData&
FileOperationsFunction::HasBitSetters::run_time_date(const FileOperationsFunction* msg) {
  return *msg->run_time_date_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileOperationsFunction::kNameFieldNumber;
const int FileOperationsFunction::kFileOperationsNameFieldNumber;
const int FileOperationsFunction::kKindFieldNumber;
const int FileOperationsFunction::kCmdFieldNumber;
const int FileOperationsFunction::kRunTimeDateFieldNumber;
const int FileOperationsFunction::kWriteAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileOperationsFunction::FileOperationsFunction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.FileOperationsFunction)
}
FileOperationsFunction::FileOperationsFunction(const FileOperationsFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  write_address_.MergeFrom(from.write_address_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  file_operations_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_operations_name().size() > 0) {
    file_operations_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_operations_name_);
  }
  if (from.has_run_time_date()) {
    run_time_date_ = new ::dra::runTimeData(*from.run_time_date_);
  } else {
    run_time_date_ = nullptr;
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:dra.FileOperationsFunction)
}

void FileOperationsFunction::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileOperationsFunction_DependencyRPC_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_operations_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&run_time_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&run_time_date_)) + sizeof(kind_));
}

FileOperationsFunction::~FileOperationsFunction() {
  // @@protoc_insertion_point(destructor:dra.FileOperationsFunction)
  SharedDtor();
}

void FileOperationsFunction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_operations_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete run_time_date_;
}

void FileOperationsFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileOperationsFunction& FileOperationsFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileOperationsFunction_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void FileOperationsFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.FileOperationsFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  write_address_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_operations_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && run_time_date_ != nullptr) {
    delete run_time_date_;
  }
  run_time_date_ = nullptr;
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileOperationsFunction::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "dra.FileOperationsFunction.name");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string file_operations_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_file_operations_name(), ptr, ctx, "dra.FileOperationsFunction.file_operations_name");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.file_operations_kind kind = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_kind(static_cast<::dra::file_operations_kind>(val));
        break;
      }
      // uint64 cmd = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_cmd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.runTimeData run_time_date = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_run_time_date(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<uint32, uint32> write_address = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&write_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileOperationsFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.FileOperationsFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.FileOperationsFunction.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_operations_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_operations_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_operations_name().data(), static_cast<int>(this->file_operations_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.FileOperationsFunction.file_operations_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.file_operations_kind kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::dra::file_operations_kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cmd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.runTimeData run_time_date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_time_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> write_address = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          FileOperationsFunction_WriteAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              FileOperationsFunction_WriteAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&write_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.FileOperationsFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.FileOperationsFunction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileOperationsFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.FileOperationsFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.FileOperationsFunction.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string file_operations_name = 2;
  if (this->file_operations_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_operations_name().data(), static_cast<int>(this->file_operations_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.FileOperationsFunction.file_operations_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_operations_name(), output);
  }

  // .dra.file_operations_kind kind = 3;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->kind(), output);
  }

  // uint64 cmd = 4;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->cmd(), output);
  }

  // .dra.runTimeData run_time_date = 5;
  if (this->has_run_time_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::run_time_date(this), output);
  }

  // map<uint32, uint32> write_address = 11;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FileOperationsFunction_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        FileOperationsFunction_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.FileOperationsFunction)
}

::google::protobuf::uint8* FileOperationsFunction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.FileOperationsFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.FileOperationsFunction.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string file_operations_name = 2;
  if (this->file_operations_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_operations_name().data(), static_cast<int>(this->file_operations_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.FileOperationsFunction.file_operations_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_operations_name(), target);
  }

  // .dra.file_operations_kind kind = 3;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->kind(), target);
  }

  // uint64 cmd = 4;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->cmd(), target);
  }

  // .dra.runTimeData run_time_date = 5;
  if (this->has_run_time_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::run_time_date(this), target);
  }

  // map<uint32, uint32> write_address = 11;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FileOperationsFunction_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        FileOperationsFunction_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.FileOperationsFunction)
  return target;
}

size_t FileOperationsFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.FileOperationsFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, uint32> write_address = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->write_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
      it = this->write_address().begin();
      it != this->write_address().end(); ++it) {
    FileOperationsFunction_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string file_operations_name = 2;
  if (this->file_operations_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_operations_name());
  }

  // .dra.runTimeData run_time_date = 5;
  if (this->has_run_time_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_time_date_);
  }

  // uint64 cmd = 4;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cmd());
  }

  // .dra.file_operations_kind kind = 3;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileOperationsFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.FileOperationsFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const FileOperationsFunction* source =
      ::google::protobuf::DynamicCastToGenerated<FileOperationsFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.FileOperationsFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.FileOperationsFunction)
    MergeFrom(*source);
  }
}

void FileOperationsFunction::MergeFrom(const FileOperationsFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.FileOperationsFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  write_address_.MergeFrom(from.write_address_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.file_operations_name().size() > 0) {

    file_operations_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_operations_name_);
  }
  if (from.has_run_time_date()) {
    mutable_run_time_date()->::dra::runTimeData::MergeFrom(from.run_time_date());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void FileOperationsFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.FileOperationsFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileOperationsFunction::CopyFrom(const FileOperationsFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.FileOperationsFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileOperationsFunction::IsInitialized() const {
  return true;
}

void FileOperationsFunction::Swap(FileOperationsFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileOperationsFunction::InternalSwap(FileOperationsFunction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  write_address_.Swap(&other->write_address_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_operations_name_.Swap(&other->file_operations_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(run_time_date_, other->run_time_date_);
  swap(cmd_, other->cmd_);
  swap(kind_, other->kind_);
}

::google::protobuf::Metadata FileOperationsFunction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

FileOperations_FileOperationsFunctionEntry_DoNotUse::FileOperations_FileOperationsFunctionEntry_DoNotUse() {}
FileOperations_FileOperationsFunctionEntry_DoNotUse::FileOperations_FileOperationsFunctionEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void FileOperations_FileOperationsFunctionEntry_DoNotUse::MergeFrom(const FileOperations_FileOperationsFunctionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata FileOperations_FileOperationsFunctionEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[9];
}
void FileOperations_FileOperationsFunctionEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void FileOperations::InitAsDefaultInstance() {
}
class FileOperations::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileOperations::kNameFieldNumber;
const int FileOperations::kFileOperationsFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileOperations::FileOperations()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.FileOperations)
}
FileOperations::FileOperations(const FileOperations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_operations_function_.MergeFrom(from.file_operations_function_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:dra.FileOperations)
}

void FileOperations::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileOperations_DependencyRPC_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileOperations::~FileOperations() {
  // @@protoc_insertion_point(destructor:dra.FileOperations)
  SharedDtor();
}

void FileOperations::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileOperations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileOperations& FileOperations::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileOperations_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void FileOperations::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.FileOperations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_operations_function_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileOperations::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "dra.FileOperations.name");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<int64, .dra.FileOperationsFunction> file_operations_function = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&file_operations_function_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileOperations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.FileOperations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.FileOperations.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, .dra.FileOperationsFunction> file_operations_function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          FileOperations_FileOperationsFunctionEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              FileOperations_FileOperationsFunctionEntry_DoNotUse,
              ::google::protobuf::int64, ::dra::FileOperationsFunction,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction > > parser(&file_operations_function_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.FileOperations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.FileOperations)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileOperations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.FileOperations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.FileOperations.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<int64, .dra.FileOperationsFunction> file_operations_function = 3;
  if (!this->file_operations_function().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->file_operations_function().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_operations_function().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FileOperations_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it) {
        FileOperations_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.FileOperations)
}

::google::protobuf::uint8* FileOperations::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.FileOperations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.FileOperations.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<int64, .dra.FileOperationsFunction> file_operations_function = 3;
  if (!this->file_operations_function().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->file_operations_function().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_operations_function().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FileOperations_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it) {
        FileOperations_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.FileOperations)
  return target;
}

size_t FileOperations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.FileOperations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .dra.FileOperationsFunction> file_operations_function = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_operations_function_size());
  for (::google::protobuf::Map< ::google::protobuf::int64, ::dra::FileOperationsFunction >::const_iterator
      it = this->file_operations_function().begin();
      it != this->file_operations_function().end(); ++it) {
    FileOperations_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileOperations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.FileOperations)
  GOOGLE_DCHECK_NE(&from, this);
  const FileOperations* source =
      ::google::protobuf::DynamicCastToGenerated<FileOperations>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.FileOperations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.FileOperations)
    MergeFrom(*source);
  }
}

void FileOperations::MergeFrom(const FileOperations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.FileOperations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_operations_function_.MergeFrom(from.file_operations_function_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void FileOperations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.FileOperations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileOperations::CopyFrom(const FileOperations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.FileOperations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileOperations::IsInitialized() const {
  return true;
}

void FileOperations::Swap(FileOperations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileOperations::InternalSwap(FileOperations* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_operations_function_.Swap(&other->file_operations_function_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata FileOperations::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

WriteAddress_UncoveredAddressEntry_DoNotUse::WriteAddress_UncoveredAddressEntry_DoNotUse() {}
WriteAddress_UncoveredAddressEntry_DoNotUse::WriteAddress_UncoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void WriteAddress_UncoveredAddressEntry_DoNotUse::MergeFrom(const WriteAddress_UncoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WriteAddress_UncoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[11];
}
void WriteAddress_UncoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

WriteAddress_FileOperationsFunctionEntry_DoNotUse::WriteAddress_FileOperationsFunctionEntry_DoNotUse() {}
WriteAddress_FileOperationsFunctionEntry_DoNotUse::WriteAddress_FileOperationsFunctionEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void WriteAddress_FileOperationsFunctionEntry_DoNotUse::MergeFrom(const WriteAddress_FileOperationsFunctionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WriteAddress_FileOperationsFunctionEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[12];
}
void WriteAddress_FileOperationsFunctionEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

WriteAddress_InputEntry_DoNotUse::WriteAddress_InputEntry_DoNotUse() {}
WriteAddress_InputEntry_DoNotUse::WriteAddress_InputEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void WriteAddress_InputEntry_DoNotUse::MergeFrom(const WriteAddress_InputEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WriteAddress_InputEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[13];
}
void WriteAddress_InputEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void WriteAddress::InitAsDefaultInstance() {
  ::dra::_WriteAddress_default_instance_._instance.get_mutable()->run_time_date_ = const_cast< ::dra::runTimeData*>(
      ::dra::runTimeData::internal_default_instance());
}
class WriteAddress::HasBitSetters {
 public:
  static const ::dra::runTimeData& run_time_date(const WriteAddress* msg);
};

const ::dra::runTimeData&
WriteAddress::HasBitSetters::run_time_date(const WriteAddress* msg) {
  return *msg->run_time_date_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteAddress::kWriteAddressFieldNumber;
const int WriteAddress::kConditionAddressFieldNumber;
const int WriteAddress::kKindFieldNumber;
const int WriteAddress::kUncoveredAddressFieldNumber;
const int WriteAddress::kFileOperationsFunctionFieldNumber;
const int WriteAddress::kInputFieldNumber;
const int WriteAddress::kRunTimeDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteAddress::WriteAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.WriteAddress)
}
WriteAddress::WriteAddress(const WriteAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  file_operations_function_.MergeFrom(from.file_operations_function_);
  input_.MergeFrom(from.input_);
  if (from.has_run_time_date()) {
    run_time_date_ = new ::dra::runTimeData(*from.run_time_date_);
  } else {
    run_time_date_ = nullptr;
  }
  ::memcpy(&write_address_, &from.write_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&write_address_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:dra.WriteAddress)
}

void WriteAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteAddress_DependencyRPC_2eproto.base);
  ::memset(&run_time_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&run_time_date_)) + sizeof(kind_));
}

WriteAddress::~WriteAddress() {
  // @@protoc_insertion_point(destructor:dra.WriteAddress)
  SharedDtor();
}

void WriteAddress::SharedDtor() {
  if (this != internal_default_instance()) delete run_time_date_;
}

void WriteAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteAddress& WriteAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteAddress_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void WriteAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.WriteAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uncovered_address_.Clear();
  file_operations_function_.Clear();
  input_.Clear();
  if (GetArenaNoVirtual() == nullptr && run_time_date_ != nullptr) {
    delete run_time_date_;
  }
  run_time_date_ = nullptr;
  ::memset(&write_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&write_address_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteAddress::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 write_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_write_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 condition_address = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        set_condition_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 kind = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_kind(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.runTimeData run_time_date = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_run_time_date(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<uint32, .dra.writeAddressAttributes> uncovered_address = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&uncovered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 442 && (ptr += 2));
        break;
      }
      // map<string, uint32> file_operations_function = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&file_operations_function_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 450 && (ptr += 2));
        break;
      }
      // map<string, uint32> input = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&input_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 458 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.WriteAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 write_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &write_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 condition_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &condition_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.runTimeData run_time_date = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_time_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.writeAddressAttributes> uncovered_address = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          WriteAddress_UncoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WriteAddress_UncoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::writeAddressAttributes,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes > > parser(&uncovered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> file_operations_function = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          WriteAddress_FileOperationsFunctionEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WriteAddress_FileOperationsFunctionEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&file_operations_function_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.WriteAddress.FileOperationsFunctionEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> input = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          WriteAddress_InputEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WriteAddress_InputEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&input_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.WriteAddress.InputEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.WriteAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.WriteAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.WriteAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 write_address = 2;
  if (this->write_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->write_address(), output);
  }

  // uint32 condition_address = 3;
  if (this->condition_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->condition_address(), output);
  }

  // uint32 kind = 4;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->kind(), output);
  }

  // .dra.runTimeData run_time_date = 11;
  if (this->has_run_time_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::run_time_date(this), output);
  }

  // map<uint32, .dra.writeAddressAttributes> uncovered_address = 23;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        WriteAddress_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        WriteAddress_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    }
  }

  // map<string, uint32> file_operations_function = 24;
  if (!this->file_operations_function().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.WriteAddress.FileOperationsFunctionEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->file_operations_function().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_operations_function().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        WriteAddress_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(24, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it) {
        WriteAddress_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(24, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, uint32> input = 25;
  if (!this->input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.WriteAddress.InputEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        WriteAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(25, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it) {
        WriteAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(25, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.WriteAddress)
}

::google::protobuf::uint8* WriteAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.WriteAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 write_address = 2;
  if (this->write_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->write_address(), target);
  }

  // uint32 condition_address = 3;
  if (this->condition_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->condition_address(), target);
  }

  // uint32 kind = 4;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->kind(), target);
  }

  // .dra.runTimeData run_time_date = 11;
  if (this->has_run_time_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::run_time_date(this), target);
  }

  // map<uint32, .dra.writeAddressAttributes> uncovered_address = 23;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        WriteAddress_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        WriteAddress_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    }
  }

  // map<string, uint32> file_operations_function = 24;
  if (!this->file_operations_function().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.WriteAddress.FileOperationsFunctionEntry.key");
      }
    };

    if (false &&
        this->file_operations_function().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_operations_function().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        WriteAddress_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(24, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->file_operations_function().begin();
          it != this->file_operations_function().end(); ++it) {
        WriteAddress_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(24, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, uint32> input = 25;
  if (!this->input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.WriteAddress.InputEntry.key");
      }
    };

    if (false &&
        this->input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        WriteAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(25, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it) {
        WriteAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(25, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.WriteAddress)
  return target;
}

size_t WriteAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.WriteAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .dra.writeAddressAttributes> uncovered_address = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->uncovered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
      it = this->uncovered_address().begin();
      it != this->uncovered_address().end(); ++it) {
    WriteAddress_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<string, uint32> file_operations_function = 24;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->file_operations_function_size());
  for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
      it = this->file_operations_function().begin();
      it != this->file_operations_function().end(); ++it) {
    WriteAddress_FileOperationsFunctionEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<string, uint32> input = 25;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
      it = this->input().begin();
      it != this->input().end(); ++it) {
    WriteAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // .dra.runTimeData run_time_date = 11;
  if (this->has_run_time_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_time_date_);
  }

  // uint32 write_address = 2;
  if (this->write_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->write_address());
  }

  // uint32 condition_address = 3;
  if (this->condition_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->condition_address());
  }

  // uint32 kind = 4;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.WriteAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteAddress* source =
      ::google::protobuf::DynamicCastToGenerated<WriteAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.WriteAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.WriteAddress)
    MergeFrom(*source);
  }
}

void WriteAddress::MergeFrom(const WriteAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.WriteAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uncovered_address_.MergeFrom(from.uncovered_address_);
  file_operations_function_.MergeFrom(from.file_operations_function_);
  input_.MergeFrom(from.input_);
  if (from.has_run_time_date()) {
    mutable_run_time_date()->::dra::runTimeData::MergeFrom(from.run_time_date());
  }
  if (from.write_address() != 0) {
    set_write_address(from.write_address());
  }
  if (from.condition_address() != 0) {
    set_condition_address(from.condition_address());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void WriteAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.WriteAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteAddress::CopyFrom(const WriteAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.WriteAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteAddress::IsInitialized() const {
  return true;
}

void WriteAddress::Swap(WriteAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteAddress::InternalSwap(WriteAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uncovered_address_.Swap(&other->uncovered_address_);
  file_operations_function_.Swap(&other->file_operations_function_);
  input_.Swap(&other->input_);
  swap(run_time_date_, other->run_time_date_);
  swap(write_address_, other->write_address_);
  swap(condition_address_, other->condition_address_);
  swap(kind_, other->kind_);
}

::google::protobuf::Metadata WriteAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void writeAddressAttributes::InitAsDefaultInstance() {
}
class writeAddressAttributes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int writeAddressAttributes::kWriteAddressFieldNumber;
const int writeAddressAttributes::kRepeatFieldNumber;
const int writeAddressAttributes::kPrioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

writeAddressAttributes::writeAddressAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.writeAddressAttributes)
}
writeAddressAttributes::writeAddressAttributes(const writeAddressAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&write_address_, &from.write_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&repeat_) -
    reinterpret_cast<char*>(&write_address_)) + sizeof(repeat_));
  // @@protoc_insertion_point(copy_constructor:dra.writeAddressAttributes)
}

void writeAddressAttributes::SharedCtor() {
  ::memset(&write_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeat_) -
      reinterpret_cast<char*>(&write_address_)) + sizeof(repeat_));
}

writeAddressAttributes::~writeAddressAttributes() {
  // @@protoc_insertion_point(destructor:dra.writeAddressAttributes)
  SharedDtor();
}

void writeAddressAttributes::SharedDtor() {
}

void writeAddressAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const writeAddressAttributes& writeAddressAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_writeAddressAttributes_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void writeAddressAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.writeAddressAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&write_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeat_) -
      reinterpret_cast<char*>(&write_address_)) + sizeof(repeat_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* writeAddressAttributes::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 write_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_write_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 prio = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        set_prio(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 repeat = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        set_repeat(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool writeAddressAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.writeAddressAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 write_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &write_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 prio = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 repeat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &repeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.writeAddressAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.writeAddressAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void writeAddressAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.writeAddressAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 write_address = 2;
  if (this->write_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->write_address(), output);
  }

  // uint32 prio = 6;
  if (this->prio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->prio(), output);
  }

  // uint32 repeat = 7;
  if (this->repeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->repeat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.writeAddressAttributes)
}

::google::protobuf::uint8* writeAddressAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.writeAddressAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 write_address = 2;
  if (this->write_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->write_address(), target);
  }

  // uint32 prio = 6;
  if (this->prio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->prio(), target);
  }

  // uint32 repeat = 7;
  if (this->repeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->repeat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.writeAddressAttributes)
  return target;
}

size_t writeAddressAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.writeAddressAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 write_address = 2;
  if (this->write_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->write_address());
  }

  // uint32 prio = 6;
  if (this->prio() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prio());
  }

  // uint32 repeat = 7;
  if (this->repeat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->repeat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void writeAddressAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.writeAddressAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const writeAddressAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<writeAddressAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.writeAddressAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.writeAddressAttributes)
    MergeFrom(*source);
  }
}

void writeAddressAttributes::MergeFrom(const writeAddressAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.writeAddressAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.write_address() != 0) {
    set_write_address(from.write_address());
  }
  if (from.prio() != 0) {
    set_prio(from.prio());
  }
  if (from.repeat() != 0) {
    set_repeat(from.repeat());
  }
}

void writeAddressAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.writeAddressAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void writeAddressAttributes::CopyFrom(const writeAddressAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.writeAddressAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool writeAddressAttributes::IsInitialized() const {
  return true;
}

void writeAddressAttributes::Swap(writeAddressAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void writeAddressAttributes::InternalSwap(writeAddressAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(write_address_, other->write_address_);
  swap(prio_, other->prio_);
  swap(repeat_, other->repeat_);
}

::google::protobuf::Metadata writeAddressAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

UncoveredAddress_InputEntry_DoNotUse::UncoveredAddress_InputEntry_DoNotUse() {}
UncoveredAddress_InputEntry_DoNotUse::UncoveredAddress_InputEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void UncoveredAddress_InputEntry_DoNotUse::MergeFrom(const UncoveredAddress_InputEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UncoveredAddress_InputEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[16];
}
void UncoveredAddress_InputEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

UncoveredAddress_WriteAddressEntry_DoNotUse::UncoveredAddress_WriteAddressEntry_DoNotUse() {}
UncoveredAddress_WriteAddressEntry_DoNotUse::UncoveredAddress_WriteAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void UncoveredAddress_WriteAddressEntry_DoNotUse::MergeFrom(const UncoveredAddress_WriteAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UncoveredAddress_WriteAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[17];
}
void UncoveredAddress_WriteAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void UncoveredAddress::InitAsDefaultInstance() {
  ::dra::_UncoveredAddress_default_instance_._instance.get_mutable()->run_time_date_ = const_cast< ::dra::runTimeData*>(
      ::dra::runTimeData::internal_default_instance());
}
class UncoveredAddress::HasBitSetters {
 public:
  static const ::dra::runTimeData& run_time_date(const UncoveredAddress* msg);
};

const ::dra::runTimeData&
UncoveredAddress::HasBitSetters::run_time_date(const UncoveredAddress* msg) {
  return *msg->run_time_date_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UncoveredAddress::kConditionAddressFieldNumber;
const int UncoveredAddress::kUncoveredAddressFieldNumber;
const int UncoveredAddress::kRightBranchAddressFieldNumber;
const int UncoveredAddress::kNumberArriveBasicblocksFieldNumber;
const int UncoveredAddress::kKindFieldNumber;
const int UncoveredAddress::kNumberDominatorInstructionsFieldNumber;
const int UncoveredAddress::kInputFieldNumber;
const int UncoveredAddress::kWriteAddressFieldNumber;
const int UncoveredAddress::kCountFieldNumber;
const int UncoveredAddress::kRunTimeDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UncoveredAddress::UncoveredAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.UncoveredAddress)
}
UncoveredAddress::UncoveredAddress(const UncoveredAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      right_branch_address_(from.right_branch_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_.MergeFrom(from.input_);
  write_address_.MergeFrom(from.write_address_);
  if (from.has_run_time_date()) {
    run_time_date_ = new ::dra::runTimeData(*from.run_time_date_);
  } else {
    run_time_date_ = nullptr;
  }
  ::memcpy(&condition_address_, &from.condition_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&condition_address_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:dra.UncoveredAddress)
}

void UncoveredAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UncoveredAddress_DependencyRPC_2eproto.base);
  ::memset(&run_time_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&run_time_date_)) + sizeof(count_));
}

UncoveredAddress::~UncoveredAddress() {
  // @@protoc_insertion_point(destructor:dra.UncoveredAddress)
  SharedDtor();
}

void UncoveredAddress::SharedDtor() {
  if (this != internal_default_instance()) delete run_time_date_;
}

void UncoveredAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UncoveredAddress& UncoveredAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UncoveredAddress_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void UncoveredAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.UncoveredAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  right_branch_address_.Clear();
  input_.Clear();
  write_address_.Clear();
  if (GetArenaNoVirtual() == nullptr && run_time_date_ != nullptr) {
    delete run_time_date_;
  }
  run_time_date_ = nullptr;
  ::memset(&condition_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&condition_address_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UncoveredAddress::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 condition_address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_condition_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 uncovered_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_uncovered_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 right_branch_address = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::internal::PackedUInt32Parser(mutable_right_branch_address(), ptr, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          add_right_branch_address(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // uint32 number_arrive_basicblocks = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_number_arrive_basicblocks(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.UncoveredAddressKind kind = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_kind(static_cast<::dra::UncoveredAddressKind>(val));
        break;
      }
      // uint32 number_dominator_instructions = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        set_number_dominator_instructions(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.runTimeData run_time_date = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_run_time_date(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, uint32> input = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&input_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 434 && (ptr += 2));
        break;
      }
      // map<uint32, .dra.writeAddressAttributes> write_address = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&write_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 442 && (ptr += 2));
        break;
      }
      // uint32 count = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 192) goto handle_unusual;
        set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UncoveredAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.UncoveredAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 condition_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &condition_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uncovered_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uncovered_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 right_branch_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_right_branch_address())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_right_branch_address())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_arrive_basicblocks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_arrive_basicblocks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.UncoveredAddressKind kind = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::dra::UncoveredAddressKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_dominator_instructions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_dominator_instructions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.runTimeData run_time_date = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_time_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> input = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          UncoveredAddress_InputEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UncoveredAddress_InputEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&input_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.UncoveredAddress.InputEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.writeAddressAttributes> write_address = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          UncoveredAddress_WriteAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UncoveredAddress_WriteAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::writeAddressAttributes,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes > > parser(&write_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (192 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.UncoveredAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.UncoveredAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UncoveredAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.UncoveredAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 condition_address = 1;
  if (this->condition_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->condition_address(), output);
  }

  // uint32 uncovered_address = 2;
  if (this->uncovered_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uncovered_address(), output);
  }

  // repeated uint32 right_branch_address = 3;
  if (this->right_branch_address_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_right_branch_address_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->right_branch_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->right_branch_address(i), output);
  }

  // uint32 number_arrive_basicblocks = 4;
  if (this->number_arrive_basicblocks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->number_arrive_basicblocks(), output);
  }

  // .dra.UncoveredAddressKind kind = 5;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->kind(), output);
  }

  // uint32 number_dominator_instructions = 6;
  if (this->number_dominator_instructions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->number_dominator_instructions(), output);
  }

  // .dra.runTimeData run_time_date = 8;
  if (this->has_run_time_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::run_time_date(this), output);
  }

  // map<string, uint32> input = 22;
  if (!this->input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.UncoveredAddress.InputEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        UncoveredAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(22, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it) {
        UncoveredAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(22, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<uint32, .dra.writeAddressAttributes> write_address = 23;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        UncoveredAddress_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        UncoveredAddress_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    }
  }

  // uint32 count = 24;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.UncoveredAddress)
}

::google::protobuf::uint8* UncoveredAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.UncoveredAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 condition_address = 1;
  if (this->condition_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->condition_address(), target);
  }

  // uint32 uncovered_address = 2;
  if (this->uncovered_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uncovered_address(), target);
  }

  // repeated uint32 right_branch_address = 3;
  if (this->right_branch_address_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _right_branch_address_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->right_branch_address_, target);
  }

  // uint32 number_arrive_basicblocks = 4;
  if (this->number_arrive_basicblocks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->number_arrive_basicblocks(), target);
  }

  // .dra.UncoveredAddressKind kind = 5;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->kind(), target);
  }

  // uint32 number_dominator_instructions = 6;
  if (this->number_dominator_instructions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->number_dominator_instructions(), target);
  }

  // .dra.runTimeData run_time_date = 8;
  if (this->has_run_time_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::run_time_date(this), target);
  }

  // map<string, uint32> input = 22;
  if (!this->input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.UncoveredAddress.InputEntry.key");
      }
    };

    if (false &&
        this->input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        UncoveredAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(22, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it) {
        UncoveredAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(22, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<uint32, .dra.writeAddressAttributes> write_address = 23;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        UncoveredAddress_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        UncoveredAddress_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    }
  }

  // uint32 count = 24;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.UncoveredAddress)
  return target;
}

size_t UncoveredAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.UncoveredAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 right_branch_address = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->right_branch_address_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _right_branch_address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, uint32> input = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
      it = this->input().begin();
      it != this->input().end(); ++it) {
    UncoveredAddress_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .dra.writeAddressAttributes> write_address = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->write_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::writeAddressAttributes >::const_iterator
      it = this->write_address().begin();
      it != this->write_address().end(); ++it) {
    UncoveredAddress_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // .dra.runTimeData run_time_date = 8;
  if (this->has_run_time_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_time_date_);
  }

  // uint32 condition_address = 1;
  if (this->condition_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->condition_address());
  }

  // uint32 uncovered_address = 2;
  if (this->uncovered_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uncovered_address());
  }

  // uint32 number_arrive_basicblocks = 4;
  if (this->number_arrive_basicblocks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_arrive_basicblocks());
  }

  // .dra.UncoveredAddressKind kind = 5;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  // uint32 number_dominator_instructions = 6;
  if (this->number_dominator_instructions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_dominator_instructions());
  }

  // uint32 count = 24;
  if (this->count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UncoveredAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.UncoveredAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const UncoveredAddress* source =
      ::google::protobuf::DynamicCastToGenerated<UncoveredAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.UncoveredAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.UncoveredAddress)
    MergeFrom(*source);
  }
}

void UncoveredAddress::MergeFrom(const UncoveredAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.UncoveredAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  right_branch_address_.MergeFrom(from.right_branch_address_);
  input_.MergeFrom(from.input_);
  write_address_.MergeFrom(from.write_address_);
  if (from.has_run_time_date()) {
    mutable_run_time_date()->::dra::runTimeData::MergeFrom(from.run_time_date());
  }
  if (from.condition_address() != 0) {
    set_condition_address(from.condition_address());
  }
  if (from.uncovered_address() != 0) {
    set_uncovered_address(from.uncovered_address());
  }
  if (from.number_arrive_basicblocks() != 0) {
    set_number_arrive_basicblocks(from.number_arrive_basicblocks());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.number_dominator_instructions() != 0) {
    set_number_dominator_instructions(from.number_dominator_instructions());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void UncoveredAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.UncoveredAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UncoveredAddress::CopyFrom(const UncoveredAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.UncoveredAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UncoveredAddress::IsInitialized() const {
  return true;
}

void UncoveredAddress::Swap(UncoveredAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UncoveredAddress::InternalSwap(UncoveredAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  right_branch_address_.InternalSwap(&other->right_branch_address_);
  input_.Swap(&other->input_);
  write_address_.Swap(&other->write_address_);
  swap(run_time_date_, other->run_time_date_);
  swap(condition_address_, other->condition_address_);
  swap(uncovered_address_, other->uncovered_address_);
  swap(number_arrive_basicblocks_, other->number_arrive_basicblocks_);
  swap(kind_, other->kind_);
  swap(number_dominator_instructions_, other->number_dominator_instructions_);
  swap(count_, other->count_);
}

::google::protobuf::Metadata UncoveredAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Path::InitAsDefaultInstance() {
}
class Path::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path::Path()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Path)
}
Path::Path(const Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      address_(from.address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dra.Path)
}

void Path::SharedCtor() {
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:dra.Path)
  SharedDtor();
}

void Path::SharedDtor() {
}

void Path::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Path& Path::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Path_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Path::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::internal::PackedUInt32Parser(mutable_address(), ptr, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          add_address(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Path)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_address())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Path)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address = 1;
  if (this->address_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_address_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->address(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Path)
}

::google::protobuf::uint8* Path::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address = 1;
  if (this->address_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _address_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->address_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Path)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::google::protobuf::DynamicCastToGenerated<Path>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::Swap(Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path::InternalSwap(Path* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.InternalSwap(&other->address_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnstableInput::InitAsDefaultInstance() {
  ::dra::_UnstableInput_default_instance_._instance.get_mutable()->new_path_ = const_cast< ::dra::Path*>(
      ::dra::Path::internal_default_instance());
  ::dra::_UnstableInput_default_instance_._instance.get_mutable()->unstable_path_ = const_cast< ::dra::Path*>(
      ::dra::Path::internal_default_instance());
}
class UnstableInput::HasBitSetters {
 public:
  static const ::dra::Path& new_path(const UnstableInput* msg);
  static const ::dra::Path& unstable_path(const UnstableInput* msg);
};

const ::dra::Path&
UnstableInput::HasBitSetters::new_path(const UnstableInput* msg) {
  return *msg->new_path_;
}
const ::dra::Path&
UnstableInput::HasBitSetters::unstable_path(const UnstableInput* msg) {
  return *msg->unstable_path_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnstableInput::kNewPathFieldNumber;
const int UnstableInput::kUnstablePathFieldNumber;
const int UnstableInput::kIdxFieldNumber;
const int UnstableInput::kSigFieldNumber;
const int UnstableInput::kProgramFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnstableInput::UnstableInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.UnstableInput)
}
UnstableInput::UnstableInput(const UnstableInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sig().size() > 0) {
    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.program().size() > 0) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.has_new_path()) {
    new_path_ = new ::dra::Path(*from.new_path_);
  } else {
    new_path_ = nullptr;
  }
  if (from.has_unstable_path()) {
    unstable_path_ = new ::dra::Path(*from.unstable_path_);
  } else {
    unstable_path_ = nullptr;
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:dra.UnstableInput)
}

void UnstableInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UnstableInput_DependencyRPC_2eproto.base);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&new_path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&new_path_)) + sizeof(idx_));
}

UnstableInput::~UnstableInput() {
  // @@protoc_insertion_point(destructor:dra.UnstableInput)
  SharedDtor();
}

void UnstableInput::SharedDtor() {
  sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete new_path_;
  if (this != internal_default_instance()) delete unstable_path_;
}

void UnstableInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnstableInput& UnstableInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnstableInput_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void UnstableInput::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.UnstableInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && new_path_ != nullptr) {
    delete new_path_;
  }
  new_path_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && unstable_path_ != nullptr) {
    delete unstable_path_;
  }
  unstable_path_ = nullptr;
  idx_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnstableInput::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .dra.Path new_path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_new_path(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.Path unstable_path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_unstable_path(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 idx = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        set_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string sig = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_sig(), ptr, ctx, "dra.UnstableInput.sig");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes program = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_program(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnstableInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.UnstableInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dra.Path new_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.Path unstable_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unstable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 idx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sig = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sig().data(), static_cast<int>(this->sig().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.UnstableInput.sig"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes program = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.UnstableInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.UnstableInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnstableInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.UnstableInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Path new_path = 1;
  if (this->has_new_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::new_path(this), output);
  }

  // .dra.Path unstable_path = 2;
  if (this->has_unstable_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::unstable_path(this), output);
  }

  // int32 idx = 3;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->idx(), output);
  }

  // string sig = 11;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.UnstableInput.sig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sig(), output);
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->program(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.UnstableInput)
}

::google::protobuf::uint8* UnstableInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.UnstableInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Path new_path = 1;
  if (this->has_new_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::new_path(this), target);
  }

  // .dra.Path unstable_path = 2;
  if (this->has_unstable_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::unstable_path(this), target);
  }

  // int32 idx = 3;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->idx(), target);
  }

  // string sig = 11;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.UnstableInput.sig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sig(), target);
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->program(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.UnstableInput)
  return target;
}

size_t UnstableInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.UnstableInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sig = 11;
  if (this->sig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sig());
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->program());
  }

  // .dra.Path new_path = 1;
  if (this->has_new_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_path_);
  }

  // .dra.Path unstable_path = 2;
  if (this->has_unstable_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unstable_path_);
  }

  // int32 idx = 3;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnstableInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.UnstableInput)
  GOOGLE_DCHECK_NE(&from, this);
  const UnstableInput* source =
      ::google::protobuf::DynamicCastToGenerated<UnstableInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.UnstableInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.UnstableInput)
    MergeFrom(*source);
  }
}

void UnstableInput::MergeFrom(const UnstableInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.UnstableInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sig().size() > 0) {

    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  if (from.program().size() > 0) {

    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.has_new_path()) {
    mutable_new_path()->::dra::Path::MergeFrom(from.new_path());
  }
  if (from.has_unstable_path()) {
    mutable_unstable_path()->::dra::Path::MergeFrom(from.unstable_path());
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
}

void UnstableInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.UnstableInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnstableInput::CopyFrom(const UnstableInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.UnstableInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnstableInput::IsInitialized() const {
  return true;
}

void UnstableInput::Swap(UnstableInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnstableInput::InternalSwap(UnstableInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sig_.Swap(&other->sig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  program_.Swap(&other->program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(new_path_, other->new_path_);
  swap(unstable_path_, other->unstable_path_);
  swap(idx_, other->idx_);
}

::google::protobuf::Metadata UnstableInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Input_CallEntry_DoNotUse::Input_CallEntry_DoNotUse() {}
Input_CallEntry_DoNotUse::Input_CallEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Input_CallEntry_DoNotUse::MergeFrom(const Input_CallEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Input_CallEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[21];
}
void Input_CallEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Input_UncoveredAddressEntry_DoNotUse::Input_UncoveredAddressEntry_DoNotUse() {}
Input_UncoveredAddressEntry_DoNotUse::Input_UncoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Input_UncoveredAddressEntry_DoNotUse::MergeFrom(const Input_UncoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Input_UncoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[22];
}
void Input_UncoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Input_WriteAddressEntry_DoNotUse::Input_WriteAddressEntry_DoNotUse() {}
Input_WriteAddressEntry_DoNotUse::Input_WriteAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Input_WriteAddressEntry_DoNotUse::MergeFrom(const Input_WriteAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Input_WriteAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[23];
}
void Input_WriteAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Input::InitAsDefaultInstance() {
}
class Input::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Input::kSigFieldNumber;
const int Input::kProgramFieldNumber;
const int Input::kCallFieldNumber;
const int Input::kStableFieldNumber;
const int Input::kTotalFieldNumber;
const int Input::kStatFieldNumber;
const int Input::kUncoveredAddressFieldNumber;
const int Input::kWriteAddressFieldNumber;
const int Input::kProgramBeforeMiniFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Input::Input()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Input)
}
Input::Input(const Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  call_.MergeFrom(from.call_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  write_address_.MergeFrom(from.write_address_);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sig().size() > 0) {
    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.program().size() > 0) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  program_before_mini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.program_before_mini().size() > 0) {
    program_before_mini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_before_mini_);
  }
  ::memcpy(&stat_, &from.stat_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&stat_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:dra.Input)
}

void Input::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Input_DependencyRPC_2eproto.base);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_before_mini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&stat_)) + sizeof(total_));
}

Input::~Input() {
  // @@protoc_insertion_point(destructor:dra.Input)
  SharedDtor();
}

void Input::SharedDtor() {
  sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_before_mini_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Input& Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Input_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Input::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  call_.Clear();
  uncovered_address_.Clear();
  write_address_.Clear();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_before_mini_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&stat_)) + sizeof(total_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Input::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sig = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_sig(), ptr, ctx, "dra.Input.sig");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes program = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_program(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<uint32, .dra.Call> call = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&call_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 106 && (ptr += 1));
        break;
      }
      // uint32 stable = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        set_stable(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 total = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        set_total(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.FuzzingStat stat = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_stat(static_cast<::dra::FuzzingStat>(val));
        break;
      }
      // map<uint32, uint32> uncovered_address = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&uncovered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 434 && (ptr += 2));
        break;
      }
      // map<uint32, uint32> write_address = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&write_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 458 && (ptr += 2));
        break;
      }
      // bytes program_before_mini = 30;
      case 30: {
        if (static_cast<::google::protobuf::uint8>(tag) != 242) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_program_before_mini(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sig = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sig().data(), static_cast<int>(this->sig().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Input.sig"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes program = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.Call> call = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          Input_CallEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Input_CallEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::Call,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call > > parser(&call_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 stable = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.FuzzingStat stat = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stat(static_cast< ::dra::FuzzingStat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> uncovered_address = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          Input_UncoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Input_UncoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&uncovered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> write_address = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          Input_WriteAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Input_WriteAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&write_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes program_before_mini = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (242 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program_before_mini()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Input)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sig = 11;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Input.sig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sig(), output);
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->program(), output);
  }

  // map<uint32, .dra.Call> call = 13;
  if (!this->call().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->call().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->call().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_iterator
          it = this->call().begin();
          it != this->call().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Input_CallEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(13, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_iterator
          it = this->call().begin();
          it != this->call().end(); ++it) {
        Input_CallEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(13, entry, output);
      }
    }
  }

  // uint32 stable = 14;
  if (this->stable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->stable(), output);
  }

  // uint32 total = 15;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->total(), output);
  }

  // .dra.FuzzingStat stat = 21;
  if (this->stat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->stat(), output);
  }

  // map<uint32, uint32> uncovered_address = 22;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Input_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(22, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        Input_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(22, entry, output);
      }
    }
  }

  // map<uint32, uint32> write_address = 25;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Input_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(25, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        Input_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(25, entry, output);
      }
    }
  }

  // bytes program_before_mini = 30;
  if (this->program_before_mini().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->program_before_mini(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Input)
}

::google::protobuf::uint8* Input::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sig = 11;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Input.sig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sig(), target);
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->program(), target);
  }

  // map<uint32, .dra.Call> call = 13;
  if (!this->call().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->call().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->call().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_iterator
          it = this->call().begin();
          it != this->call().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Input_CallEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(13, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_iterator
          it = this->call().begin();
          it != this->call().end(); ++it) {
        Input_CallEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(13, entry, target);
      }
    }
  }

  // uint32 stable = 14;
  if (this->stable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->stable(), target);
  }

  // uint32 total = 15;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->total(), target);
  }

  // .dra.FuzzingStat stat = 21;
  if (this->stat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->stat(), target);
  }

  // map<uint32, uint32> uncovered_address = 22;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Input_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(22, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        Input_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(22, entry, target);
      }
    }
  }

  // map<uint32, uint32> write_address = 25;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Input_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(25, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        Input_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(25, entry, target);
      }
    }
  }

  // bytes program_before_mini = 30;
  if (this->program_before_mini().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->program_before_mini(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Input)
  return target;
}

size_t Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Input)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .dra.Call> call = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->call_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::Call >::const_iterator
      it = this->call().begin();
      it != this->call().end(); ++it) {
    Input_CallEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, uint32> uncovered_address = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->uncovered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
      it = this->uncovered_address().begin();
      it != this->uncovered_address().end(); ++it) {
    Input_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, uint32> write_address = 25;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->write_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
      it = this->write_address().begin();
      it != this->write_address().end(); ++it) {
    Input_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // string sig = 11;
  if (this->sig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sig());
  }

  // bytes program = 12;
  if (this->program().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->program());
  }

  // bytes program_before_mini = 30;
  if (this->program_before_mini().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->program_before_mini());
  }

  // .dra.FuzzingStat stat = 21;
  if (this->stat() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stat());
  }

  // uint32 stable = 14;
  if (this->stable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stable());
  }

  // uint32 total = 15;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const Input* source =
      ::google::protobuf::DynamicCastToGenerated<Input>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Input)
    MergeFrom(*source);
  }
}

void Input::MergeFrom(const Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  call_.MergeFrom(from.call_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  write_address_.MergeFrom(from.write_address_);
  if (from.sig().size() > 0) {

    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  if (from.program().size() > 0) {

    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.program_before_mini().size() > 0) {

    program_before_mini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_before_mini_);
  }
  if (from.stat() != 0) {
    set_stat(from.stat());
  }
  if (from.stable() != 0) {
    set_stable(from.stable());
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Input::CopyFrom(const Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Input::IsInitialized() const {
  return true;
}

void Input::Swap(Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Input::InternalSwap(Input* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  call_.Swap(&other->call_);
  uncovered_address_.Swap(&other->uncovered_address_);
  write_address_.Swap(&other->write_address_);
  sig_.Swap(&other->sig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  program_.Swap(&other->program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  program_before_mini_.Swap(&other->program_before_mini_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stat_, other->stat_);
  swap(stable_, other->stable_);
  swap(total_, other->total_);
}

::google::protobuf::Metadata Input::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Dependency::InitAsDefaultInstance() {
  ::dra::_Dependency_default_instance_._instance.get_mutable()->input_ = const_cast< ::dra::Input*>(
      ::dra::Input::internal_default_instance());
  ::dra::_Dependency_default_instance_._instance.get_mutable()->uncovered_address_ = const_cast< ::dra::UncoveredAddress*>(
      ::dra::UncoveredAddress::internal_default_instance());
}
class Dependency::HasBitSetters {
 public:
  static const ::dra::Input& input(const Dependency* msg);
  static const ::dra::UncoveredAddress& uncovered_address(const Dependency* msg);
};

const ::dra::Input&
Dependency::HasBitSetters::input(const Dependency* msg) {
  return *msg->input_;
}
const ::dra::UncoveredAddress&
Dependency::HasBitSetters::uncovered_address(const Dependency* msg) {
  return *msg->uncovered_address_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dependency::kInputFieldNumber;
const int Dependency::kUncoveredAddressFieldNumber;
const int Dependency::kWriteAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dependency::Dependency()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Dependency)
}
Dependency::Dependency(const Dependency& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      write_address_(from.write_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::dra::Input(*from.input_);
  } else {
    input_ = nullptr;
  }
  if (from.has_uncovered_address()) {
    uncovered_address_ = new ::dra::UncoveredAddress(*from.uncovered_address_);
  } else {
    uncovered_address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dra.Dependency)
}

void Dependency::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Dependency_DependencyRPC_2eproto.base);
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uncovered_address_) -
      reinterpret_cast<char*>(&input_)) + sizeof(uncovered_address_));
}

Dependency::~Dependency() {
  // @@protoc_insertion_point(destructor:dra.Dependency)
  SharedDtor();
}

void Dependency::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete uncovered_address_;
}

void Dependency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Dependency& Dependency::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Dependency_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Dependency::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Dependency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  write_address_.Clear();
  if (GetArenaNoVirtual() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uncovered_address_ != nullptr) {
    delete uncovered_address_;
  }
  uncovered_address_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Dependency::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .dra.Input input = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_input(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.UncoveredAddress uncovered_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_uncovered_address(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .dra.WriteAddress write_address = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_write_address(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Dependency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Dependency)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dra.Input input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.UncoveredAddress uncovered_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uncovered_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dra.WriteAddress write_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_write_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Dependency)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Dependency)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Dependency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Dependency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Input input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::input(this), output);
  }

  // .dra.UncoveredAddress uncovered_address = 2;
  if (this->has_uncovered_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::uncovered_address(this), output);
  }

  // repeated .dra.WriteAddress write_address = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->write_address_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->write_address(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Dependency)
}

::google::protobuf::uint8* Dependency::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Dependency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Input input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::input(this), target);
  }

  // .dra.UncoveredAddress uncovered_address = 2;
  if (this->has_uncovered_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::uncovered_address(this), target);
  }

  // repeated .dra.WriteAddress write_address = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->write_address_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->write_address(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Dependency)
  return target;
}

size_t Dependency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Dependency)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dra.WriteAddress write_address = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->write_address_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->write_address(static_cast<int>(i)));
    }
  }

  // .dra.Input input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .dra.UncoveredAddress uncovered_address = 2;
  if (this->has_uncovered_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uncovered_address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dependency::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Dependency)
  GOOGLE_DCHECK_NE(&from, this);
  const Dependency* source =
      ::google::protobuf::DynamicCastToGenerated<Dependency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Dependency)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Dependency)
    MergeFrom(*source);
  }
}

void Dependency::MergeFrom(const Dependency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Dependency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  write_address_.MergeFrom(from.write_address_);
  if (from.has_input()) {
    mutable_input()->::dra::Input::MergeFrom(from.input());
  }
  if (from.has_uncovered_address()) {
    mutable_uncovered_address()->::dra::UncoveredAddress::MergeFrom(from.uncovered_address());
  }
}

void Dependency::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Dependency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dependency::CopyFrom(const Dependency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Dependency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dependency::IsInitialized() const {
  return true;
}

void Dependency::Swap(Dependency* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dependency::InternalSwap(Dependency* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&write_address_)->InternalSwap(CastToBase(&other->write_address_));
  swap(input_, other->input_);
  swap(uncovered_address_, other->uncovered_address_);
}

::google::protobuf::Metadata Dependency::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Corpus_InputEntry_DoNotUse::Corpus_InputEntry_DoNotUse() {}
Corpus_InputEntry_DoNotUse::Corpus_InputEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Corpus_InputEntry_DoNotUse::MergeFrom(const Corpus_InputEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Corpus_InputEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[26];
}
void Corpus_InputEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Corpus_UncoveredAddressEntry_DoNotUse::Corpus_UncoveredAddressEntry_DoNotUse() {}
Corpus_UncoveredAddressEntry_DoNotUse::Corpus_UncoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Corpus_UncoveredAddressEntry_DoNotUse::MergeFrom(const Corpus_UncoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Corpus_UncoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[27];
}
void Corpus_UncoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Corpus_CoveredAddressEntry_DoNotUse::Corpus_CoveredAddressEntry_DoNotUse() {}
Corpus_CoveredAddressEntry_DoNotUse::Corpus_CoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Corpus_CoveredAddressEntry_DoNotUse::MergeFrom(const Corpus_CoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Corpus_CoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[28];
}
void Corpus_CoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Corpus_WriteAddressEntry_DoNotUse::Corpus_WriteAddressEntry_DoNotUse() {}
Corpus_WriteAddressEntry_DoNotUse::Corpus_WriteAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Corpus_WriteAddressEntry_DoNotUse::MergeFrom(const Corpus_WriteAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Corpus_WriteAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[29];
}
void Corpus_WriteAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Corpus_FileOperationsEntry_DoNotUse::Corpus_FileOperationsEntry_DoNotUse() {}
Corpus_FileOperationsEntry_DoNotUse::Corpus_FileOperationsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Corpus_FileOperationsEntry_DoNotUse::MergeFrom(const Corpus_FileOperationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Corpus_FileOperationsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[30];
}
void Corpus_FileOperationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Corpus_NewInputEntry_DoNotUse::Corpus_NewInputEntry_DoNotUse() {}
Corpus_NewInputEntry_DoNotUse::Corpus_NewInputEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Corpus_NewInputEntry_DoNotUse::MergeFrom(const Corpus_NewInputEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Corpus_NewInputEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[31];
}
void Corpus_NewInputEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Corpus::InitAsDefaultInstance() {
  ::dra::_Corpus_default_instance_._instance.get_mutable()->tasks_ = const_cast< ::dra::Tasks*>(
      ::dra::Tasks::internal_default_instance());
  ::dra::_Corpus_default_instance_._instance.get_mutable()->high_task_ = const_cast< ::dra::Tasks*>(
      ::dra::Tasks::internal_default_instance());
  ::dra::_Corpus_default_instance_._instance.get_mutable()->boot_task_ = const_cast< ::dra::Tasks*>(
      ::dra::Tasks::internal_default_instance());
}
class Corpus::HasBitSetters {
 public:
  static const ::dra::Tasks& tasks(const Corpus* msg);
  static const ::dra::Tasks& high_task(const Corpus* msg);
  static const ::dra::Tasks& boot_task(const Corpus* msg);
};

const ::dra::Tasks&
Corpus::HasBitSetters::tasks(const Corpus* msg) {
  return *msg->tasks_;
}
const ::dra::Tasks&
Corpus::HasBitSetters::high_task(const Corpus* msg) {
  return *msg->high_task_;
}
const ::dra::Tasks&
Corpus::HasBitSetters::boot_task(const Corpus* msg) {
  return *msg->boot_task_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Corpus::kInputFieldNumber;
const int Corpus::kUncoveredAddressFieldNumber;
const int Corpus::kCoveredAddressFieldNumber;
const int Corpus::kWriteAddressFieldNumber;
const int Corpus::kFileOperationsFieldNumber;
const int Corpus::kTasksFieldNumber;
const int Corpus::kHighTaskFieldNumber;
const int Corpus::kBootTaskFieldNumber;
const int Corpus::kNewInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Corpus::Corpus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Corpus)
}
Corpus::Corpus(const Corpus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_.MergeFrom(from.input_);
  covered_address_.MergeFrom(from.covered_address_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  write_address_.MergeFrom(from.write_address_);
  file_operations_.MergeFrom(from.file_operations_);
  new_input_.MergeFrom(from.new_input_);
  if (from.has_tasks()) {
    tasks_ = new ::dra::Tasks(*from.tasks_);
  } else {
    tasks_ = nullptr;
  }
  if (from.has_high_task()) {
    high_task_ = new ::dra::Tasks(*from.high_task_);
  } else {
    high_task_ = nullptr;
  }
  if (from.has_boot_task()) {
    boot_task_ = new ::dra::Tasks(*from.boot_task_);
  } else {
    boot_task_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dra.Corpus)
}

void Corpus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Corpus_DependencyRPC_2eproto.base);
  ::memset(&tasks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&boot_task_) -
      reinterpret_cast<char*>(&tasks_)) + sizeof(boot_task_));
}

Corpus::~Corpus() {
  // @@protoc_insertion_point(destructor:dra.Corpus)
  SharedDtor();
}

void Corpus::SharedDtor() {
  if (this != internal_default_instance()) delete tasks_;
  if (this != internal_default_instance()) delete high_task_;
  if (this != internal_default_instance()) delete boot_task_;
}

void Corpus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Corpus& Corpus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Corpus_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Corpus::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Corpus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  covered_address_.Clear();
  uncovered_address_.Clear();
  write_address_.Clear();
  file_operations_.Clear();
  new_input_.Clear();
  if (GetArenaNoVirtual() == nullptr && tasks_ != nullptr) {
    delete tasks_;
  }
  tasks_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && high_task_ != nullptr) {
    delete high_task_;
  }
  high_task_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && boot_task_ != nullptr) {
    delete boot_task_;
  }
  boot_task_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Corpus::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, .dra.Input> input = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&input_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // map<uint32, .dra.UncoveredAddress> covered_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&covered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&uncovered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // map<uint32, .dra.WriteAddress> write_address = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&write_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // map<string, .dra.FileOperations> file_operations = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&file_operations_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // .dra.Tasks tasks = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_tasks(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.Tasks high_task = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_high_task(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.Tasks boot_task = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_boot_task(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, .dra.Input> new_input = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&new_input_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Corpus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Corpus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dra.Input> input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          Corpus_InputEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Corpus_InputEntry_DoNotUse,
              ::std::string, ::dra::Input,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dra::Input > > parser(&input_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Corpus.InputEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.UncoveredAddress> covered_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          Corpus_CoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Corpus_CoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::UncoveredAddress,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress > > parser(&covered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          Corpus_UncoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Corpus_UncoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::UncoveredAddress,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress > > parser(&uncovered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.WriteAddress> write_address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          Corpus_WriteAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Corpus_WriteAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::WriteAddress,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress > > parser(&write_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .dra.FileOperations> file_operations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          Corpus_FileOperationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Corpus_FileOperationsEntry_DoNotUse,
              ::std::string, ::dra::FileOperations,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dra::FileOperations > > parser(&file_operations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Corpus.FileOperationsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.Tasks tasks = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.Tasks high_task = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.Tasks boot_task = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boot_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .dra.Input> new_input = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          Corpus_NewInputEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Corpus_NewInputEntry_DoNotUse,
              ::std::string, ::dra::Input,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dra::Input > > parser(&new_input_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Corpus.NewInputEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Corpus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Corpus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Corpus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Corpus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dra.Input> input = 1;
  if (!this->input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Corpus.InputEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it) {
        Corpus_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<uint32, .dra.UncoveredAddress> covered_address = 2;
  if (!this->covered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->covered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->covered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it) {
        Corpus_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, entry, output);
      }
    }
  }

  // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        Corpus_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, entry, output);
      }
    }
  }

  // map<uint32, .dra.WriteAddress> write_address = 5;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        Corpus_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, entry, output);
      }
    }
  }

  // map<string, .dra.FileOperations> file_operations = 6;
  if (!this->file_operations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Corpus.FileOperationsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->file_operations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_operations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::FileOperations >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_iterator
          it = this->file_operations().begin();
          it != this->file_operations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_FileOperationsEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_iterator
          it = this->file_operations().begin();
          it != this->file_operations().end(); ++it) {
        Corpus_FileOperationsEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .dra.Tasks tasks = 7;
  if (this->has_tasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::tasks(this), output);
  }

  // .dra.Tasks high_task = 8;
  if (this->has_high_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::high_task(this), output);
  }

  // .dra.Tasks boot_task = 9;
  if (this->has_boot_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::boot_task(this), output);
  }

  // map<string, .dra.Input> new_input = 11;
  if (!this->new_input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Corpus.NewInputEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->new_input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->new_input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->new_input().begin();
          it != this->new_input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_NewInputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->new_input().begin();
          it != this->new_input().end(); ++it) {
        Corpus_NewInputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Corpus)
}

::google::protobuf::uint8* Corpus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Corpus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dra.Input> input = 1;
  if (!this->input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Corpus.InputEntry.key");
      }
    };

    if (false &&
        this->input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->input().begin();
          it != this->input().end(); ++it) {
        Corpus_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<uint32, .dra.UncoveredAddress> covered_address = 2;
  if (!this->covered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->covered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->covered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it) {
        Corpus_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, entry, target);
      }
    }
  }

  // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        Corpus_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, entry, target);
      }
    }
  }

  // map<uint32, .dra.WriteAddress> write_address = 5;
  if (!this->write_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->write_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(5, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_iterator
          it = this->write_address().begin();
          it != this->write_address().end(); ++it) {
        Corpus_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(5, entry, target);
      }
    }
  }

  // map<string, .dra.FileOperations> file_operations = 6;
  if (!this->file_operations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Corpus.FileOperationsEntry.key");
      }
    };

    if (false &&
        this->file_operations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_operations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::FileOperations >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_iterator
          it = this->file_operations().begin();
          it != this->file_operations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_FileOperationsEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_iterator
          it = this->file_operations().begin();
          it != this->file_operations().end(); ++it) {
        Corpus_FileOperationsEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .dra.Tasks tasks = 7;
  if (this->has_tasks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::tasks(this), target);
  }

  // .dra.Tasks high_task = 8;
  if (this->has_high_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::high_task(this), target);
  }

  // .dra.Tasks boot_task = 9;
  if (this->has_boot_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::boot_task(this), target);
  }

  // map<string, .dra.Input> new_input = 11;
  if (!this->new_input().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Corpus.NewInputEntry.key");
      }
    };

    if (false &&
        this->new_input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->new_input().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::Input >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->new_input().begin();
          it != this->new_input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Corpus_NewInputEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
          it = this->new_input().begin();
          it != this->new_input().end(); ++it) {
        Corpus_NewInputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Corpus)
  return target;
}

size_t Corpus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Corpus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .dra.Input> input = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
      it = this->input().begin();
      it != this->input().end(); ++it) {
    Corpus_InputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .dra.UncoveredAddress> covered_address = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->covered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
      it = this->covered_address().begin();
      it != this->covered_address().end(); ++it) {
    Corpus_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->uncovered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::UncoveredAddress >::const_iterator
      it = this->uncovered_address().begin();
      it != this->uncovered_address().end(); ++it) {
    Corpus_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .dra.WriteAddress> write_address = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->write_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::WriteAddress >::const_iterator
      it = this->write_address().begin();
      it != this->write_address().end(); ++it) {
    Corpus_WriteAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<string, .dra.FileOperations> file_operations = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_operations_size());
  for (::google::protobuf::Map< ::std::string, ::dra::FileOperations >::const_iterator
      it = this->file_operations().begin();
      it != this->file_operations().end(); ++it) {
    Corpus_FileOperationsEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<string, .dra.Input> new_input = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_input_size());
  for (::google::protobuf::Map< ::std::string, ::dra::Input >::const_iterator
      it = this->new_input().begin();
      it != this->new_input().end(); ++it) {
    Corpus_NewInputEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // .dra.Tasks tasks = 7;
  if (this->has_tasks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tasks_);
  }

  // .dra.Tasks high_task = 8;
  if (this->has_high_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *high_task_);
  }

  // .dra.Tasks boot_task = 9;
  if (this->has_boot_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *boot_task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Corpus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Corpus)
  GOOGLE_DCHECK_NE(&from, this);
  const Corpus* source =
      ::google::protobuf::DynamicCastToGenerated<Corpus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Corpus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Corpus)
    MergeFrom(*source);
  }
}

void Corpus::MergeFrom(const Corpus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Corpus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  covered_address_.MergeFrom(from.covered_address_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  write_address_.MergeFrom(from.write_address_);
  file_operations_.MergeFrom(from.file_operations_);
  new_input_.MergeFrom(from.new_input_);
  if (from.has_tasks()) {
    mutable_tasks()->::dra::Tasks::MergeFrom(from.tasks());
  }
  if (from.has_high_task()) {
    mutable_high_task()->::dra::Tasks::MergeFrom(from.high_task());
  }
  if (from.has_boot_task()) {
    mutable_boot_task()->::dra::Tasks::MergeFrom(from.boot_task());
  }
}

void Corpus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Corpus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Corpus::CopyFrom(const Corpus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Corpus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Corpus::IsInitialized() const {
  return true;
}

void Corpus::Swap(Corpus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Corpus::InternalSwap(Corpus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_.Swap(&other->input_);
  covered_address_.Swap(&other->covered_address_);
  uncovered_address_.Swap(&other->uncovered_address_);
  write_address_.Swap(&other->write_address_);
  file_operations_.Swap(&other->file_operations_);
  new_input_.Swap(&other->new_input_);
  swap(tasks_, other->tasks_);
  swap(high_task_, other->high_task_);
  swap(boot_task_, other->boot_task_);
}

::google::protobuf::Metadata Corpus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UsefulInput::InitAsDefaultInstance() {
  ::dra::_UsefulInput_default_instance_._instance.get_mutable()->input_ = const_cast< ::dra::Input*>(
      ::dra::Input::internal_default_instance());
}
class UsefulInput::HasBitSetters {
 public:
  static const ::dra::Input& input(const UsefulInput* msg);
};

const ::dra::Input&
UsefulInput::HasBitSetters::input(const UsefulInput* msg) {
  return *msg->input_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsefulInput::kInputFieldNumber;
const int UsefulInput::kTimeFieldNumber;
const int UsefulInput::kNumFieldNumber;
const int UsefulInput::kNewAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsefulInput::UsefulInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.UsefulInput)
}
UsefulInput::UsefulInput(const UsefulInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      new_address_(from.new_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::dra::Input(*from.input_);
  } else {
    input_ = nullptr;
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&time_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:dra.UsefulInput)
}

void UsefulInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UsefulInput_DependencyRPC_2eproto.base);
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&input_)) + sizeof(num_));
}

UsefulInput::~UsefulInput() {
  // @@protoc_insertion_point(destructor:dra.UsefulInput)
  SharedDtor();
}

void UsefulInput::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
}

void UsefulInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsefulInput& UsefulInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UsefulInput_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void UsefulInput::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.UsefulInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_address_.Clear();
  if (GetArenaNoVirtual() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&time_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsefulInput::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .dra.Input input = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_input(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        set_time(::google::protobuf::internal::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // uint64 num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        set_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 new_address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::internal::PackedUInt32Parser(mutable_new_address(), ptr, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        do {
          add_new_address(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsefulInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.UsefulInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dra.Input input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 new_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_new_address())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_new_address())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.UsefulInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.UsefulInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsefulInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.UsefulInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Input input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::input(this), output);
  }

  // double time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time(), output);
  }

  // uint64 num = 3;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->num(), output);
  }

  // repeated uint32 new_address = 4;
  if (this->new_address_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_new_address_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->new_address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->new_address(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.UsefulInput)
}

::google::protobuf::uint8* UsefulInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.UsefulInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Input input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::input(this), target);
  }

  // double time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time(), target);
  }

  // uint64 num = 3;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->num(), target);
  }

  // repeated uint32 new_address = 4;
  if (this->new_address_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _new_address_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->new_address_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.UsefulInput)
  return target;
}

size_t UsefulInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.UsefulInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 new_address = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->new_address_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _new_address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .dra.Input input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // double time = 2;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // uint64 num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsefulInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.UsefulInput)
  GOOGLE_DCHECK_NE(&from, this);
  const UsefulInput* source =
      ::google::protobuf::DynamicCastToGenerated<UsefulInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.UsefulInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.UsefulInput)
    MergeFrom(*source);
  }
}

void UsefulInput::MergeFrom(const UsefulInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.UsefulInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  new_address_.MergeFrom(from.new_address_);
  if (from.has_input()) {
    mutable_input()->::dra::Input::MergeFrom(from.input());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void UsefulInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.UsefulInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsefulInput::CopyFrom(const UsefulInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.UsefulInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsefulInput::IsInitialized() const {
  return true;
}

void UsefulInput::Swap(UsefulInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsefulInput::InternalSwap(UsefulInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  new_address_.InternalSwap(&other->new_address_);
  swap(input_, other->input_);
  swap(time_, other->time_);
  swap(num_, other->num_);
}

::google::protobuf::Metadata UsefulInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Statistic::InitAsDefaultInstance() {
}
class Statistic::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Statistic::kNameFieldNumber;
const int Statistic::kExecuteNumFieldNumber;
const int Statistic::kTimeFieldNumber;
const int Statistic::kNewTestCaseNumFieldNumber;
const int Statistic::kNewAddressNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Statistic::Statistic()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Statistic)
}
Statistic::Statistic(const Statistic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_, &from.name_,
    static_cast<size_t>(reinterpret_cast<char*>(&newaddressnum_) -
    reinterpret_cast<char*>(&name_)) + sizeof(newaddressnum_));
  // @@protoc_insertion_point(copy_constructor:dra.Statistic)
}

void Statistic::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newaddressnum_) -
      reinterpret_cast<char*>(&name_)) + sizeof(newaddressnum_));
}

Statistic::~Statistic() {
  // @@protoc_insertion_point(destructor:dra.Statistic)
  SharedDtor();
}

void Statistic::SharedDtor() {
}

void Statistic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Statistic& Statistic::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Statistic_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Statistic::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Statistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newaddressnum_) -
      reinterpret_cast<char*>(&name_)) + sizeof(newaddressnum_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Statistic::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .dra.FuzzingStat name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_name(static_cast<::dra::FuzzingStat>(val));
        break;
      }
      // uint64 executeNum = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        set_executenum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double time = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 97) goto handle_unusual;
        set_time(::google::protobuf::internal::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // uint64 newTestCaseNum = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        set_newtestcasenum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 newAddressNum = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        set_newaddressnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Statistic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Statistic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dra.FuzzingStat name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_name(static_cast< ::dra::FuzzingStat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 executeNum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &executenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (97 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 newTestCaseNum = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &newtestcasenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 newAddressNum = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &newaddressnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Statistic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Statistic)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Statistic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Statistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.FuzzingStat name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->name(), output);
  }

  // uint64 executeNum = 11;
  if (this->executenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->executenum(), output);
  }

  // double time = 12;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->time(), output);
  }

  // uint64 newTestCaseNum = 13;
  if (this->newtestcasenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->newtestcasenum(), output);
  }

  // uint64 newAddressNum = 14;
  if (this->newaddressnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->newaddressnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Statistic)
}

::google::protobuf::uint8* Statistic::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Statistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.FuzzingStat name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->name(), target);
  }

  // uint64 executeNum = 11;
  if (this->executenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->executenum(), target);
  }

  // double time = 12;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->time(), target);
  }

  // uint64 newTestCaseNum = 13;
  if (this->newtestcasenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->newtestcasenum(), target);
  }

  // uint64 newAddressNum = 14;
  if (this->newaddressnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->newaddressnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Statistic)
  return target;
}

size_t Statistic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Statistic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dra.FuzzingStat name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->name());
  }

  // uint64 executeNum = 11;
  if (this->executenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->executenum());
  }

  // double time = 12;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // uint64 newTestCaseNum = 13;
  if (this->newtestcasenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->newtestcasenum());
  }

  // uint64 newAddressNum = 14;
  if (this->newaddressnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->newaddressnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Statistic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Statistic)
  GOOGLE_DCHECK_NE(&from, this);
  const Statistic* source =
      ::google::protobuf::DynamicCastToGenerated<Statistic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Statistic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Statistic)
    MergeFrom(*source);
  }
}

void Statistic::MergeFrom(const Statistic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Statistic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name() != 0) {
    set_name(from.name());
  }
  if (from.executenum() != 0) {
    set_executenum(from.executenum());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.newtestcasenum() != 0) {
    set_newtestcasenum(from.newtestcasenum());
  }
  if (from.newaddressnum() != 0) {
    set_newaddressnum(from.newaddressnum());
  }
}

void Statistic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Statistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statistic::CopyFrom(const Statistic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Statistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statistic::IsInitialized() const {
  return true;
}

void Statistic::Swap(Statistic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Statistic::InternalSwap(Statistic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(name_, other->name_);
  swap(executenum_, other->executenum_);
  swap(time_, other->time_);
  swap(newtestcasenum_, other->newtestcasenum_);
  swap(newaddressnum_, other->newaddressnum_);
}

::google::protobuf::Metadata Statistic::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Statistics_StatEntry_DoNotUse::Statistics_StatEntry_DoNotUse() {}
Statistics_StatEntry_DoNotUse::Statistics_StatEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Statistics_StatEntry_DoNotUse::MergeFrom(const Statistics_StatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Statistics_StatEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[35];
}
void Statistics_StatEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Statistics::InitAsDefaultInstance() {
  ::dra::_Statistics_default_instance_._instance.get_mutable()->coverage_ = const_cast< ::dra::Coverage*>(
      ::dra::Coverage::internal_default_instance());
}
class Statistics::HasBitSetters {
 public:
  static const ::dra::Coverage& coverage(const Statistics* msg);
};

const ::dra::Coverage&
Statistics::HasBitSetters::coverage(const Statistics* msg) {
  return *msg->coverage_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Statistics::kSignalNumFieldNumber;
const int Statistics::kBasicBlockNumberFieldNumber;
const int Statistics::kCoverageFieldNumber;
const int Statistics::kStatFieldNumber;
const int Statistics::kUsefulInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Statistics::Statistics()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Statistics)
}
Statistics::Statistics(const Statistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      useful_input_(from.useful_input_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stat_.MergeFrom(from.stat_);
  if (from.has_coverage()) {
    coverage_ = new ::dra::Coverage(*from.coverage_);
  } else {
    coverage_ = nullptr;
  }
  ::memcpy(&signalnum_, &from.signalnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&basic_block_number_) -
    reinterpret_cast<char*>(&signalnum_)) + sizeof(basic_block_number_));
  // @@protoc_insertion_point(copy_constructor:dra.Statistics)
}

void Statistics::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Statistics_DependencyRPC_2eproto.base);
  ::memset(&coverage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&basic_block_number_) -
      reinterpret_cast<char*>(&coverage_)) + sizeof(basic_block_number_));
}

Statistics::~Statistics() {
  // @@protoc_insertion_point(destructor:dra.Statistics)
  SharedDtor();
}

void Statistics::SharedDtor() {
  if (this != internal_default_instance()) delete coverage_;
}

void Statistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Statistics& Statistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Statistics_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Statistics::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Statistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_.Clear();
  useful_input_.Clear();
  if (GetArenaNoVirtual() == nullptr && coverage_ != nullptr) {
    delete coverage_;
  }
  coverage_ = nullptr;
  ::memset(&signalnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&basic_block_number_) -
      reinterpret_cast<char*>(&signalnum_)) + sizeof(basic_block_number_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Statistics::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 signalNum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_signalnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.Coverage coverage = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_coverage(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 basic_block_number = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        set_basic_block_number(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<int32, .dra.Statistic> stat = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&stat_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      // repeated .dra.UsefulInput useful_input = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_useful_input(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 98 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Statistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Statistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 signalNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &signalnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.Coverage coverage = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coverage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 basic_block_number = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &basic_block_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .dra.Statistic> stat = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          Statistics_StatEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Statistics_StatEntry_DoNotUse,
              ::google::protobuf::int32, ::dra::Statistic,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic > > parser(&stat_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dra.UsefulInput useful_input = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_useful_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Statistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Statistics)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Statistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Statistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 signalNum = 1;
  if (this->signalnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->signalnum(), output);
  }

  // .dra.Coverage coverage = 8;
  if (this->has_coverage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::coverage(this), output);
  }

  // uint32 basic_block_number = 10;
  if (this->basic_block_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->basic_block_number(), output);
  }

  // map<int32, .dra.Statistic> stat = 11;
  if (!this->stat().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->stat().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->stat().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_iterator
          it = this->stat().begin();
          it != this->stat().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Statistics_StatEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_iterator
          it = this->stat().begin();
          it != this->stat().end(); ++it) {
        Statistics_StatEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(11, entry, output);
      }
    }
  }

  // repeated .dra.UsefulInput useful_input = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->useful_input_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->useful_input(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Statistics)
}

::google::protobuf::uint8* Statistics::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Statistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 signalNum = 1;
  if (this->signalnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->signalnum(), target);
  }

  // .dra.Coverage coverage = 8;
  if (this->has_coverage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::coverage(this), target);
  }

  // uint32 basic_block_number = 10;
  if (this->basic_block_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->basic_block_number(), target);
  }

  // map<int32, .dra.Statistic> stat = 11;
  if (!this->stat().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->stat().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->stat().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_iterator
          it = this->stat().begin();
          it != this->stat().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Statistics_StatEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_iterator
          it = this->stat().begin();
          it != this->stat().end(); ++it) {
        Statistics_StatEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(11, entry, target);
      }
    }
  }

  // repeated .dra.UsefulInput useful_input = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->useful_input_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->useful_input(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Statistics)
  return target;
}

size_t Statistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Statistics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .dra.Statistic> stat = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stat_size());
  for (::google::protobuf::Map< ::google::protobuf::int32, ::dra::Statistic >::const_iterator
      it = this->stat().begin();
      it != this->stat().end(); ++it) {
    Statistics_StatEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // repeated .dra.UsefulInput useful_input = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->useful_input_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->useful_input(static_cast<int>(i)));
    }
  }

  // .dra.Coverage coverage = 8;
  if (this->has_coverage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coverage_);
  }

  // uint64 signalNum = 1;
  if (this->signalnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->signalnum());
  }

  // uint32 basic_block_number = 10;
  if (this->basic_block_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->basic_block_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Statistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Statistics)
  GOOGLE_DCHECK_NE(&from, this);
  const Statistics* source =
      ::google::protobuf::DynamicCastToGenerated<Statistics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Statistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Statistics)
    MergeFrom(*source);
  }
}

void Statistics::MergeFrom(const Statistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Statistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_.MergeFrom(from.stat_);
  useful_input_.MergeFrom(from.useful_input_);
  if (from.has_coverage()) {
    mutable_coverage()->::dra::Coverage::MergeFrom(from.coverage());
  }
  if (from.signalnum() != 0) {
    set_signalnum(from.signalnum());
  }
  if (from.basic_block_number() != 0) {
    set_basic_block_number(from.basic_block_number());
  }
}

void Statistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statistics::CopyFrom(const Statistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statistics::IsInitialized() const {
  return true;
}

void Statistics::Swap(Statistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Statistics::InternalSwap(Statistics* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  stat_.Swap(&other->stat_);
  CastToBase(&useful_input_)->InternalSwap(CastToBase(&other->useful_input_));
  swap(coverage_, other->coverage_);
  swap(signalnum_, other->signalnum_);
  swap(basic_block_number_, other->basic_block_number_);
}

::google::protobuf::Metadata Statistics::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

TaskRunTimeData_UncoveredAddressEntry_DoNotUse::TaskRunTimeData_UncoveredAddressEntry_DoNotUse() {}
TaskRunTimeData_UncoveredAddressEntry_DoNotUse::TaskRunTimeData_UncoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MergeFrom(const TaskRunTimeData_UncoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TaskRunTimeData_UncoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[37];
}
void TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TaskRunTimeData_CoveredAddressEntry_DoNotUse::TaskRunTimeData_CoveredAddressEntry_DoNotUse() {}
TaskRunTimeData_CoveredAddressEntry_DoNotUse::TaskRunTimeData_CoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TaskRunTimeData_CoveredAddressEntry_DoNotUse::MergeFrom(const TaskRunTimeData_CoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TaskRunTimeData_CoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[38];
}
void TaskRunTimeData_CoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TaskRunTimeData::InitAsDefaultInstance() {
}
class TaskRunTimeData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskRunTimeData::kHashFieldNumber;
const int TaskRunTimeData::kProgramFieldNumber;
const int TaskRunTimeData::kWriteIdxFieldNumber;
const int TaskRunTimeData::kConditionIdxFieldNumber;
const int TaskRunTimeData::kCheckWriteAddressFieldNumber;
const int TaskRunTimeData::kUncoveredAddressFieldNumber;
const int TaskRunTimeData::kCoveredAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskRunTimeData::TaskRunTimeData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.TaskRunTimeData)
}
TaskRunTimeData::TaskRunTimeData(const TaskRunTimeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  covered_address_.MergeFrom(from.covered_address_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.program().size() > 0) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  ::memcpy(&write_idx_, &from.write_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&check_write_address_) -
    reinterpret_cast<char*>(&write_idx_)) + sizeof(check_write_address_));
  // @@protoc_insertion_point(copy_constructor:dra.TaskRunTimeData)
}

void TaskRunTimeData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskRunTimeData_DependencyRPC_2eproto.base);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_write_address_) -
      reinterpret_cast<char*>(&write_idx_)) + sizeof(check_write_address_));
}

TaskRunTimeData::~TaskRunTimeData() {
  // @@protoc_insertion_point(destructor:dra.TaskRunTimeData)
  SharedDtor();
}

void TaskRunTimeData::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskRunTimeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskRunTimeData& TaskRunTimeData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskRunTimeData_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void TaskRunTimeData::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.TaskRunTimeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uncovered_address_.Clear();
  covered_address_.Clear();
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_write_address_) -
      reinterpret_cast<char*>(&write_idx_)) + sizeof(check_write_address_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskRunTimeData::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_hash(), ptr, ctx, "dra.TaskRunTimeData.hash");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes program = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_program(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 write_idx = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        set_write_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 condition_idx = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        set_condition_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool check_write_address = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        set_check_write_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<uint32, .dra.runTimeData> uncovered_address = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&uncovered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 426 && (ptr += 2));
        break;
      }
      // map<uint32, .dra.runTimeData> covered_address = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&covered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 442 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskRunTimeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.TaskRunTimeData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.TaskRunTimeData.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes program = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 write_idx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &write_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 condition_idx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &condition_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool check_write_address = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &check_write_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.runTimeData> uncovered_address = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          TaskRunTimeData_UncoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TaskRunTimeData_UncoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::runTimeData,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData > > parser(&uncovered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.runTimeData> covered_address = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          TaskRunTimeData_CoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TaskRunTimeData_CoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::runTimeData,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData > > parser(&covered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.TaskRunTimeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.TaskRunTimeData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskRunTimeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.TaskRunTimeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.TaskRunTimeData.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  // bytes program = 2;
  if (this->program().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->program(), output);
  }

  // uint32 write_idx = 5;
  if (this->write_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->write_idx(), output);
  }

  // uint32 condition_idx = 6;
  if (this->condition_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->condition_idx(), output);
  }

  // bool check_write_address = 10;
  if (this->check_write_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->check_write_address(), output);
  }

  // map<uint32, .dra.runTimeData> uncovered_address = 21;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(21, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(21, entry, output);
      }
    }
  }

  // map<uint32, .dra.runTimeData> covered_address = 23;
  if (!this->covered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->covered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->covered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        TaskRunTimeData_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it) {
        TaskRunTimeData_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.TaskRunTimeData)
}

::google::protobuf::uint8* TaskRunTimeData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.TaskRunTimeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.TaskRunTimeData.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  // bytes program = 2;
  if (this->program().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->program(), target);
  }

  // uint32 write_idx = 5;
  if (this->write_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->write_idx(), target);
  }

  // uint32 condition_idx = 6;
  if (this->condition_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->condition_idx(), target);
  }

  // bool check_write_address = 10;
  if (this->check_write_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->check_write_address(), target);
  }

  // map<uint32, .dra.runTimeData> uncovered_address = 21;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(21, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(21, entry, target);
      }
    }
  }

  // map<uint32, .dra.runTimeData> covered_address = 23;
  if (!this->covered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->covered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->covered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        TaskRunTimeData_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it) {
        TaskRunTimeData_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.TaskRunTimeData)
  return target;
}

size_t TaskRunTimeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.TaskRunTimeData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .dra.runTimeData> uncovered_address = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->uncovered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
      it = this->uncovered_address().begin();
      it != this->uncovered_address().end(); ++it) {
    TaskRunTimeData_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .dra.runTimeData> covered_address = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->covered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
      it = this->covered_address().begin();
      it != this->covered_address().end(); ++it) {
    TaskRunTimeData_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // bytes program = 2;
  if (this->program().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->program());
  }

  // uint32 write_idx = 5;
  if (this->write_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->write_idx());
  }

  // uint32 condition_idx = 6;
  if (this->condition_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->condition_idx());
  }

  // bool check_write_address = 10;
  if (this->check_write_address() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskRunTimeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.TaskRunTimeData)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskRunTimeData* source =
      ::google::protobuf::DynamicCastToGenerated<TaskRunTimeData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.TaskRunTimeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.TaskRunTimeData)
    MergeFrom(*source);
  }
}

void TaskRunTimeData::MergeFrom(const TaskRunTimeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.TaskRunTimeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uncovered_address_.MergeFrom(from.uncovered_address_);
  covered_address_.MergeFrom(from.covered_address_);
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.program().size() > 0) {

    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.write_idx() != 0) {
    set_write_idx(from.write_idx());
  }
  if (from.condition_idx() != 0) {
    set_condition_idx(from.condition_idx());
  }
  if (from.check_write_address() != 0) {
    set_check_write_address(from.check_write_address());
  }
}

void TaskRunTimeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.TaskRunTimeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskRunTimeData::CopyFrom(const TaskRunTimeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.TaskRunTimeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskRunTimeData::IsInitialized() const {
  return true;
}

void TaskRunTimeData::Swap(TaskRunTimeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskRunTimeData::InternalSwap(TaskRunTimeData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uncovered_address_.Swap(&other->uncovered_address_);
  covered_address_.Swap(&other->covered_address_);
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  program_.Swap(&other->program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(write_idx_, other->write_idx_);
  swap(condition_idx_, other->condition_idx_);
  swap(check_write_address_, other->check_write_address_);
}

::google::protobuf::Metadata TaskRunTimeData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Task_UncoveredAddressEntry_DoNotUse::Task_UncoveredAddressEntry_DoNotUse() {}
Task_UncoveredAddressEntry_DoNotUse::Task_UncoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Task_UncoveredAddressEntry_DoNotUse::MergeFrom(const Task_UncoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Task_UncoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[40];
}
void Task_UncoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Task_CoveredAddressEntry_DoNotUse::Task_CoveredAddressEntry_DoNotUse() {}
Task_CoveredAddressEntry_DoNotUse::Task_CoveredAddressEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Task_CoveredAddressEntry_DoNotUse::MergeFrom(const Task_CoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Task_CoveredAddressEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[41];
}
void Task_CoveredAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Task::InitAsDefaultInstance() {
}
class Task::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Task::kSigFieldNumber;
const int Task::kIndexFieldNumber;
const int Task::kProgramFieldNumber;
const int Task::kKindFieldNumber;
const int Task::kPriorityFieldNumber;
const int Task::kHashFieldNumber;
const int Task::kCountFieldNumber;
const int Task::kWriteSigFieldNumber;
const int Task::kWriteIndexFieldNumber;
const int Task::kWriteProgramFieldNumber;
const int Task::kWriteAddressFieldNumber;
const int Task::kTaskStatusFieldNumber;
const int Task::kCheckWriteAddressFieldNumber;
const int Task::kUncoveredAddressFieldNumber;
const int Task::kCoveredAddressFieldNumber;
const int Task::kTaskRunTimeDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Task::Task()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Task)
}
Task::Task(const Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      task_run_time_data_(from.task_run_time_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  covered_address_.MergeFrom(from.covered_address_);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sig().size() > 0) {
    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.program().size() > 0) {
    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  write_sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.write_sig().size() > 0) {
    write_sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_sig_);
  }
  write_program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.write_program().size() > 0) {
    write_program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_program_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&check_write_address_) -
    reinterpret_cast<char*>(&index_)) + sizeof(check_write_address_));
  // @@protoc_insertion_point(copy_constructor:dra.Task)
}

void Task::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Task_DependencyRPC_2eproto.base);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_program_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_write_address_) -
      reinterpret_cast<char*>(&index_)) + sizeof(check_write_address_));
}

Task::~Task() {
  // @@protoc_insertion_point(destructor:dra.Task)
  SharedDtor();
}

void Task::SharedDtor() {
  sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_program_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Task::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Task& Task::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Task_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uncovered_address_.Clear();
  covered_address_.Clear();
  task_run_time_data_.Clear();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  write_program_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&check_write_address_) -
      reinterpret_cast<char*>(&index_)) + sizeof(check_write_address_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Task::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sig = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_sig(), ptr, ctx, "dra.Task.sig");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes program = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_program(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 kind = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_kind(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 priority = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        set_priority(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string hash = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_hash(), ptr, ctx, "dra.Task.hash");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 count = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string write_sig = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_write_sig(), ptr, ctx, "dra.Task.write_sig");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 write_index = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        set_write_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes write_program = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParser(mutable_write_program(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 write_address = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        set_write_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<uint32, .dra.runTimeData> uncovered_address = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&uncovered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 426 && (ptr += 2));
        break;
      }
      // map<uint32, .dra.runTimeData> covered_address = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&covered_address_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 442 && (ptr += 2));
        break;
      }
      // .dra.taskStatus task_status = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 192) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_task_status(static_cast<::dra::taskStatus>(val));
        break;
      }
      // bool check_write_address = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 200) goto handle_unusual;
        set_check_write_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .dra.TaskRunTimeData task_run_time_data = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 250) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_task_run_time_data(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 506 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Task)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sig().data(), static_cast<int>(this->sig().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Task.sig"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes program = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kind = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Task.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string write_sig = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_write_sig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->write_sig().data(), static_cast<int>(this->write_sig().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Task.write_sig"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 write_index = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &write_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes write_program = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_write_program()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 write_address = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &write_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.runTimeData> uncovered_address = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          Task_UncoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Task_UncoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::runTimeData,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData > > parser(&uncovered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .dra.runTimeData> covered_address = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          Task_CoveredAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Task_CoveredAddressEntry_DoNotUse,
              ::google::protobuf::uint32, ::dra::runTimeData,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData > > parser(&covered_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.taskStatus task_status = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (192 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_task_status(static_cast< ::dra::taskStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool check_write_address = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (200 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &check_write_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dra.TaskRunTimeData task_run_time_data = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (250 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_task_run_time_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Task)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sig = 1;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Task.sig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sig(), output);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // bytes program = 3;
  if (this->program().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->program(), output);
  }

  // uint32 kind = 4;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->kind(), output);
  }

  // int32 priority = 5;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->priority(), output);
  }

  // string hash = 6;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Task.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->hash(), output);
  }

  // uint32 count = 7;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->count(), output);
  }

  // string write_sig = 11;
  if (this->write_sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_sig().data(), static_cast<int>(this->write_sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Task.write_sig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->write_sig(), output);
  }

  // uint32 write_index = 12;
  if (this->write_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->write_index(), output);
  }

  // bytes write_program = 13;
  if (this->write_program().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->write_program(), output);
  }

  // uint32 write_address = 14;
  if (this->write_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->write_address(), output);
  }

  // map<uint32, .dra.runTimeData> uncovered_address = 21;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Task_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(21, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        Task_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(21, entry, output);
      }
    }
  }

  // map<uint32, .dra.runTimeData> covered_address = 23;
  if (!this->covered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->covered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->covered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Task_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it) {
        Task_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(23, entry, output);
      }
    }
  }

  // .dra.taskStatus task_status = 24;
  if (this->task_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      24, this->task_status(), output);
  }

  // bool check_write_address = 25;
  if (this->check_write_address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->check_write_address(), output);
  }

  // repeated .dra.TaskRunTimeData task_run_time_data = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_run_time_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31,
      this->task_run_time_data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Task)
}

::google::protobuf::uint8* Task::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sig = 1;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Task.sig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sig(), target);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // bytes program = 3;
  if (this->program().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->program(), target);
  }

  // uint32 kind = 4;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->kind(), target);
  }

  // int32 priority = 5;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->priority(), target);
  }

  // string hash = 6;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Task.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->hash(), target);
  }

  // uint32 count = 7;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->count(), target);
  }

  // string write_sig = 11;
  if (this->write_sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->write_sig().data(), static_cast<int>(this->write_sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Task.write_sig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->write_sig(), target);
  }

  // uint32 write_index = 12;
  if (this->write_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->write_index(), target);
  }

  // bytes write_program = 13;
  if (this->write_program().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->write_program(), target);
  }

  // uint32 write_address = 14;
  if (this->write_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->write_address(), target);
  }

  // map<uint32, .dra.runTimeData> uncovered_address = 21;
  if (!this->uncovered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->uncovered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Task_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(21, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->uncovered_address().begin();
          it != this->uncovered_address().end(); ++it) {
        Task_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(21, entry, target);
      }
    }
  }

  // map<uint32, .dra.runTimeData> covered_address = 23;
  if (!this->covered_address().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->covered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->covered_address().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Task_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
          it = this->covered_address().begin();
          it != this->covered_address().end(); ++it) {
        Task_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(23, entry, target);
      }
    }
  }

  // .dra.taskStatus task_status = 24;
  if (this->task_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      24, this->task_status(), target);
  }

  // bool check_write_address = 25;
  if (this->check_write_address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->check_write_address(), target);
  }

  // repeated .dra.TaskRunTimeData task_run_time_data = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_run_time_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->task_run_time_data(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Task)
  return target;
}

size_t Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Task)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .dra.runTimeData> uncovered_address = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->uncovered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
      it = this->uncovered_address().begin();
      it != this->uncovered_address().end(); ++it) {
    Task_UncoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .dra.runTimeData> covered_address = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->covered_address_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::dra::runTimeData >::const_iterator
      it = this->covered_address().begin();
      it != this->covered_address().end(); ++it) {
    Task_CoveredAddressEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // repeated .dra.TaskRunTimeData task_run_time_data = 31;
  {
    unsigned int count = static_cast<unsigned int>(this->task_run_time_data_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task_run_time_data(static_cast<int>(i)));
    }
  }

  // string sig = 1;
  if (this->sig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sig());
  }

  // bytes program = 3;
  if (this->program().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->program());
  }

  // string hash = 6;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // string write_sig = 11;
  if (this->write_sig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->write_sig());
  }

  // bytes write_program = 13;
  if (this->write_program().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->write_program());
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // uint32 kind = 4;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kind());
  }

  // int32 priority = 5;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  // uint32 count = 7;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // uint32 write_index = 12;
  if (this->write_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->write_index());
  }

  // uint32 write_address = 14;
  if (this->write_address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->write_address());
  }

  // .dra.taskStatus task_status = 24;
  if (this->task_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->task_status());
  }

  // bool check_write_address = 25;
  if (this->check_write_address() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Task* source =
      ::google::protobuf::DynamicCastToGenerated<Task>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Task)
    MergeFrom(*source);
  }
}

void Task::MergeFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uncovered_address_.MergeFrom(from.uncovered_address_);
  covered_address_.MergeFrom(from.covered_address_);
  task_run_time_data_.MergeFrom(from.task_run_time_data_);
  if (from.sig().size() > 0) {

    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  if (from.program().size() > 0) {

    program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.program_);
  }
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.write_sig().size() > 0) {

    write_sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_sig_);
  }
  if (from.write_program().size() > 0) {

    write_program_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.write_program_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.write_index() != 0) {
    set_write_index(from.write_index());
  }
  if (from.write_address() != 0) {
    set_write_address(from.write_address());
  }
  if (from.task_status() != 0) {
    set_task_status(from.task_status());
  }
  if (from.check_write_address() != 0) {
    set_check_write_address(from.check_write_address());
  }
}

void Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Task::IsInitialized() const {
  return true;
}

void Task::Swap(Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Task::InternalSwap(Task* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uncovered_address_.Swap(&other->uncovered_address_);
  covered_address_.Swap(&other->covered_address_);
  CastToBase(&task_run_time_data_)->InternalSwap(CastToBase(&other->task_run_time_data_));
  sig_.Swap(&other->sig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  program_.Swap(&other->program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  write_sig_.Swap(&other->write_sig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  write_program_.Swap(&other->write_program_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(kind_, other->kind_);
  swap(priority_, other->priority_);
  swap(count_, other->count_);
  swap(write_index_, other->write_index_);
  swap(write_address_, other->write_address_);
  swap(task_status_, other->task_status_);
  swap(check_write_address_, other->check_write_address_);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Tasks_TaskMapEntry_DoNotUse::Tasks_TaskMapEntry_DoNotUse() {}
Tasks_TaskMapEntry_DoNotUse::Tasks_TaskMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Tasks_TaskMapEntry_DoNotUse::MergeFrom(const Tasks_TaskMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Tasks_TaskMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[43];
}
void Tasks_TaskMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Tasks::InitAsDefaultInstance() {
}
class Tasks::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tasks::kNameFieldNumber;
const int Tasks::kKindFieldNumber;
const int Tasks::kTaskMapFieldNumber;
const int Tasks::kTaskArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tasks::Tasks()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Tasks)
}
Tasks::Tasks(const Tasks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      task_array_(from.task_array_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_map_.MergeFrom(from.task_map_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:dra.Tasks)
}

void Tasks::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Tasks_DependencyRPC_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
}

Tasks::~Tasks() {
  // @@protoc_insertion_point(destructor:dra.Tasks)
  SharedDtor();
}

void Tasks::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tasks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tasks& Tasks::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Tasks_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Tasks::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Tasks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_map_.Clear();
  task_array_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Tasks::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, .dra.Task> task_map = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&task_map_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .dra.Task task_array = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_task_array(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string name = 41;
      case 41: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "dra.Tasks.name");
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .dra.TaskKind kind = 42;
      case 42: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        set_kind(static_cast<::dra::TaskKind>(val));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Tasks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Tasks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dra.Task> task_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          Tasks_TaskMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Tasks_TaskMapEntry_DoNotUse,
              ::std::string, ::dra::Task,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dra::Task > > parser(&task_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Tasks.TaskMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dra.Task task_array = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_task_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (330 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dra.Tasks.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dra.TaskKind kind = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (336 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::dra::TaskKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Tasks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Tasks)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Tasks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Tasks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dra.Task> task_map = 1;
  if (!this->task_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::Task >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Tasks.TaskMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->task_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->task_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::Task >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::Task >::const_iterator
          it = this->task_map().begin();
          it != this->task_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Tasks_TaskMapEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::Task >::const_iterator
          it = this->task_map().begin();
          it != this->task_map().end(); ++it) {
        Tasks_TaskMapEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .dra.Task task_array = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_array_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->task_array(static_cast<int>(i)),
      output);
  }

  // string name = 41;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Tasks.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->name(), output);
  }

  // .dra.TaskKind kind = 42;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      42, this->kind(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Tasks)
}

::google::protobuf::uint8* Tasks::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Tasks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dra.Task> task_map = 1;
  if (!this->task_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dra::Task >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dra.Tasks.TaskMapEntry.key");
      }
    };

    if (false &&
        this->task_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->task_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dra::Task >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dra::Task >::const_iterator
          it = this->task_map().begin();
          it != this->task_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Tasks_TaskMapEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::google::protobuf::Map< ::std::string, ::dra::Task >::const_iterator
          it = this->task_map().begin();
          it != this->task_map().end(); ++it) {
        Tasks_TaskMapEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .dra.Task task_array = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_array_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->task_array(static_cast<int>(i)), target);
  }

  // string name = 41;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dra.Tasks.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->name(), target);
  }

  // .dra.TaskKind kind = 42;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      42, this->kind(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Tasks)
  return target;
}

size_t Tasks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Tasks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .dra.Task> task_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->task_map_size());
  for (::google::protobuf::Map< ::std::string, ::dra::Task >::const_iterator
      it = this->task_map().begin();
      it != this->task_map().end(); ++it) {
    Tasks_TaskMapEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // repeated .dra.Task task_array = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->task_array_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task_array(static_cast<int>(i)));
    }
  }

  // string name = 41;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .dra.TaskKind kind = 42;
  if (this->kind() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tasks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Tasks)
  GOOGLE_DCHECK_NE(&from, this);
  const Tasks* source =
      ::google::protobuf::DynamicCastToGenerated<Tasks>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Tasks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Tasks)
    MergeFrom(*source);
  }
}

void Tasks::MergeFrom(const Tasks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Tasks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_map_.MergeFrom(from.task_map_);
  task_array_.MergeFrom(from.task_array_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void Tasks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Tasks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tasks::CopyFrom(const Tasks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Tasks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tasks::IsInitialized() const {
  return true;
}

void Tasks::Swap(Tasks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tasks::InternalSwap(Tasks* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  task_map_.Swap(&other->task_map_);
  CastToBase(&task_array_)->InternalSwap(CastToBase(&other->task_array_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(kind_, other->kind_);
}

::google::protobuf::Metadata Tasks::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Time::InitAsDefaultInstance() {
}
class Time::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Time::kTimeFieldNumber;
const int Time::kNumFieldNumber;
const int Time::kExecuteNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Time::Time()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Time)
}
Time::Time(const Time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&executenum_) -
    reinterpret_cast<char*>(&time_)) + sizeof(executenum_));
  // @@protoc_insertion_point(copy_constructor:dra.Time)
}

void Time::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&executenum_) -
      reinterpret_cast<char*>(&time_)) + sizeof(executenum_));
}

Time::~Time() {
  // @@protoc_insertion_point(destructor:dra.Time)
  SharedDtor();
}

void Time::SharedDtor() {
}

void Time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Time& Time::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Time_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Time::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&executenum_) -
      reinterpret_cast<char*>(&time_)) + sizeof(executenum_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Time::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        set_time(::google::protobuf::internal::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // int64 num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 executeNum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        set_executenum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Time)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 executeNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &executenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Time)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // int64 num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->num(), output);
  }

  // int64 executeNum = 3;
  if (this->executenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->executenum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Time)
}

::google::protobuf::uint8* Time::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // int64 num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->num(), target);
  }

  // int64 executeNum = 3;
  if (this->executenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->executenum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Time)
  return target;
}

size_t Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Time)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // int64 num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num());
  }

  // int64 executeNum = 3;
  if (this->executenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->executenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Time)
  GOOGLE_DCHECK_NE(&from, this);
  const Time* source =
      ::google::protobuf::DynamicCastToGenerated<Time>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Time)
    MergeFrom(*source);
  }
}

void Time::MergeFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
  if (from.executenum() != 0) {
    set_executenum(from.executenum());
  }
}

void Time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Time::CopyFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Time::IsInitialized() const {
  return true;
}

void Time::Swap(Time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Time::InternalSwap(Time* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(time_, other->time_);
  swap(num_, other->num_);
  swap(executenum_, other->executenum_);
}

::google::protobuf::Metadata Time::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

Coverage_CoverageEntry_DoNotUse::Coverage_CoverageEntry_DoNotUse() {}
Coverage_CoverageEntry_DoNotUse::Coverage_CoverageEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Coverage_CoverageEntry_DoNotUse::MergeFrom(const Coverage_CoverageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Coverage_CoverageEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[46];
}
void Coverage_CoverageEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Coverage::InitAsDefaultInstance() {
}
class Coverage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coverage::kCoverageFieldNumber;
const int Coverage::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coverage::Coverage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Coverage)
}
Coverage::Coverage(const Coverage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      time_(from.time_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coverage_.MergeFrom(from.coverage_);
  // @@protoc_insertion_point(copy_constructor:dra.Coverage)
}

void Coverage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Coverage_DependencyRPC_2eproto.base);
}

Coverage::~Coverage() {
  // @@protoc_insertion_point(destructor:dra.Coverage)
  SharedDtor();
}

void Coverage::SharedDtor() {
}

void Coverage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Coverage& Coverage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Coverage_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Coverage::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Coverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coverage_.Clear();
  time_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Coverage::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<uint32, uint32> coverage = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(&coverage_, ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .dra.Time time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_time(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Coverage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Coverage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> coverage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          Coverage_CoverageEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Coverage_CoverageEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&coverage_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dra.Time time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Coverage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Coverage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Coverage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Coverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> coverage = 1;
  if (!this->coverage().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->coverage().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->coverage().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->coverage().begin();
          it != this->coverage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Coverage_CoverageEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->coverage().begin();
          it != this->coverage().end(); ++it) {
        Coverage_CoverageEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
      }
    }
  }

  // repeated .dra.Time time = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->time(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Coverage)
}

::google::protobuf::uint8* Coverage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Coverage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> coverage = 1;
  if (!this->coverage().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->coverage().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->coverage().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->coverage().begin();
          it != this->coverage().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        Coverage_CoverageEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
      }
    } else {
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->coverage().begin();
          it != this->coverage().end(); ++it) {
        Coverage_CoverageEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
      }
    }
  }

  // repeated .dra.Time time = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->time(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Coverage)
  return target;
}

size_t Coverage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Coverage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, uint32> coverage = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->coverage_size());
  for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
      it = this->coverage().begin();
      it != this->coverage().end(); ++it) {
    Coverage_CoverageEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::google::protobuf::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // repeated .dra.Time time = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->time_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coverage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Coverage)
  GOOGLE_DCHECK_NE(&from, this);
  const Coverage* source =
      ::google::protobuf::DynamicCastToGenerated<Coverage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Coverage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Coverage)
    MergeFrom(*source);
  }
}

void Coverage::MergeFrom(const Coverage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Coverage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coverage_.MergeFrom(from.coverage_);
  time_.MergeFrom(from.time_);
}

void Coverage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Coverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coverage::CopyFrom(const Coverage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Coverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coverage::IsInitialized() const {
  return true;
}

void Coverage::Swap(Coverage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coverage::InternalSwap(Coverage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  coverage_.Swap(&other->coverage_);
  CastToBase(&time_)->InternalSwap(CastToBase(&other->time_));
}

::google::protobuf::Metadata Coverage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Conditions::InitAsDefaultInstance() {
}
class Conditions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Conditions::kConditionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Conditions::Conditions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.Conditions)
}
Conditions::Conditions(const Conditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      condition_(from.condition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dra.Conditions)
}

void Conditions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Conditions_DependencyRPC_2eproto.base);
}

Conditions::~Conditions() {
  // @@protoc_insertion_point(destructor:dra.Conditions)
  SharedDtor();
}

void Conditions::SharedDtor() {
}

void Conditions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Conditions& Conditions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Conditions_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void Conditions::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Conditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  condition_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Conditions::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .dra.Condition condition = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_condition(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Conditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.Conditions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dra.Condition condition = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.Conditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.Conditions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Conditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.Conditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dra.Condition condition = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->condition(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.Conditions)
}

::google::protobuf::uint8* Conditions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Conditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dra.Condition condition = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->condition(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Conditions)
  return target;
}

size_t Conditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Conditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dra.Condition condition = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->condition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->condition(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Conditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.Conditions)
  GOOGLE_DCHECK_NE(&from, this);
  const Conditions* source =
      ::google::protobuf::DynamicCastToGenerated<Conditions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.Conditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.Conditions)
    MergeFrom(*source);
  }
}

void Conditions::MergeFrom(const Conditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Conditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  condition_.MergeFrom(from.condition_);
}

void Conditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.Conditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Conditions::CopyFrom(const Conditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Conditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Conditions::IsInitialized() const {
  return true;
}

void Conditions::Swap(Conditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Conditions::InternalSwap(Conditions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&condition_)->InternalSwap(CastToBase(&other->condition_));
}

::google::protobuf::Metadata Conditions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WriteAddresses::InitAsDefaultInstance() {
  ::dra::_WriteAddresses_default_instance_._instance.get_mutable()->condition_ = const_cast< ::dra::Condition*>(
      ::dra::Condition::internal_default_instance());
}
class WriteAddresses::HasBitSetters {
 public:
  static const ::dra::Condition& condition(const WriteAddresses* msg);
};

const ::dra::Condition&
WriteAddresses::HasBitSetters::condition(const WriteAddresses* msg) {
  return *msg->condition_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteAddresses::kConditionFieldNumber;
const int WriteAddresses::kWriteAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteAddresses::WriteAddresses()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dra.WriteAddresses)
}
WriteAddresses::WriteAddresses(const WriteAddresses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      write_address_(from.write_address_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_condition()) {
    condition_ = new ::dra::Condition(*from.condition_);
  } else {
    condition_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:dra.WriteAddresses)
}

void WriteAddresses::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WriteAddresses_DependencyRPC_2eproto.base);
  condition_ = nullptr;
}

WriteAddresses::~WriteAddresses() {
  // @@protoc_insertion_point(destructor:dra.WriteAddresses)
  SharedDtor();
}

void WriteAddresses::SharedDtor() {
  if (this != internal_default_instance()) delete condition_;
}

void WriteAddresses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteAddresses& WriteAddresses::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WriteAddresses_DependencyRPC_2eproto.base);
  return *internal_default_instance();
}


void WriteAddresses::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.WriteAddresses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  write_address_.Clear();
  if (GetArenaNoVirtual() == nullptr && condition_ != nullptr) {
    delete condition_;
  }
  condition_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WriteAddresses::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .dra.Condition condition = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_condition(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .dra.WriteAddress write_address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_write_address(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WriteAddresses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dra.WriteAddresses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dra.Condition condition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dra.WriteAddress write_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_write_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dra.WriteAddresses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dra.WriteAddresses)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WriteAddresses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dra.WriteAddresses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Condition condition = 1;
  if (this->has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::condition(this), output);
  }

  // repeated .dra.WriteAddress write_address = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->write_address_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->write_address(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dra.WriteAddresses)
}

::google::protobuf::uint8* WriteAddresses::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.WriteAddresses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dra.Condition condition = 1;
  if (this->has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::condition(this), target);
  }

  // repeated .dra.WriteAddress write_address = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->write_address_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->write_address(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.WriteAddresses)
  return target;
}

size_t WriteAddresses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.WriteAddresses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dra.WriteAddress write_address = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->write_address_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->write_address(static_cast<int>(i)));
    }
  }

  // .dra.Condition condition = 1;
  if (this->has_condition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *condition_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteAddresses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dra.WriteAddresses)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteAddresses* source =
      ::google::protobuf::DynamicCastToGenerated<WriteAddresses>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dra.WriteAddresses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dra.WriteAddresses)
    MergeFrom(*source);
  }
}

void WriteAddresses::MergeFrom(const WriteAddresses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.WriteAddresses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  write_address_.MergeFrom(from.write_address_);
  if (from.has_condition()) {
    mutable_condition()->::dra::Condition::MergeFrom(from.condition());
  }
}

void WriteAddresses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dra.WriteAddresses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteAddresses::CopyFrom(const WriteAddresses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.WriteAddresses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteAddresses::IsInitialized() const {
  return true;
}

void WriteAddresses::Swap(WriteAddresses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteAddresses::InternalSwap(WriteAddresses* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&write_address_)->InternalSwap(CastToBase(&other->write_address_));
  swap(condition_, other->condition_);
}

::google::protobuf::Metadata WriteAddresses::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_DependencyRPC_2eproto);
  return ::file_level_metadata_DependencyRPC_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dra
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::dra::Empty* Arena::CreateMaybeMessage< ::dra::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Condition* Arena::CreateMaybeMessage< ::dra::Condition >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Condition >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Call_AddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Call_AddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Call_AddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Call* Arena::CreateMaybeMessage< ::dra::Call >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Call >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Inputs* Arena::CreateMaybeMessage< ::dra::Inputs >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Inputs >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Dependencytask* Arena::CreateMaybeMessage< ::dra::Dependencytask >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Dependencytask >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::runTimeData* Arena::CreateMaybeMessage< ::dra::runTimeData >(Arena* arena) {
  return Arena::CreateInternal< ::dra::runTimeData >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::FileOperationsFunction_WriteAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::FileOperationsFunction* Arena::CreateMaybeMessage< ::dra::FileOperationsFunction >(Arena* arena) {
  return Arena::CreateInternal< ::dra::FileOperationsFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::FileOperations_FileOperationsFunctionEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::FileOperations* Arena::CreateMaybeMessage< ::dra::FileOperations >(Arena* arena) {
  return Arena::CreateInternal< ::dra::FileOperations >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::WriteAddress_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::WriteAddress_UncoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::WriteAddress_UncoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::WriteAddress_FileOperationsFunctionEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::WriteAddress_InputEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::WriteAddress_InputEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::WriteAddress_InputEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::WriteAddress* Arena::CreateMaybeMessage< ::dra::WriteAddress >(Arena* arena) {
  return Arena::CreateInternal< ::dra::WriteAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::writeAddressAttributes* Arena::CreateMaybeMessage< ::dra::writeAddressAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::dra::writeAddressAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UncoveredAddress_InputEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::UncoveredAddress_InputEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::UncoveredAddress_InputEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UncoveredAddress_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::UncoveredAddress_WriteAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::UncoveredAddress_WriteAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UncoveredAddress* Arena::CreateMaybeMessage< ::dra::UncoveredAddress >(Arena* arena) {
  return Arena::CreateInternal< ::dra::UncoveredAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Path* Arena::CreateMaybeMessage< ::dra::Path >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Path >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UnstableInput* Arena::CreateMaybeMessage< ::dra::UnstableInput >(Arena* arena) {
  return Arena::CreateInternal< ::dra::UnstableInput >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input_CallEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Input_CallEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Input_CallEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Input_UncoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Input_UncoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Input_WriteAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Input_WriteAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input* Arena::CreateMaybeMessage< ::dra::Input >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Input >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Dependency* Arena::CreateMaybeMessage< ::dra::Dependency >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Dependency >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus_InputEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Corpus_InputEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus_InputEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Corpus_UncoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus_UncoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus_CoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Corpus_CoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus_CoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Corpus_WriteAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus_WriteAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus_FileOperationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Corpus_FileOperationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus_FileOperationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus_NewInputEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Corpus_NewInputEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus_NewInputEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Corpus* Arena::CreateMaybeMessage< ::dra::Corpus >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Corpus >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UsefulInput* Arena::CreateMaybeMessage< ::dra::UsefulInput >(Arena* arena) {
  return Arena::CreateInternal< ::dra::UsefulInput >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Statistic* Arena::CreateMaybeMessage< ::dra::Statistic >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Statistic >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Statistics_StatEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Statistics_StatEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Statistics_StatEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Statistics* Arena::CreateMaybeMessage< ::dra::Statistics >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Statistics >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::TaskRunTimeData_UncoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::TaskRunTimeData_CoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::TaskRunTimeData* Arena::CreateMaybeMessage< ::dra::TaskRunTimeData >(Arena* arena) {
  return Arena::CreateInternal< ::dra::TaskRunTimeData >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Task_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Task_UncoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Task_UncoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Task_CoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Task_CoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Task_CoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Task* Arena::CreateMaybeMessage< ::dra::Task >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Task >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Tasks_TaskMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Tasks_TaskMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Tasks_TaskMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Tasks* Arena::CreateMaybeMessage< ::dra::Tasks >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Tasks >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Time* Arena::CreateMaybeMessage< ::dra::Time >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Time >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Coverage_CoverageEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Coverage_CoverageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Coverage_CoverageEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Coverage* Arena::CreateMaybeMessage< ::dra::Coverage >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Coverage >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Conditions* Arena::CreateMaybeMessage< ::dra::Conditions >(Arena* arena) {
  return Arena::CreateInternal< ::dra::Conditions >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::WriteAddresses* Arena::CreateMaybeMessage< ::dra::WriteAddresses >(Arena* arena) {
  return Arena::CreateInternal< ::dra::WriteAddresses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
