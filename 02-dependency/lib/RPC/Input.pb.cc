// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Input.proto

#include "Input.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace dra {
constexpr Call_AddressEntry_DoNotUse::Call_AddressEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Call_AddressEntry_DoNotUseDefaultTypeInternal {
  constexpr Call_AddressEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Call_AddressEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Call_AddressEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Call_AddressEntry_DoNotUseDefaultTypeInternal _Call_AddressEntry_DoNotUse_default_instance_;
constexpr Call::Call(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , idx_(0u){}
struct CallDefaultTypeInternal {
  constexpr CallDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CallDefaultTypeInternal() {}
  union {
    Call _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CallDefaultTypeInternal _Call_default_instance_;
constexpr Input_CallEntry_DoNotUse::Input_CallEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Input_CallEntry_DoNotUseDefaultTypeInternal {
  constexpr Input_CallEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Input_CallEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Input_CallEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Input_CallEntry_DoNotUseDefaultTypeInternal _Input_CallEntry_DoNotUse_default_instance_;
constexpr Input_UncoveredAddressEntry_DoNotUse::Input_UncoveredAddressEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Input_UncoveredAddressEntry_DoNotUseDefaultTypeInternal {
  constexpr Input_UncoveredAddressEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Input_UncoveredAddressEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Input_UncoveredAddressEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Input_UncoveredAddressEntry_DoNotUseDefaultTypeInternal _Input_UncoveredAddressEntry_DoNotUse_default_instance_;
constexpr Input_WriteAddressEntry_DoNotUse::Input_WriteAddressEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Input_WriteAddressEntry_DoNotUseDefaultTypeInternal {
  constexpr Input_WriteAddressEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Input_WriteAddressEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Input_WriteAddressEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Input_WriteAddressEntry_DoNotUseDefaultTypeInternal _Input_WriteAddressEntry_DoNotUse_default_instance_;
constexpr Input::Input(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : call_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , paths_()
  , uncovered_address_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , write_address_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , sig_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , program_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , program_before_mini_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stable_(0u)
  , number_conditions_(0u)
  , number_conditions_dependency_(0u)
  , stat_(0)
{}
struct InputDefaultTypeInternal {
  constexpr InputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InputDefaultTypeInternal() {}
  union {
    Input _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InputDefaultTypeInternal _Input_default_instance_;
constexpr Inputs::Inputs(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : input_(){}
struct InputsDefaultTypeInternal {
  constexpr InputsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InputsDefaultTypeInternal() {}
  union {
    Inputs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InputsDefaultTypeInternal _Inputs_default_instance_;
constexpr Path::Path(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_()
  , _address_cached_byte_size_(0){}
struct PathDefaultTypeInternal {
  constexpr PathDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PathDefaultTypeInternal() {}
  union {
    Path _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PathDefaultTypeInternal _Path_default_instance_;
constexpr Paths_PathEntry_DoNotUse::Paths_PathEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Paths_PathEntry_DoNotUseDefaultTypeInternal {
  constexpr Paths_PathEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Paths_PathEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Paths_PathEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Paths_PathEntry_DoNotUseDefaultTypeInternal _Paths_PathEntry_DoNotUse_default_instance_;
constexpr Paths::Paths(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct PathsDefaultTypeInternal {
  constexpr PathsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PathsDefaultTypeInternal() {}
  union {
    Paths _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PathsDefaultTypeInternal _Paths_default_instance_;
constexpr UnstableInput_AddressEntry_DoNotUse::UnstableInput_AddressEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct UnstableInput_AddressEntry_DoNotUseDefaultTypeInternal {
  constexpr UnstableInput_AddressEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnstableInput_AddressEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UnstableInput_AddressEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnstableInput_AddressEntry_DoNotUseDefaultTypeInternal _UnstableInput_AddressEntry_DoNotUse_default_instance_;
constexpr UnstableInput::UnstableInput(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : unstable_path_()
  , address_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , sig_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , program_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnstableInputDefaultTypeInternal {
  constexpr UnstableInputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnstableInputDefaultTypeInternal() {}
  union {
    UnstableInput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnstableInputDefaultTypeInternal _UnstableInput_default_instance_;
constexpr UnstableInputs_UnstableInputEntry_DoNotUse::UnstableInputs_UnstableInputEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct UnstableInputs_UnstableInputEntry_DoNotUseDefaultTypeInternal {
  constexpr UnstableInputs_UnstableInputEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnstableInputs_UnstableInputEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UnstableInputs_UnstableInputEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnstableInputs_UnstableInputEntry_DoNotUseDefaultTypeInternal _UnstableInputs_UnstableInputEntry_DoNotUse_default_instance_;
constexpr UnstableInputs::UnstableInputs(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : unstable_input_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct UnstableInputsDefaultTypeInternal {
  constexpr UnstableInputsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnstableInputsDefaultTypeInternal() {}
  union {
    UnstableInputs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnstableInputsDefaultTypeInternal _UnstableInputs_default_instance_;
}  // namespace dra
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Input_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Input_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Input_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Input_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Call_AddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Call, idx_),
  PROTOBUF_FIELD_OFFSET(::dra::Call, address_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_CallEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_UncoveredAddressEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Input_WriteAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Input, sig_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, program_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, call_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, stable_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, paths_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, number_conditions_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, number_conditions_dependency_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, stat_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, uncovered_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, write_address_),
  PROTOBUF_FIELD_OFFSET(::dra::Input, program_before_mini_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Inputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Inputs, input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Path, address_),
  PROTOBUF_FIELD_OFFSET(::dra::Paths_PathEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::Paths_PathEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Paths_PathEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::Paths_PathEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::Paths, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::Paths, path_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput_AddressEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput_AddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput_AddressEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput_AddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, sig_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, program_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, unstable_path_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInput, address_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInputs_UnstableInputEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInputs_UnstableInputEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInputs_UnstableInputEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInputs_UnstableInputEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dra::UnstableInputs, unstable_input_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::dra::Call_AddressEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::dra::Call)},
  { 18, 26, -1, sizeof(::dra::Input_CallEntry_DoNotUse)},
  { 28, 36, -1, sizeof(::dra::Input_UncoveredAddressEntry_DoNotUse)},
  { 38, 46, -1, sizeof(::dra::Input_WriteAddressEntry_DoNotUse)},
  { 48, -1, -1, sizeof(::dra::Input)},
  { 65, -1, -1, sizeof(::dra::Inputs)},
  { 72, -1, -1, sizeof(::dra::Path)},
  { 79, 87, -1, sizeof(::dra::Paths_PathEntry_DoNotUse)},
  { 89, -1, -1, sizeof(::dra::Paths)},
  { 96, 104, -1, sizeof(::dra::UnstableInput_AddressEntry_DoNotUse)},
  { 106, -1, -1, sizeof(::dra::UnstableInput)},
  { 116, 124, -1, sizeof(::dra::UnstableInputs_UnstableInputEntry_DoNotUse)},
  { 126, -1, -1, sizeof(::dra::UnstableInputs)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Call_AddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Call_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Input_CallEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Input_UncoveredAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Input_WriteAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Input_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Inputs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Path_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Paths_PathEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_Paths_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_UnstableInput_AddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_UnstableInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_UnstableInputs_UnstableInputEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dra::_UnstableInputs_default_instance_),
};

const char descriptor_table_protodef_Input_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013Input.proto\022\003dra\"l\n\004Call\022\013\n\003idx\030\001 \001(\r\022"
  "\'\n\007address\030\002 \003(\0132\026.dra.Call.AddressEntry"
  "\032.\n\014AddressEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002"
  " \001(\r:\0028\001\"\212\004\n\005Input\022\013\n\003sig\030\013 \001(\t\022\017\n\007progr"
  "am\030\014 \001(\014\022\"\n\004call\030\r \003(\0132\024.dra.Input.CallE"
  "ntry\022\016\n\006stable\030\016 \001(\r\022\031\n\005paths\030\020 \003(\0132\n.dr"
  "a.Paths\022\031\n\021number_conditions\030\021 \001(\r\022$\n\034nu"
  "mber_conditions_dependency\030\022 \001(\r\022\036\n\004stat"
  "\030\025 \001(\0162\020.dra.FuzzingStat\022;\n\021uncovered_ad"
  "dress\030\026 \003(\0132 .dra.Input.UncoveredAddress"
  "Entry\0223\n\rwrite_address\030\031 \003(\0132\034.dra.Input"
  ".WriteAddressEntry\022\033\n\023program_before_min"
  "i\030\036 \001(\014\0326\n\tCallEntry\022\013\n\003key\030\001 \001(\r\022\030\n\005val"
  "ue\030\002 \001(\0132\t.dra.Call:\0028\001\0327\n\025UncoveredAddr"
  "essEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001"
  "\0323\n\021WriteAddressEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005va"
  "lue\030\002 \001(\r:\0028\001\"#\n\006Inputs\022\031\n\005input\030\001 \003(\0132\n"
  ".dra.Input\"\027\n\004Path\022\017\n\007address\030\001 \003(\r\"c\n\005P"
  "aths\022\"\n\004path\030\001 \003(\0132\024.dra.Paths.PathEntry"
  "\0326\n\tPathEntry\022\013\n\003key\030\001 \001(\r\022\030\n\005value\030\002 \001("
  "\0132\t.dra.Path:\0028\001\"\262\001\n\rUnstableInput\022\013\n\003si"
  "g\030\001 \001(\t\022\017\n\007program\030\002 \001(\014\022!\n\runstable_pat"
  "h\030\014 \003(\0132\n.dra.Paths\0220\n\007address\030\r \003(\0132\037.d"
  "ra.UnstableInput.AddressEntry\032.\n\014Address"
  "Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\232\001"
  "\n\016UnstableInputs\022>\n\016unstable_input\030\001 \003(\013"
  "2&.dra.UnstableInputs.UnstableInputEntry"
  "\032H\n\022UnstableInputEntry\022\013\n\003key\030\001 \001(\t\022!\n\005v"
  "alue\030\002 \001(\0132\022.dra.UnstableInput:\0028\001*\323\001\n\013F"
  "uzzingStat\022\020\n\014StatGenerate\020\000\022\014\n\010StatFuzz"
  "\020\001\022\021\n\rStatCandidate\020\002\022\016\n\nStatTriage\020\003\022\020\n"
  "\014StatMinimize\020\004\022\r\n\tStatSmash\020\005\022\014\n\010StatHi"
  "nt\020\006\022\014\n\010StatSeed\020\007\022\022\n\016StatDependency\020\010\022\026"
  "\n\022StatDependencyBoot\020\t\022\030\n\013StatDefault\020\377\377"
  "\377\377\377\377\377\377\377\001B\007Z\005.;drab\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Input_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Input_2eproto = {
  false, false, 1385, descriptor_table_protodef_Input_2eproto, "Input.proto", 
  &descriptor_table_Input_2eproto_once, nullptr, 0, 14,
  schemas, file_default_instances, TableStruct_Input_2eproto::offsets,
  file_level_metadata_Input_2eproto, file_level_enum_descriptors_Input_2eproto, file_level_service_descriptors_Input_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Input_2eproto_getter() {
  return &descriptor_table_Input_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Input_2eproto(&descriptor_table_Input_2eproto);
namespace dra {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FuzzingStat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Input_2eproto);
  return file_level_enum_descriptors_Input_2eproto[0];
}
bool FuzzingStat_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Call_AddressEntry_DoNotUse::Call_AddressEntry_DoNotUse() {}
Call_AddressEntry_DoNotUse::Call_AddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Call_AddressEntry_DoNotUse::MergeFrom(const Call_AddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Call_AddressEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[0]);
}

// ===================================================================

class Call::_Internal {
 public:
};

Call::Call(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  address_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.Call)
}
Call::Call(const Call& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.MergeFrom(from.address_);
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:dra.Call)
}

void Call::SharedCtor() {
idx_ = 0u;
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:dra.Call)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Call::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Call::ArenaDtor(void* object) {
  Call* _this = reinterpret_cast< Call* >(object);
  (void)_this;
  _this->address_. ~MapField();
}
inline void Call::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Call::ArenaDtor);
  }
}
void Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Call)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  idx_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Call::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<uint32, uint32> address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&address_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Call::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Call)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 idx = 1;
  if (this->_internal_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_idx(), target);
  }

  // map<uint32, uint32> address = 2;
  if (!this->_internal_address().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_address().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_address().begin();
          it != this->_internal_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Call_AddressEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_address().begin();
          it != this->_internal_address().end(); ++it) {
        target = Call_AddressEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Call)
  return target;
}

size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Call)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, uint32> address = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_address_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
      it = this->_internal_address().begin();
      it != this->_internal_address().end(); ++it) {
    total_size += Call_AddressEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint32 idx = 1;
  if (this->_internal_idx() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Call::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Call::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Call::GetClassData() const { return &_class_data_; }

void Call::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Call *>(to)->MergeFrom(
      static_cast<const Call &>(from));
}


void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Call)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  if (from._internal_idx() != 0) {
    _internal_set_idx(from._internal_idx());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  return true;
}

void Call::InternalSwap(Call* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  address_.InternalSwap(&other->address_);
  swap(idx_, other->idx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Call::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[1]);
}

// ===================================================================

Input_CallEntry_DoNotUse::Input_CallEntry_DoNotUse() {}
Input_CallEntry_DoNotUse::Input_CallEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Input_CallEntry_DoNotUse::MergeFrom(const Input_CallEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Input_CallEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[2]);
}

// ===================================================================

Input_UncoveredAddressEntry_DoNotUse::Input_UncoveredAddressEntry_DoNotUse() {}
Input_UncoveredAddressEntry_DoNotUse::Input_UncoveredAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Input_UncoveredAddressEntry_DoNotUse::MergeFrom(const Input_UncoveredAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Input_UncoveredAddressEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[3]);
}

// ===================================================================

Input_WriteAddressEntry_DoNotUse::Input_WriteAddressEntry_DoNotUse() {}
Input_WriteAddressEntry_DoNotUse::Input_WriteAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Input_WriteAddressEntry_DoNotUse::MergeFrom(const Input_WriteAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Input_WriteAddressEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[4]);
}

// ===================================================================

class Input::_Internal {
 public:
};

Input::Input(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  call_(arena),
  paths_(arena),
  uncovered_address_(arena),
  write_address_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.Input)
}
Input::Input(const Input& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      paths_(from.paths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  call_.MergeFrom(from.call_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  write_address_.MergeFrom(from.write_address_);
  sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sig().empty()) {
    sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sig(), 
      GetArenaForAllocation());
  }
  program_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_program().empty()) {
    program_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_program(), 
      GetArenaForAllocation());
  }
  program_before_mini_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_program_before_mini().empty()) {
    program_before_mini_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_program_before_mini(), 
      GetArenaForAllocation());
  }
  ::memcpy(&stable_, &from.stable_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_) -
    reinterpret_cast<char*>(&stable_)) + sizeof(stat_));
  // @@protoc_insertion_point(copy_constructor:dra.Input)
}

void Input::SharedCtor() {
sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
program_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
program_before_mini_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&stable_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&stat_) -
    reinterpret_cast<char*>(&stable_)) + sizeof(stat_));
}

Input::~Input() {
  // @@protoc_insertion_point(destructor:dra.Input)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Input::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sig_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  program_before_mini_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Input::ArenaDtor(void* object) {
  Input* _this = reinterpret_cast< Input* >(object);
  (void)_this;
  _this->call_. ~MapField();
  _this->uncovered_address_. ~MapField();
  _this->write_address_. ~MapField();
}
inline void Input::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Input::ArenaDtor);
  }
}
void Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Input::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Input)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  call_.Clear();
  paths_.Clear();
  uncovered_address_.Clear();
  write_address_.Clear();
  sig_.ClearToEmpty();
  program_.ClearToEmpty();
  program_before_mini_.ClearToEmpty();
  ::memset(&stable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_) -
      reinterpret_cast<char*>(&stable_)) + sizeof(stat_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Input::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sig = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_sig();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dra.Input.sig"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes program = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_program();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<uint32, .dra.Call> call = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&call_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 stable = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          stable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .dra.Paths paths = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_paths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 number_conditions = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          number_conditions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 number_conditions_dependency = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          number_conditions_dependency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dra.FuzzingStat stat = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stat(static_cast<::dra::FuzzingStat>(val));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, uint32> uncovered_address = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&uncovered_address_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, uint32> write_address = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&write_address_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes program_before_mini = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_program_before_mini();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Input::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Input)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sig = 11;
  if (!this->_internal_sig().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sig().data(), static_cast<int>(this->_internal_sig().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dra.Input.sig");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_sig(), target);
  }

  // bytes program = 12;
  if (!this->_internal_program().empty()) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_program(), target);
  }

  // map<uint32, .dra.Call> call = 13;
  if (!this->_internal_call().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Call >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_call().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_call().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Call >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Call >::const_iterator
          it = this->_internal_call().begin();
          it != this->_internal_call().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Input_CallEntry_DoNotUse::Funcs::InternalSerialize(13, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Call >::const_iterator
          it = this->_internal_call().begin();
          it != this->_internal_call().end(); ++it) {
        target = Input_CallEntry_DoNotUse::Funcs::InternalSerialize(13, it->first, it->second, target, stream);
      }
    }
  }

  // uint32 stable = 14;
  if (this->_internal_stable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_stable(), target);
  }

  // repeated .dra.Paths paths = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_paths_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, this->_internal_paths(i), target, stream);
  }

  // uint32 number_conditions = 17;
  if (this->_internal_number_conditions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_number_conditions(), target);
  }

  // uint32 number_conditions_dependency = 18;
  if (this->_internal_number_conditions_dependency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_number_conditions_dependency(), target);
  }

  // .dra.FuzzingStat stat = 21;
  if (this->_internal_stat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      21, this->_internal_stat(), target);
  }

  // map<uint32, uint32> uncovered_address = 22;
  if (!this->_internal_uncovered_address().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_uncovered_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_uncovered_address().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_uncovered_address().begin();
          it != this->_internal_uncovered_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Input_UncoveredAddressEntry_DoNotUse::Funcs::InternalSerialize(22, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_uncovered_address().begin();
          it != this->_internal_uncovered_address().end(); ++it) {
        target = Input_UncoveredAddressEntry_DoNotUse::Funcs::InternalSerialize(22, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, uint32> write_address = 25;
  if (!this->_internal_write_address().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_write_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_write_address().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_write_address().begin();
          it != this->_internal_write_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Input_WriteAddressEntry_DoNotUse::Funcs::InternalSerialize(25, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_write_address().begin();
          it != this->_internal_write_address().end(); ++it) {
        target = Input_WriteAddressEntry_DoNotUse::Funcs::InternalSerialize(25, it->first, it->second, target, stream);
      }
    }
  }

  // bytes program_before_mini = 30;
  if (!this->_internal_program_before_mini().empty()) {
    target = stream->WriteBytesMaybeAliased(
        30, this->_internal_program_before_mini(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Input)
  return target;
}

size_t Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Input)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .dra.Call> call = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_call_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Call >::const_iterator
      it = this->_internal_call().begin();
      it != this->_internal_call().end(); ++it) {
    total_size += Input_CallEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .dra.Paths paths = 16;
  total_size += 2UL * this->_internal_paths_size();
  for (const auto& msg : this->paths_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<uint32, uint32> uncovered_address = 22;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_uncovered_address_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
      it = this->_internal_uncovered_address().begin();
      it != this->_internal_uncovered_address().end(); ++it) {
    total_size += Input_UncoveredAddressEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, uint32> write_address = 25;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_write_address_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
      it = this->_internal_write_address().begin();
      it != this->_internal_write_address().end(); ++it) {
    total_size += Input_WriteAddressEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string sig = 11;
  if (!this->_internal_sig().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sig());
  }

  // bytes program = 12;
  if (!this->_internal_program().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_program());
  }

  // bytes program_before_mini = 30;
  if (!this->_internal_program_before_mini().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_program_before_mini());
  }

  // uint32 stable = 14;
  if (this->_internal_stable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stable());
  }

  // uint32 number_conditions = 17;
  if (this->_internal_number_conditions() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_number_conditions());
  }

  // uint32 number_conditions_dependency = 18;
  if (this->_internal_number_conditions_dependency() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_number_conditions_dependency());
  }

  // .dra.FuzzingStat stat = 21;
  if (this->_internal_stat() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Input::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Input::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Input::GetClassData() const { return &_class_data_; }

void Input::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Input *>(to)->MergeFrom(
      static_cast<const Input &>(from));
}


void Input::MergeFrom(const Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Input)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  call_.MergeFrom(from.call_);
  paths_.MergeFrom(from.paths_);
  uncovered_address_.MergeFrom(from.uncovered_address_);
  write_address_.MergeFrom(from.write_address_);
  if (!from._internal_sig().empty()) {
    _internal_set_sig(from._internal_sig());
  }
  if (!from._internal_program().empty()) {
    _internal_set_program(from._internal_program());
  }
  if (!from._internal_program_before_mini().empty()) {
    _internal_set_program_before_mini(from._internal_program_before_mini());
  }
  if (from._internal_stable() != 0) {
    _internal_set_stable(from._internal_stable());
  }
  if (from._internal_number_conditions() != 0) {
    _internal_set_number_conditions(from._internal_number_conditions());
  }
  if (from._internal_number_conditions_dependency() != 0) {
    _internal_set_number_conditions_dependency(from._internal_number_conditions_dependency());
  }
  if (from._internal_stat() != 0) {
    _internal_set_stat(from._internal_stat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Input::CopyFrom(const Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Input::IsInitialized() const {
  return true;
}

void Input::InternalSwap(Input* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  call_.InternalSwap(&other->call_);
  paths_.InternalSwap(&other->paths_);
  uncovered_address_.InternalSwap(&other->uncovered_address_);
  write_address_.InternalSwap(&other->write_address_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sig_, lhs_arena,
      &other->sig_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &program_, lhs_arena,
      &other->program_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &program_before_mini_, lhs_arena,
      &other->program_before_mini_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Input, stat_)
      + sizeof(Input::stat_)
      - PROTOBUF_FIELD_OFFSET(Input, stable_)>(
          reinterpret_cast<char*>(&stable_),
          reinterpret_cast<char*>(&other->stable_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Input::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[5]);
}

// ===================================================================

class Inputs::_Internal {
 public:
};

Inputs::Inputs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  input_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.Inputs)
}
Inputs::Inputs(const Inputs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      input_(from.input_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dra.Inputs)
}

void Inputs::SharedCtor() {
}

Inputs::~Inputs() {
  // @@protoc_insertion_point(destructor:dra.Inputs)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Inputs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Inputs::ArenaDtor(void* object) {
  Inputs* _this = reinterpret_cast< Inputs* >(object);
  (void)_this;
}
void Inputs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Inputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Inputs::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Inputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Inputs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dra.Input input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_input(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Inputs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Inputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dra.Input input = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_input_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_input(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Inputs)
  return target;
}

size_t Inputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Inputs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dra.Input input = 1;
  total_size += 1UL * this->_internal_input_size();
  for (const auto& msg : this->input_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Inputs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Inputs::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Inputs::GetClassData() const { return &_class_data_; }

void Inputs::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Inputs *>(to)->MergeFrom(
      static_cast<const Inputs &>(from));
}


void Inputs::MergeFrom(const Inputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Inputs)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Inputs::CopyFrom(const Inputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Inputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inputs::IsInitialized() const {
  return true;
}

void Inputs::InternalSwap(Inputs* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  input_.InternalSwap(&other->input_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Inputs::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[6]);
}

// ===================================================================

class Path::_Internal {
 public:
};

Path::Path(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  address_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.Path)
}
Path::Path(const Path& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      address_(from.address_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dra.Path)
}

void Path::SharedCtor() {
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:dra.Path)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Path::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Path::ArenaDtor(void* object) {
  Path* _this = reinterpret_cast< Path* >(object);
  (void)_this;
}
void Path::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Path::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Path)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Path::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_address(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_address(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Path::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Path)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address = 1;
  {
    int byte_size = _address_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_address(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Path)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->address_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _address_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Path::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Path::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Path::GetClassData() const { return &_class_data_; }

void Path::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Path *>(to)->MergeFrom(
      static_cast<const Path &>(from));
}


void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Path)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::InternalSwap(Path* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  address_.InternalSwap(&other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Path::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[7]);
}

// ===================================================================

Paths_PathEntry_DoNotUse::Paths_PathEntry_DoNotUse() {}
Paths_PathEntry_DoNotUse::Paths_PathEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Paths_PathEntry_DoNotUse::MergeFrom(const Paths_PathEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Paths_PathEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[8]);
}

// ===================================================================

class Paths::_Internal {
 public:
};

Paths::Paths(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  path_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.Paths)
}
Paths::Paths(const Paths& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.MergeFrom(from.path_);
  // @@protoc_insertion_point(copy_constructor:dra.Paths)
}

void Paths::SharedCtor() {
}

Paths::~Paths() {
  // @@protoc_insertion_point(destructor:dra.Paths)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Paths::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Paths::ArenaDtor(void* object) {
  Paths* _this = reinterpret_cast< Paths* >(object);
  (void)_this;
  _this->path_. ~MapField();
}
inline void Paths::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Paths::ArenaDtor);
  }
}
void Paths::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Paths::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.Paths)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Paths::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<uint32, .dra.Path> path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&path_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Paths::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.Paths)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .dra.Path> path = 1;
  if (!this->_internal_path().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Path >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_path().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_path().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Path >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Path >::const_iterator
          it = this->_internal_path().begin();
          it != this->_internal_path().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Paths_PathEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Path >::const_iterator
          it = this->_internal_path().begin();
          it != this->_internal_path().end(); ++it) {
        target = Paths_PathEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.Paths)
  return target;
}

size_t Paths::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.Paths)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .dra.Path> path = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_path_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::Path >::const_iterator
      it = this->_internal_path().begin();
      it != this->_internal_path().end(); ++it) {
    total_size += Paths_PathEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Paths::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Paths::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Paths::GetClassData() const { return &_class_data_; }

void Paths::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Paths *>(to)->MergeFrom(
      static_cast<const Paths &>(from));
}


void Paths::MergeFrom(const Paths& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.Paths)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Paths::CopyFrom(const Paths& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.Paths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Paths::IsInitialized() const {
  return true;
}

void Paths::InternalSwap(Paths* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  path_.InternalSwap(&other->path_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Paths::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[9]);
}

// ===================================================================

UnstableInput_AddressEntry_DoNotUse::UnstableInput_AddressEntry_DoNotUse() {}
UnstableInput_AddressEntry_DoNotUse::UnstableInput_AddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void UnstableInput_AddressEntry_DoNotUse::MergeFrom(const UnstableInput_AddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata UnstableInput_AddressEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[10]);
}

// ===================================================================

class UnstableInput::_Internal {
 public:
};

UnstableInput::UnstableInput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  unstable_path_(arena),
  address_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.UnstableInput)
}
UnstableInput::UnstableInput(const UnstableInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      unstable_path_(from.unstable_path_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.MergeFrom(from.address_);
  sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sig().empty()) {
    sig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sig(), 
      GetArenaForAllocation());
  }
  program_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_program().empty()) {
    program_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_program(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:dra.UnstableInput)
}

void UnstableInput::SharedCtor() {
sig_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
program_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnstableInput::~UnstableInput() {
  // @@protoc_insertion_point(destructor:dra.UnstableInput)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UnstableInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sig_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  program_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnstableInput::ArenaDtor(void* object) {
  UnstableInput* _this = reinterpret_cast< UnstableInput* >(object);
  (void)_this;
  _this->address_. ~MapField();
}
inline void UnstableInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &UnstableInput::ArenaDtor);
  }
}
void UnstableInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnstableInput::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.UnstableInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unstable_path_.Clear();
  address_.Clear();
  sig_.ClearToEmpty();
  program_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnstableInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sig = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sig();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dra.UnstableInput.sig"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes program = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_program();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .dra.Paths unstable_path = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unstable_path(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<uint32, uint32> address = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&address_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnstableInput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.UnstableInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sig = 1;
  if (!this->_internal_sig().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sig().data(), static_cast<int>(this->_internal_sig().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dra.UnstableInput.sig");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sig(), target);
  }

  // bytes program = 2;
  if (!this->_internal_program().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_program(), target);
  }

  // repeated .dra.Paths unstable_path = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_unstable_path_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_unstable_path(i), target, stream);
  }

  // map<uint32, uint32> address = 13;
  if (!this->_internal_address().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_address().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_address().begin();
          it != this->_internal_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = UnstableInput_AddressEntry_DoNotUse::Funcs::InternalSerialize(13, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->_internal_address().begin();
          it != this->_internal_address().end(); ++it) {
        target = UnstableInput_AddressEntry_DoNotUse::Funcs::InternalSerialize(13, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.UnstableInput)
  return target;
}

size_t UnstableInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.UnstableInput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dra.Paths unstable_path = 12;
  total_size += 1UL * this->_internal_unstable_path_size();
  for (const auto& msg : this->unstable_path_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<uint32, uint32> address = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_address_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
      it = this->_internal_address().begin();
      it != this->_internal_address().end(); ++it) {
    total_size += UnstableInput_AddressEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string sig = 1;
  if (!this->_internal_sig().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sig());
  }

  // bytes program = 2;
  if (!this->_internal_program().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_program());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnstableInput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnstableInput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnstableInput::GetClassData() const { return &_class_data_; }

void UnstableInput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnstableInput *>(to)->MergeFrom(
      static_cast<const UnstableInput &>(from));
}


void UnstableInput::MergeFrom(const UnstableInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.UnstableInput)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unstable_path_.MergeFrom(from.unstable_path_);
  address_.MergeFrom(from.address_);
  if (!from._internal_sig().empty()) {
    _internal_set_sig(from._internal_sig());
  }
  if (!from._internal_program().empty()) {
    _internal_set_program(from._internal_program());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnstableInput::CopyFrom(const UnstableInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.UnstableInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnstableInput::IsInitialized() const {
  return true;
}

void UnstableInput::InternalSwap(UnstableInput* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  unstable_path_.InternalSwap(&other->unstable_path_);
  address_.InternalSwap(&other->address_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sig_, lhs_arena,
      &other->sig_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &program_, lhs_arena,
      &other->program_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnstableInput::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[11]);
}

// ===================================================================

UnstableInputs_UnstableInputEntry_DoNotUse::UnstableInputs_UnstableInputEntry_DoNotUse() {}
UnstableInputs_UnstableInputEntry_DoNotUse::UnstableInputs_UnstableInputEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void UnstableInputs_UnstableInputEntry_DoNotUse::MergeFrom(const UnstableInputs_UnstableInputEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata UnstableInputs_UnstableInputEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[12]);
}

// ===================================================================

class UnstableInputs::_Internal {
 public:
};

UnstableInputs::UnstableInputs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  unstable_input_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:dra.UnstableInputs)
}
UnstableInputs::UnstableInputs(const UnstableInputs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unstable_input_.MergeFrom(from.unstable_input_);
  // @@protoc_insertion_point(copy_constructor:dra.UnstableInputs)
}

void UnstableInputs::SharedCtor() {
}

UnstableInputs::~UnstableInputs() {
  // @@protoc_insertion_point(destructor:dra.UnstableInputs)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UnstableInputs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnstableInputs::ArenaDtor(void* object) {
  UnstableInputs* _this = reinterpret_cast< UnstableInputs* >(object);
  (void)_this;
  _this->unstable_input_. ~MapField();
}
inline void UnstableInputs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &UnstableInputs::ArenaDtor);
  }
}
void UnstableInputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnstableInputs::Clear() {
// @@protoc_insertion_point(message_clear_start:dra.UnstableInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unstable_input_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnstableInputs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .dra.UnstableInput> unstable_input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&unstable_input_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnstableInputs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dra.UnstableInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dra.UnstableInput> unstable_input = 1;
  if (!this->_internal_unstable_input().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::UnstableInput >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dra.UnstableInputs.UnstableInputEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_unstable_input().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_unstable_input().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::UnstableInput >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::UnstableInput >::const_iterator
          it = this->_internal_unstable_input().begin();
          it != this->_internal_unstable_input().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = UnstableInputs_UnstableInputEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::UnstableInput >::const_iterator
          it = this->_internal_unstable_input().begin();
          it != this->_internal_unstable_input().end(); ++it) {
        target = UnstableInputs_UnstableInputEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dra.UnstableInputs)
  return target;
}

size_t UnstableInputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dra.UnstableInputs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .dra.UnstableInput> unstable_input = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_unstable_input_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::UnstableInput >::const_iterator
      it = this->_internal_unstable_input().begin();
      it != this->_internal_unstable_input().end(); ++it) {
    total_size += UnstableInputs_UnstableInputEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnstableInputs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnstableInputs::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnstableInputs::GetClassData() const { return &_class_data_; }

void UnstableInputs::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnstableInputs *>(to)->MergeFrom(
      static_cast<const UnstableInputs &>(from));
}


void UnstableInputs::MergeFrom(const UnstableInputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dra.UnstableInputs)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unstable_input_.MergeFrom(from.unstable_input_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnstableInputs::CopyFrom(const UnstableInputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dra.UnstableInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnstableInputs::IsInitialized() const {
  return true;
}

void UnstableInputs::InternalSwap(UnstableInputs* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  unstable_input_.InternalSwap(&other->unstable_input_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnstableInputs::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Input_2eproto_getter, &descriptor_table_Input_2eproto_once,
      file_level_metadata_Input_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace dra
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dra::Call_AddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Call_AddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Call_AddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Call* Arena::CreateMaybeMessage< ::dra::Call >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Call >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input_CallEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Input_CallEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Input_CallEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Input_UncoveredAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Input_UncoveredAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Input_WriteAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Input_WriteAddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Input* Arena::CreateMaybeMessage< ::dra::Input >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Input >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Inputs* Arena::CreateMaybeMessage< ::dra::Inputs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Inputs >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Path* Arena::CreateMaybeMessage< ::dra::Path >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Path >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Paths_PathEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::Paths_PathEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Paths_PathEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::Paths* Arena::CreateMaybeMessage< ::dra::Paths >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::Paths >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UnstableInput_AddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::UnstableInput_AddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::UnstableInput_AddressEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UnstableInput* Arena::CreateMaybeMessage< ::dra::UnstableInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::UnstableInput >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UnstableInputs_UnstableInputEntry_DoNotUse* Arena::CreateMaybeMessage< ::dra::UnstableInputs_UnstableInputEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::UnstableInputs_UnstableInputEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dra::UnstableInputs* Arena::CreateMaybeMessage< ::dra::UnstableInputs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dra::UnstableInputs >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
