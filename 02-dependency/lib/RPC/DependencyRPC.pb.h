// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DependencyRPC.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_DependencyRPC_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_DependencyRPC_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "Base.pb.h"
#include "Task.pb.h"
#include "Input.pb.h"
#include "Statistic.pb.h"
#include "Dependency.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_DependencyRPC_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DependencyRPC_2eproto;
namespace dra {
class Corpus;
class CorpusDefaultTypeInternal;
extern CorpusDefaultTypeInternal _Corpus_default_instance_;
class Corpus_CoveredAddressEntry_DoNotUse;
class Corpus_CoveredAddressEntry_DoNotUseDefaultTypeInternal;
extern Corpus_CoveredAddressEntry_DoNotUseDefaultTypeInternal _Corpus_CoveredAddressEntry_DoNotUse_default_instance_;
class Corpus_FileOperationsEntry_DoNotUse;
class Corpus_FileOperationsEntry_DoNotUseDefaultTypeInternal;
extern Corpus_FileOperationsEntry_DoNotUseDefaultTypeInternal _Corpus_FileOperationsEntry_DoNotUse_default_instance_;
class Corpus_InputEntry_DoNotUse;
class Corpus_InputEntry_DoNotUseDefaultTypeInternal;
extern Corpus_InputEntry_DoNotUseDefaultTypeInternal _Corpus_InputEntry_DoNotUse_default_instance_;
class Corpus_NewInputEntry_DoNotUse;
class Corpus_NewInputEntry_DoNotUseDefaultTypeInternal;
extern Corpus_NewInputEntry_DoNotUseDefaultTypeInternal _Corpus_NewInputEntry_DoNotUse_default_instance_;
class Corpus_UncoveredAddressEntry_DoNotUse;
class Corpus_UncoveredAddressEntry_DoNotUseDefaultTypeInternal;
extern Corpus_UncoveredAddressEntry_DoNotUseDefaultTypeInternal _Corpus_UncoveredAddressEntry_DoNotUse_default_instance_;
class Corpus_WriteAddressEntry_DoNotUse;
class Corpus_WriteAddressEntry_DoNotUseDefaultTypeInternal;
extern Corpus_WriteAddressEntry_DoNotUseDefaultTypeInternal _Corpus_WriteAddressEntry_DoNotUse_default_instance_;
}  // namespace dra
PROTOBUF_NAMESPACE_OPEN
template<> ::dra::Corpus* Arena::CreateMaybeMessage<::dra::Corpus>(Arena*);
template<> ::dra::Corpus_CoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::Corpus_CoveredAddressEntry_DoNotUse>(Arena*);
template<> ::dra::Corpus_FileOperationsEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::Corpus_FileOperationsEntry_DoNotUse>(Arena*);
template<> ::dra::Corpus_InputEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::Corpus_InputEntry_DoNotUse>(Arena*);
template<> ::dra::Corpus_NewInputEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::Corpus_NewInputEntry_DoNotUse>(Arena*);
template<> ::dra::Corpus_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::Corpus_UncoveredAddressEntry_DoNotUse>(Arena*);
template<> ::dra::Corpus_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::Corpus_WriteAddressEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dra {

// ===================================================================

class Corpus_InputEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_InputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_InputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Corpus_InputEntry_DoNotUse();
  Corpus_InputEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Corpus_InputEntry_DoNotUse& other);
  static const Corpus_InputEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Corpus_InputEntry_DoNotUse*>(&_Corpus_InputEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "dra.Corpus.InputEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class Corpus_UncoveredAddressEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_UncoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_UncoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Corpus_UncoveredAddressEntry_DoNotUse();
  Corpus_UncoveredAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Corpus_UncoveredAddressEntry_DoNotUse& other);
  static const Corpus_UncoveredAddressEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Corpus_UncoveredAddressEntry_DoNotUse*>(&_Corpus_UncoveredAddressEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class Corpus_CoveredAddressEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_CoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_CoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Corpus_CoveredAddressEntry_DoNotUse();
  Corpus_CoveredAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Corpus_CoveredAddressEntry_DoNotUse& other);
  static const Corpus_CoveredAddressEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Corpus_CoveredAddressEntry_DoNotUse*>(&_Corpus_CoveredAddressEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class Corpus_WriteAddressEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_WriteAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_WriteAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Corpus_WriteAddressEntry_DoNotUse();
  Corpus_WriteAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Corpus_WriteAddressEntry_DoNotUse& other);
  static const Corpus_WriteAddressEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Corpus_WriteAddressEntry_DoNotUse*>(&_Corpus_WriteAddressEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[3];
  }

  public:
};

// -------------------------------------------------------------------

class Corpus_FileOperationsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_FileOperationsEntry_DoNotUse, 
    std::string, ::dra::FileOperations,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_FileOperationsEntry_DoNotUse, 
    std::string, ::dra::FileOperations,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Corpus_FileOperationsEntry_DoNotUse();
  Corpus_FileOperationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Corpus_FileOperationsEntry_DoNotUse& other);
  static const Corpus_FileOperationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Corpus_FileOperationsEntry_DoNotUse*>(&_Corpus_FileOperationsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "dra.Corpus.FileOperationsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class Corpus_NewInputEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_NewInputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Corpus_NewInputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Corpus_NewInputEntry_DoNotUse();
  Corpus_NewInputEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Corpus_NewInputEntry_DoNotUse& other);
  static const Corpus_NewInputEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Corpus_NewInputEntry_DoNotUse*>(&_Corpus_NewInputEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "dra.Corpus.NewInputEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class Corpus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dra.Corpus) */ {
 public:
  Corpus();
  virtual ~Corpus();

  Corpus(const Corpus& from);
  Corpus(Corpus&& from) noexcept
    : Corpus() {
    *this = ::std::move(from);
  }

  inline Corpus& operator=(const Corpus& from) {
    CopyFrom(from);
    return *this;
  }
  inline Corpus& operator=(Corpus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Corpus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Corpus* internal_default_instance() {
    return reinterpret_cast<const Corpus*>(
               &_Corpus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Corpus& a, Corpus& b) {
    a.Swap(&b);
  }
  inline void Swap(Corpus* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Corpus* New() const final {
    return CreateMaybeMessage<Corpus>(nullptr);
  }

  Corpus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Corpus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Corpus& from);
  void MergeFrom(const Corpus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Corpus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dra.Corpus";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DependencyRPC_2eproto);
    return ::descriptor_table_DependencyRPC_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kInputFieldNumber = 1,
    kCoveredAddressFieldNumber = 2,
    kUncoveredAddressFieldNumber = 4,
    kWriteAddressFieldNumber = 5,
    kFileOperationsFieldNumber = 6,
    kNewInputFieldNumber = 11,
    kTasksFieldNumber = 7,
    kHighTaskFieldNumber = 8,
    kBootTaskFieldNumber = 9,
  };
  // map<string, .dra.Input> input = 1;
  int input_size() const;
  private:
  int _internal_input_size() const;
  public:
  void clear_input();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      _internal_input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      _internal_mutable_input();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      mutable_input();

  // map<uint32, .dra.UncoveredAddress> covered_address = 2;
  int covered_address_size() const;
  private:
  int _internal_covered_address_size() const;
  public:
  void clear_covered_address();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      _internal_covered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      _internal_mutable_covered_address();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      covered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      mutable_covered_address();

  // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
  int uncovered_address_size() const;
  private:
  int _internal_uncovered_address_size() const;
  public:
  void clear_uncovered_address();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      _internal_uncovered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      _internal_mutable_uncovered_address();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      uncovered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      mutable_uncovered_address();

  // map<uint32, .dra.WriteAddress> write_address = 5;
  int write_address_size() const;
  private:
  int _internal_write_address_size() const;
  public:
  void clear_write_address();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
      _internal_write_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
      _internal_mutable_write_address();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
      write_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
      mutable_write_address();

  // map<string, .dra.FileOperations> file_operations = 6;
  int file_operations_size() const;
  private:
  int _internal_file_operations_size() const;
  public:
  void clear_file_operations();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
      _internal_file_operations() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
      _internal_mutable_file_operations();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
      file_operations() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
      mutable_file_operations();

  // map<string, .dra.Input> new_input = 11;
  int new_input_size() const;
  private:
  int _internal_new_input_size() const;
  public:
  void clear_new_input();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      _internal_new_input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      _internal_mutable_new_input();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      new_input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      mutable_new_input();

  // .dra.Tasks tasks = 7;
  bool has_tasks() const;
  private:
  bool _internal_has_tasks() const;
  public:
  void clear_tasks();
  const ::dra::Tasks& tasks() const;
  ::dra::Tasks* release_tasks();
  ::dra::Tasks* mutable_tasks();
  void set_allocated_tasks(::dra::Tasks* tasks);
  private:
  const ::dra::Tasks& _internal_tasks() const;
  ::dra::Tasks* _internal_mutable_tasks();
  public:

  // .dra.Tasks high_task = 8;
  bool has_high_task() const;
  private:
  bool _internal_has_high_task() const;
  public:
  void clear_high_task();
  const ::dra::Tasks& high_task() const;
  ::dra::Tasks* release_high_task();
  ::dra::Tasks* mutable_high_task();
  void set_allocated_high_task(::dra::Tasks* high_task);
  private:
  const ::dra::Tasks& _internal_high_task() const;
  ::dra::Tasks* _internal_mutable_high_task();
  public:

  // .dra.Tasks boot_task = 9;
  bool has_boot_task() const;
  private:
  bool _internal_has_boot_task() const;
  public:
  void clear_boot_task();
  const ::dra::Tasks& boot_task() const;
  ::dra::Tasks* release_boot_task();
  ::dra::Tasks* mutable_boot_task();
  void set_allocated_boot_task(::dra::Tasks* boot_task);
  private:
  const ::dra::Tasks& _internal_boot_task() const;
  ::dra::Tasks* _internal_mutable_boot_task();
  public:

  // @@protoc_insertion_point(class_scope:dra.Corpus)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Corpus_InputEntry_DoNotUse,
      std::string, ::dra::Input,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > input_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Corpus_CoveredAddressEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > covered_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Corpus_UncoveredAddressEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > uncovered_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Corpus_WriteAddressEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > write_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Corpus_FileOperationsEntry_DoNotUse,
      std::string, ::dra::FileOperations,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > file_operations_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Corpus_NewInputEntry_DoNotUse,
      std::string, ::dra::Input,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > new_input_;
  ::dra::Tasks* tasks_;
  ::dra::Tasks* high_task_;
  ::dra::Tasks* boot_task_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_DependencyRPC_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Corpus

// map<string, .dra.Input> input = 1;
inline int Corpus::_internal_input_size() const {
  return input_.size();
}
inline int Corpus::input_size() const {
  return _internal_input_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
Corpus::_internal_input() const {
  return input_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
Corpus::input() const {
  // @@protoc_insertion_point(field_map:dra.Corpus.input)
  return _internal_input();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
Corpus::_internal_mutable_input() {
  return input_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
Corpus::mutable_input() {
  // @@protoc_insertion_point(field_mutable_map:dra.Corpus.input)
  return _internal_mutable_input();
}

// map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
inline int Corpus::_internal_uncovered_address_size() const {
  return uncovered_address_.size();
}
inline int Corpus::uncovered_address_size() const {
  return _internal_uncovered_address_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
Corpus::_internal_uncovered_address() const {
  return uncovered_address_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
Corpus::uncovered_address() const {
  // @@protoc_insertion_point(field_map:dra.Corpus.uncovered_address)
  return _internal_uncovered_address();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
Corpus::_internal_mutable_uncovered_address() {
  return uncovered_address_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
Corpus::mutable_uncovered_address() {
  // @@protoc_insertion_point(field_mutable_map:dra.Corpus.uncovered_address)
  return _internal_mutable_uncovered_address();
}

// map<uint32, .dra.UncoveredAddress> covered_address = 2;
inline int Corpus::_internal_covered_address_size() const {
  return covered_address_.size();
}
inline int Corpus::covered_address_size() const {
  return _internal_covered_address_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
Corpus::_internal_covered_address() const {
  return covered_address_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
Corpus::covered_address() const {
  // @@protoc_insertion_point(field_map:dra.Corpus.covered_address)
  return _internal_covered_address();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
Corpus::_internal_mutable_covered_address() {
  return covered_address_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
Corpus::mutable_covered_address() {
  // @@protoc_insertion_point(field_mutable_map:dra.Corpus.covered_address)
  return _internal_mutable_covered_address();
}

// map<uint32, .dra.WriteAddress> write_address = 5;
inline int Corpus::_internal_write_address_size() const {
  return write_address_.size();
}
inline int Corpus::write_address_size() const {
  return _internal_write_address_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
Corpus::_internal_write_address() const {
  return write_address_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
Corpus::write_address() const {
  // @@protoc_insertion_point(field_map:dra.Corpus.write_address)
  return _internal_write_address();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
Corpus::_internal_mutable_write_address() {
  return write_address_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
Corpus::mutable_write_address() {
  // @@protoc_insertion_point(field_mutable_map:dra.Corpus.write_address)
  return _internal_mutable_write_address();
}

// map<string, .dra.FileOperations> file_operations = 6;
inline int Corpus::_internal_file_operations_size() const {
  return file_operations_.size();
}
inline int Corpus::file_operations_size() const {
  return _internal_file_operations_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
Corpus::_internal_file_operations() const {
  return file_operations_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
Corpus::file_operations() const {
  // @@protoc_insertion_point(field_map:dra.Corpus.file_operations)
  return _internal_file_operations();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
Corpus::_internal_mutable_file_operations() {
  return file_operations_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
Corpus::mutable_file_operations() {
  // @@protoc_insertion_point(field_mutable_map:dra.Corpus.file_operations)
  return _internal_mutable_file_operations();
}

// .dra.Tasks tasks = 7;
inline bool Corpus::_internal_has_tasks() const {
  return this != internal_default_instance() && tasks_ != nullptr;
}
inline bool Corpus::has_tasks() const {
  return _internal_has_tasks();
}
inline const ::dra::Tasks& Corpus::_internal_tasks() const {
  const ::dra::Tasks* p = tasks_;
  return p != nullptr ? *p : *reinterpret_cast<const ::dra::Tasks*>(
      &::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& Corpus::tasks() const {
  // @@protoc_insertion_point(field_get:dra.Corpus.tasks)
  return _internal_tasks();
}
inline ::dra::Tasks* Corpus::release_tasks() {
  // @@protoc_insertion_point(field_release:dra.Corpus.tasks)
  
  ::dra::Tasks* temp = tasks_;
  tasks_ = nullptr;
  return temp;
}
inline ::dra::Tasks* Corpus::_internal_mutable_tasks() {
  
  if (tasks_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaNoVirtual());
    tasks_ = p;
  }
  return tasks_;
}
inline ::dra::Tasks* Corpus::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable:dra.Corpus.tasks)
  return _internal_mutable_tasks();
}
inline void Corpus::set_allocated_tasks(::dra::Tasks* tasks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tasks_);
  }
  if (tasks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tasks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tasks, submessage_arena);
    }
    
  } else {
    
  }
  tasks_ = tasks;
  // @@protoc_insertion_point(field_set_allocated:dra.Corpus.tasks)
}

// .dra.Tasks high_task = 8;
inline bool Corpus::_internal_has_high_task() const {
  return this != internal_default_instance() && high_task_ != nullptr;
}
inline bool Corpus::has_high_task() const {
  return _internal_has_high_task();
}
inline const ::dra::Tasks& Corpus::_internal_high_task() const {
  const ::dra::Tasks* p = high_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::dra::Tasks*>(
      &::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& Corpus::high_task() const {
  // @@protoc_insertion_point(field_get:dra.Corpus.high_task)
  return _internal_high_task();
}
inline ::dra::Tasks* Corpus::release_high_task() {
  // @@protoc_insertion_point(field_release:dra.Corpus.high_task)
  
  ::dra::Tasks* temp = high_task_;
  high_task_ = nullptr;
  return temp;
}
inline ::dra::Tasks* Corpus::_internal_mutable_high_task() {
  
  if (high_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaNoVirtual());
    high_task_ = p;
  }
  return high_task_;
}
inline ::dra::Tasks* Corpus::mutable_high_task() {
  // @@protoc_insertion_point(field_mutable:dra.Corpus.high_task)
  return _internal_mutable_high_task();
}
inline void Corpus::set_allocated_high_task(::dra::Tasks* high_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(high_task_);
  }
  if (high_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      high_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, high_task, submessage_arena);
    }
    
  } else {
    
  }
  high_task_ = high_task;
  // @@protoc_insertion_point(field_set_allocated:dra.Corpus.high_task)
}

// .dra.Tasks boot_task = 9;
inline bool Corpus::_internal_has_boot_task() const {
  return this != internal_default_instance() && boot_task_ != nullptr;
}
inline bool Corpus::has_boot_task() const {
  return _internal_has_boot_task();
}
inline const ::dra::Tasks& Corpus::_internal_boot_task() const {
  const ::dra::Tasks* p = boot_task_;
  return p != nullptr ? *p : *reinterpret_cast<const ::dra::Tasks*>(
      &::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& Corpus::boot_task() const {
  // @@protoc_insertion_point(field_get:dra.Corpus.boot_task)
  return _internal_boot_task();
}
inline ::dra::Tasks* Corpus::release_boot_task() {
  // @@protoc_insertion_point(field_release:dra.Corpus.boot_task)
  
  ::dra::Tasks* temp = boot_task_;
  boot_task_ = nullptr;
  return temp;
}
inline ::dra::Tasks* Corpus::_internal_mutable_boot_task() {
  
  if (boot_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaNoVirtual());
    boot_task_ = p;
  }
  return boot_task_;
}
inline ::dra::Tasks* Corpus::mutable_boot_task() {
  // @@protoc_insertion_point(field_mutable:dra.Corpus.boot_task)
  return _internal_mutable_boot_task();
}
inline void Corpus::set_allocated_boot_task(::dra::Tasks* boot_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(boot_task_);
  }
  if (boot_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      boot_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boot_task, submessage_arena);
    }
    
  } else {
    
  }
  boot_task_ = boot_task;
  // @@protoc_insertion_point(field_set_allocated:dra.Corpus.boot_task)
}

// map<string, .dra.Input> new_input = 11;
inline int Corpus::_internal_new_input_size() const {
  return new_input_.size();
}
inline int Corpus::new_input_size() const {
  return _internal_new_input_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
Corpus::_internal_new_input() const {
  return new_input_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
Corpus::new_input() const {
  // @@protoc_insertion_point(field_map:dra.Corpus.new_input)
  return _internal_new_input();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
Corpus::_internal_mutable_new_input() {
  return new_input_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
Corpus::mutable_new_input() {
  // @@protoc_insertion_point(field_mutable_map:dra.Corpus.new_input)
  return _internal_mutable_new_input();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dra

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_DependencyRPC_2eproto
