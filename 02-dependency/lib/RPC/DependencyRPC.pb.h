// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DependencyRPC.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_DependencyRPC_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_DependencyRPC_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "Base.pb.h"
#include "Task.pb.h"
#include "Input.pb.h"
#include "Statistic.pb.h"
#include "Dependency.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_DependencyRPC_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_DependencyRPC_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DependencyRPC_2eproto;
namespace dra {
class DataDependency;
struct DataDependencyDefaultTypeInternal;
extern DataDependencyDefaultTypeInternal _DataDependency_default_instance_;
class DataDependency_InputEntry_DoNotUse;
struct DataDependency_InputEntry_DoNotUseDefaultTypeInternal;
extern DataDependency_InputEntry_DoNotUseDefaultTypeInternal _DataDependency_InputEntry_DoNotUse_default_instance_;
class DataDependency_OtherInputEntry_DoNotUse;
struct DataDependency_OtherInputEntry_DoNotUseDefaultTypeInternal;
extern DataDependency_OtherInputEntry_DoNotUseDefaultTypeInternal _DataDependency_OtherInputEntry_DoNotUse_default_instance_;
class DataDependency_UncoveredAddressEntry_DoNotUse;
struct DataDependency_UncoveredAddressEntry_DoNotUseDefaultTypeInternal;
extern DataDependency_UncoveredAddressEntry_DoNotUseDefaultTypeInternal _DataDependency_UncoveredAddressEntry_DoNotUse_default_instance_;
class DataDependency_WriteAddressEntry_DoNotUse;
struct DataDependency_WriteAddressEntry_DoNotUseDefaultTypeInternal;
extern DataDependency_WriteAddressEntry_DoNotUseDefaultTypeInternal _DataDependency_WriteAddressEntry_DoNotUse_default_instance_;
class DataResult;
struct DataResultDefaultTypeInternal;
extern DataResultDefaultTypeInternal _DataResult_default_instance_;
class DataResult_CoveredAddressEntry_DoNotUse;
struct DataResult_CoveredAddressEntry_DoNotUseDefaultTypeInternal;
extern DataResult_CoveredAddressEntry_DoNotUseDefaultTypeInternal _DataResult_CoveredAddressEntry_DoNotUse_default_instance_;
class DataResult_FileOperationsEntry_DoNotUse;
struct DataResult_FileOperationsEntry_DoNotUseDefaultTypeInternal;
extern DataResult_FileOperationsEntry_DoNotUseDefaultTypeInternal _DataResult_FileOperationsEntry_DoNotUse_default_instance_;
class DataRunTime;
struct DataRunTimeDefaultTypeInternal;
extern DataRunTimeDefaultTypeInternal _DataRunTime_default_instance_;
}  // namespace dra
PROTOBUF_NAMESPACE_OPEN
template<> ::dra::DataDependency* Arena::CreateMaybeMessage<::dra::DataDependency>(Arena*);
template<> ::dra::DataDependency_InputEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::DataDependency_InputEntry_DoNotUse>(Arena*);
template<> ::dra::DataDependency_OtherInputEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::DataDependency_OtherInputEntry_DoNotUse>(Arena*);
template<> ::dra::DataDependency_UncoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::DataDependency_UncoveredAddressEntry_DoNotUse>(Arena*);
template<> ::dra::DataDependency_WriteAddressEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::DataDependency_WriteAddressEntry_DoNotUse>(Arena*);
template<> ::dra::DataResult* Arena::CreateMaybeMessage<::dra::DataResult>(Arena*);
template<> ::dra::DataResult_CoveredAddressEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::DataResult_CoveredAddressEntry_DoNotUse>(Arena*);
template<> ::dra::DataResult_FileOperationsEntry_DoNotUse* Arena::CreateMaybeMessage<::dra::DataResult_FileOperationsEntry_DoNotUse>(Arena*);
template<> ::dra::DataRunTime* Arena::CreateMaybeMessage<::dra::DataRunTime>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dra {

// ===================================================================

class DataDependency_InputEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_InputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_InputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  DataDependency_InputEntry_DoNotUse();
  explicit constexpr DataDependency_InputEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit DataDependency_InputEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataDependency_InputEntry_DoNotUse& other);
  static const DataDependency_InputEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataDependency_InputEntry_DoNotUse*>(&_DataDependency_InputEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "dra.DataDependency.InputEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class DataDependency_UncoveredAddressEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_UncoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_UncoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  DataDependency_UncoveredAddressEntry_DoNotUse();
  explicit constexpr DataDependency_UncoveredAddressEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit DataDependency_UncoveredAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataDependency_UncoveredAddressEntry_DoNotUse& other);
  static const DataDependency_UncoveredAddressEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataDependency_UncoveredAddressEntry_DoNotUse*>(&_DataDependency_UncoveredAddressEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class DataDependency_WriteAddressEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_WriteAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_WriteAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  DataDependency_WriteAddressEntry_DoNotUse();
  explicit constexpr DataDependency_WriteAddressEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit DataDependency_WriteAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataDependency_WriteAddressEntry_DoNotUse& other);
  static const DataDependency_WriteAddressEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataDependency_WriteAddressEntry_DoNotUse*>(&_DataDependency_WriteAddressEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class DataDependency_OtherInputEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_OtherInputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataDependency_OtherInputEntry_DoNotUse, 
    std::string, ::dra::Input,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  DataDependency_OtherInputEntry_DoNotUse();
  explicit constexpr DataDependency_OtherInputEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit DataDependency_OtherInputEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataDependency_OtherInputEntry_DoNotUse& other);
  static const DataDependency_OtherInputEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataDependency_OtherInputEntry_DoNotUse*>(&_DataDependency_OtherInputEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "dra.DataDependency.OtherInputEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class DataDependency final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dra.DataDependency) */ {
 public:
  inline DataDependency() : DataDependency(nullptr) {}
  ~DataDependency() override;
  explicit constexpr DataDependency(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataDependency(const DataDependency& from);
  DataDependency(DataDependency&& from) noexcept
    : DataDependency() {
    *this = ::std::move(from);
  }

  inline DataDependency& operator=(const DataDependency& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataDependency& operator=(DataDependency&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataDependency& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataDependency* internal_default_instance() {
    return reinterpret_cast<const DataDependency*>(
               &_DataDependency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DataDependency& a, DataDependency& b) {
    a.Swap(&b);
  }
  inline void Swap(DataDependency* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataDependency* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataDependency* New() const final {
    return new DataDependency();
  }

  DataDependency* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataDependency>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataDependency& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DataDependency& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataDependency* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dra.DataDependency";
  }
  protected:
  explicit DataDependency(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kInputFieldNumber = 1,
    kUncoveredAddressFieldNumber = 4,
    kWriteAddressFieldNumber = 5,
    kOtherInputFieldNumber = 11,
  };
  // map<string, .dra.Input> input = 1;
  int input_size() const;
  private:
  int _internal_input_size() const;
  public:
  void clear_input();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      _internal_input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      _internal_mutable_input();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      mutable_input();

  // map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
  int uncovered_address_size() const;
  private:
  int _internal_uncovered_address_size() const;
  public:
  void clear_uncovered_address();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      _internal_uncovered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      _internal_mutable_uncovered_address();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      uncovered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      mutable_uncovered_address();

  // map<uint32, .dra.WriteAddress> write_address = 5;
  int write_address_size() const;
  private:
  int _internal_write_address_size() const;
  public:
  void clear_write_address();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
      _internal_write_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
      _internal_mutable_write_address();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
      write_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
      mutable_write_address();

  // map<string, .dra.Input> other_input = 11;
  int other_input_size() const;
  private:
  int _internal_other_input_size() const;
  public:
  void clear_other_input();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      _internal_other_input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      _internal_mutable_other_input();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
      other_input() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
      mutable_other_input();

  // @@protoc_insertion_point(class_scope:dra.DataDependency)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataDependency_InputEntry_DoNotUse,
      std::string, ::dra::Input,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> input_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataDependency_UncoveredAddressEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> uncovered_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataDependency_WriteAddressEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> write_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataDependency_OtherInputEntry_DoNotUse,
      std::string, ::dra::Input,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> other_input_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_DependencyRPC_2eproto;
};
// -------------------------------------------------------------------

class DataResult_CoveredAddressEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataResult_CoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataResult_CoveredAddressEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  DataResult_CoveredAddressEntry_DoNotUse();
  explicit constexpr DataResult_CoveredAddressEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit DataResult_CoveredAddressEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataResult_CoveredAddressEntry_DoNotUse& other);
  static const DataResult_CoveredAddressEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataResult_CoveredAddressEntry_DoNotUse*>(&_DataResult_CoveredAddressEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class DataResult_FileOperationsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataResult_FileOperationsEntry_DoNotUse, 
    std::string, ::dra::FileOperations,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<DataResult_FileOperationsEntry_DoNotUse, 
    std::string, ::dra::FileOperations,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  DataResult_FileOperationsEntry_DoNotUse();
  explicit constexpr DataResult_FileOperationsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit DataResult_FileOperationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const DataResult_FileOperationsEntry_DoNotUse& other);
  static const DataResult_FileOperationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DataResult_FileOperationsEntry_DoNotUse*>(&_DataResult_FileOperationsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "dra.DataResult.FileOperationsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class DataResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dra.DataResult) */ {
 public:
  inline DataResult() : DataResult(nullptr) {}
  ~DataResult() override;
  explicit constexpr DataResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataResult(const DataResult& from);
  DataResult(DataResult&& from) noexcept
    : DataResult() {
    *this = ::std::move(from);
  }

  inline DataResult& operator=(const DataResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataResult& operator=(DataResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataResult* internal_default_instance() {
    return reinterpret_cast<const DataResult*>(
               &_DataResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DataResult& a, DataResult& b) {
    a.Swap(&b);
  }
  inline void Swap(DataResult* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataResult* New() const final {
    return new DataResult();
  }

  DataResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DataResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dra.DataResult";
  }
  protected:
  explicit DataResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kCoveredAddressFieldNumber = 2,
    kFileOperationsFieldNumber = 6,
  };
  // map<uint32, .dra.UncoveredAddress> covered_address = 2;
  int covered_address_size() const;
  private:
  int _internal_covered_address_size() const;
  public:
  void clear_covered_address();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      _internal_covered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      _internal_mutable_covered_address();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
      covered_address() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
      mutable_covered_address();

  // map<string, .dra.FileOperations> file_operations = 6;
  int file_operations_size() const;
  private:
  int _internal_file_operations_size() const;
  public:
  void clear_file_operations();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
      _internal_file_operations() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
      _internal_mutable_file_operations();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
      file_operations() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
      mutable_file_operations();

  // @@protoc_insertion_point(class_scope:dra.DataResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataResult_CoveredAddressEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> covered_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      DataResult_FileOperationsEntry_DoNotUse,
      std::string, ::dra::FileOperations,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> file_operations_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_DependencyRPC_2eproto;
};
// -------------------------------------------------------------------

class DataRunTime final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dra.DataRunTime) */ {
 public:
  inline DataRunTime() : DataRunTime(nullptr) {}
  ~DataRunTime() override;
  explicit constexpr DataRunTime(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataRunTime(const DataRunTime& from);
  DataRunTime(DataRunTime&& from) noexcept
    : DataRunTime() {
    *this = ::std::move(from);
  }

  inline DataRunTime& operator=(const DataRunTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataRunTime& operator=(DataRunTime&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataRunTime& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataRunTime* internal_default_instance() {
    return reinterpret_cast<const DataRunTime*>(
               &_DataRunTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DataRunTime& a, DataRunTime& b) {
    a.Swap(&b);
  }
  inline void Swap(DataRunTime* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataRunTime* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataRunTime* New() const final {
    return new DataRunTime();
  }

  DataRunTime* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataRunTime>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataRunTime& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DataRunTime& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRunTime* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dra.DataRunTime";
  }
  protected:
  explicit DataRunTime(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTasksFieldNumber = 11,
    kReturnFieldNumber = 12,
    kHighTaskFieldNumber = 13,
    kBootTaskFieldNumber = 20,
    kReturnBootFieldNumber = 21,
  };
  // .dra.Tasks tasks = 11;
  bool has_tasks() const;
  private:
  bool _internal_has_tasks() const;
  public:
  void clear_tasks();
  const ::dra::Tasks& tasks() const;
  PROTOBUF_MUST_USE_RESULT ::dra::Tasks* release_tasks();
  ::dra::Tasks* mutable_tasks();
  void set_allocated_tasks(::dra::Tasks* tasks);
  private:
  const ::dra::Tasks& _internal_tasks() const;
  ::dra::Tasks* _internal_mutable_tasks();
  public:
  void unsafe_arena_set_allocated_tasks(
      ::dra::Tasks* tasks);
  ::dra::Tasks* unsafe_arena_release_tasks();

  // .dra.Tasks return = 12;
  bool has_return_() const;
  private:
  bool _internal_has_return_() const;
  public:
  void clear_return_();
  const ::dra::Tasks& return_() const;
  PROTOBUF_MUST_USE_RESULT ::dra::Tasks* release_return_();
  ::dra::Tasks* mutable_return_();
  void set_allocated_return_(::dra::Tasks* return_);
  private:
  const ::dra::Tasks& _internal_return_() const;
  ::dra::Tasks* _internal_mutable_return_();
  public:
  void unsafe_arena_set_allocated_return_(
      ::dra::Tasks* return_);
  ::dra::Tasks* unsafe_arena_release_return_();

  // .dra.Tasks high_task = 13;
  bool has_high_task() const;
  private:
  bool _internal_has_high_task() const;
  public:
  void clear_high_task();
  const ::dra::Tasks& high_task() const;
  PROTOBUF_MUST_USE_RESULT ::dra::Tasks* release_high_task();
  ::dra::Tasks* mutable_high_task();
  void set_allocated_high_task(::dra::Tasks* high_task);
  private:
  const ::dra::Tasks& _internal_high_task() const;
  ::dra::Tasks* _internal_mutable_high_task();
  public:
  void unsafe_arena_set_allocated_high_task(
      ::dra::Tasks* high_task);
  ::dra::Tasks* unsafe_arena_release_high_task();

  // .dra.Tasks boot_task = 20;
  bool has_boot_task() const;
  private:
  bool _internal_has_boot_task() const;
  public:
  void clear_boot_task();
  const ::dra::Tasks& boot_task() const;
  PROTOBUF_MUST_USE_RESULT ::dra::Tasks* release_boot_task();
  ::dra::Tasks* mutable_boot_task();
  void set_allocated_boot_task(::dra::Tasks* boot_task);
  private:
  const ::dra::Tasks& _internal_boot_task() const;
  ::dra::Tasks* _internal_mutable_boot_task();
  public:
  void unsafe_arena_set_allocated_boot_task(
      ::dra::Tasks* boot_task);
  ::dra::Tasks* unsafe_arena_release_boot_task();

  // .dra.Tasks return_boot = 21;
  bool has_return_boot() const;
  private:
  bool _internal_has_return_boot() const;
  public:
  void clear_return_boot();
  const ::dra::Tasks& return_boot() const;
  PROTOBUF_MUST_USE_RESULT ::dra::Tasks* release_return_boot();
  ::dra::Tasks* mutable_return_boot();
  void set_allocated_return_boot(::dra::Tasks* return_boot);
  private:
  const ::dra::Tasks& _internal_return_boot() const;
  ::dra::Tasks* _internal_mutable_return_boot();
  public:
  void unsafe_arena_set_allocated_return_boot(
      ::dra::Tasks* return_boot);
  ::dra::Tasks* unsafe_arena_release_return_boot();

  // @@protoc_insertion_point(class_scope:dra.DataRunTime)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::dra::Tasks* tasks_;
  ::dra::Tasks* return__;
  ::dra::Tasks* high_task_;
  ::dra::Tasks* boot_task_;
  ::dra::Tasks* return_boot_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_DependencyRPC_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DataDependency

// map<string, .dra.Input> input = 1;
inline int DataDependency::_internal_input_size() const {
  return input_.size();
}
inline int DataDependency::input_size() const {
  return _internal_input_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
DataDependency::_internal_input() const {
  return input_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
DataDependency::input() const {
  // @@protoc_insertion_point(field_map:dra.DataDependency.input)
  return _internal_input();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
DataDependency::_internal_mutable_input() {
  return input_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
DataDependency::mutable_input() {
  // @@protoc_insertion_point(field_mutable_map:dra.DataDependency.input)
  return _internal_mutable_input();
}

// map<uint32, .dra.UncoveredAddress> uncovered_address = 4;
inline int DataDependency::_internal_uncovered_address_size() const {
  return uncovered_address_.size();
}
inline int DataDependency::uncovered_address_size() const {
  return _internal_uncovered_address_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
DataDependency::_internal_uncovered_address() const {
  return uncovered_address_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
DataDependency::uncovered_address() const {
  // @@protoc_insertion_point(field_map:dra.DataDependency.uncovered_address)
  return _internal_uncovered_address();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
DataDependency::_internal_mutable_uncovered_address() {
  return uncovered_address_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
DataDependency::mutable_uncovered_address() {
  // @@protoc_insertion_point(field_mutable_map:dra.DataDependency.uncovered_address)
  return _internal_mutable_uncovered_address();
}

// map<uint32, .dra.WriteAddress> write_address = 5;
inline int DataDependency::_internal_write_address_size() const {
  return write_address_.size();
}
inline int DataDependency::write_address_size() const {
  return _internal_write_address_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
DataDependency::_internal_write_address() const {
  return write_address_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >&
DataDependency::write_address() const {
  // @@protoc_insertion_point(field_map:dra.DataDependency.write_address)
  return _internal_write_address();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
DataDependency::_internal_mutable_write_address() {
  return write_address_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::WriteAddress >*
DataDependency::mutable_write_address() {
  // @@protoc_insertion_point(field_mutable_map:dra.DataDependency.write_address)
  return _internal_mutable_write_address();
}

// map<string, .dra.Input> other_input = 11;
inline int DataDependency::_internal_other_input_size() const {
  return other_input_.size();
}
inline int DataDependency::other_input_size() const {
  return _internal_other_input_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
DataDependency::_internal_other_input() const {
  return other_input_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >&
DataDependency::other_input() const {
  // @@protoc_insertion_point(field_map:dra.DataDependency.other_input)
  return _internal_other_input();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
DataDependency::_internal_mutable_other_input() {
  return other_input_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::Input >*
DataDependency::mutable_other_input() {
  // @@protoc_insertion_point(field_mutable_map:dra.DataDependency.other_input)
  return _internal_mutable_other_input();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DataResult

// map<uint32, .dra.UncoveredAddress> covered_address = 2;
inline int DataResult::_internal_covered_address_size() const {
  return covered_address_.size();
}
inline int DataResult::covered_address_size() const {
  return _internal_covered_address_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
DataResult::_internal_covered_address() const {
  return covered_address_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >&
DataResult::covered_address() const {
  // @@protoc_insertion_point(field_map:dra.DataResult.covered_address)
  return _internal_covered_address();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
DataResult::_internal_mutable_covered_address() {
  return covered_address_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::dra::UncoveredAddress >*
DataResult::mutable_covered_address() {
  // @@protoc_insertion_point(field_mutable_map:dra.DataResult.covered_address)
  return _internal_mutable_covered_address();
}

// map<string, .dra.FileOperations> file_operations = 6;
inline int DataResult::_internal_file_operations_size() const {
  return file_operations_.size();
}
inline int DataResult::file_operations_size() const {
  return _internal_file_operations_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
DataResult::_internal_file_operations() const {
  return file_operations_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >&
DataResult::file_operations() const {
  // @@protoc_insertion_point(field_map:dra.DataResult.file_operations)
  return _internal_file_operations();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
DataResult::_internal_mutable_file_operations() {
  return file_operations_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::dra::FileOperations >*
DataResult::mutable_file_operations() {
  // @@protoc_insertion_point(field_mutable_map:dra.DataResult.file_operations)
  return _internal_mutable_file_operations();
}

// -------------------------------------------------------------------

// DataRunTime

// .dra.Tasks tasks = 11;
inline bool DataRunTime::_internal_has_tasks() const {
  return this != internal_default_instance() && tasks_ != nullptr;
}
inline bool DataRunTime::has_tasks() const {
  return _internal_has_tasks();
}
inline const ::dra::Tasks& DataRunTime::_internal_tasks() const {
  const ::dra::Tasks* p = tasks_;
  return p != nullptr ? *p : reinterpret_cast<const ::dra::Tasks&>(
      ::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& DataRunTime::tasks() const {
  // @@protoc_insertion_point(field_get:dra.DataRunTime.tasks)
  return _internal_tasks();
}
inline void DataRunTime::unsafe_arena_set_allocated_tasks(
    ::dra::Tasks* tasks) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tasks_);
  }
  tasks_ = tasks;
  if (tasks) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dra.DataRunTime.tasks)
}
inline ::dra::Tasks* DataRunTime::release_tasks() {
  
  ::dra::Tasks* temp = tasks_;
  tasks_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dra::Tasks* DataRunTime::unsafe_arena_release_tasks() {
  // @@protoc_insertion_point(field_release:dra.DataRunTime.tasks)
  
  ::dra::Tasks* temp = tasks_;
  tasks_ = nullptr;
  return temp;
}
inline ::dra::Tasks* DataRunTime::_internal_mutable_tasks() {
  
  if (tasks_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaForAllocation());
    tasks_ = p;
  }
  return tasks_;
}
inline ::dra::Tasks* DataRunTime::mutable_tasks() {
  ::dra::Tasks* _msg = _internal_mutable_tasks();
  // @@protoc_insertion_point(field_mutable:dra.DataRunTime.tasks)
  return _msg;
}
inline void DataRunTime::set_allocated_tasks(::dra::Tasks* tasks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tasks_);
  }
  if (tasks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tasks));
    if (message_arena != submessage_arena) {
      tasks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tasks, submessage_arena);
    }
    
  } else {
    
  }
  tasks_ = tasks;
  // @@protoc_insertion_point(field_set_allocated:dra.DataRunTime.tasks)
}

// .dra.Tasks return = 12;
inline bool DataRunTime::_internal_has_return_() const {
  return this != internal_default_instance() && return__ != nullptr;
}
inline bool DataRunTime::has_return_() const {
  return _internal_has_return_();
}
inline const ::dra::Tasks& DataRunTime::_internal_return_() const {
  const ::dra::Tasks* p = return__;
  return p != nullptr ? *p : reinterpret_cast<const ::dra::Tasks&>(
      ::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& DataRunTime::return_() const {
  // @@protoc_insertion_point(field_get:dra.DataRunTime.return)
  return _internal_return_();
}
inline void DataRunTime::unsafe_arena_set_allocated_return_(
    ::dra::Tasks* return_) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  return__ = return_;
  if (return_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dra.DataRunTime.return)
}
inline ::dra::Tasks* DataRunTime::release_return_() {
  
  ::dra::Tasks* temp = return__;
  return__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dra::Tasks* DataRunTime::unsafe_arena_release_return_() {
  // @@protoc_insertion_point(field_release:dra.DataRunTime.return)
  
  ::dra::Tasks* temp = return__;
  return__ = nullptr;
  return temp;
}
inline ::dra::Tasks* DataRunTime::_internal_mutable_return_() {
  
  if (return__ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaForAllocation());
    return__ = p;
  }
  return return__;
}
inline ::dra::Tasks* DataRunTime::mutable_return_() {
  ::dra::Tasks* _msg = _internal_mutable_return_();
  // @@protoc_insertion_point(field_mutable:dra.DataRunTime.return)
  return _msg;
}
inline void DataRunTime::set_allocated_return_(::dra::Tasks* return_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  if (return_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_));
    if (message_arena != submessage_arena) {
      return_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_, submessage_arena);
    }
    
  } else {
    
  }
  return__ = return_;
  // @@protoc_insertion_point(field_set_allocated:dra.DataRunTime.return)
}

// .dra.Tasks high_task = 13;
inline bool DataRunTime::_internal_has_high_task() const {
  return this != internal_default_instance() && high_task_ != nullptr;
}
inline bool DataRunTime::has_high_task() const {
  return _internal_has_high_task();
}
inline const ::dra::Tasks& DataRunTime::_internal_high_task() const {
  const ::dra::Tasks* p = high_task_;
  return p != nullptr ? *p : reinterpret_cast<const ::dra::Tasks&>(
      ::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& DataRunTime::high_task() const {
  // @@protoc_insertion_point(field_get:dra.DataRunTime.high_task)
  return _internal_high_task();
}
inline void DataRunTime::unsafe_arena_set_allocated_high_task(
    ::dra::Tasks* high_task) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(high_task_);
  }
  high_task_ = high_task;
  if (high_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dra.DataRunTime.high_task)
}
inline ::dra::Tasks* DataRunTime::release_high_task() {
  
  ::dra::Tasks* temp = high_task_;
  high_task_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dra::Tasks* DataRunTime::unsafe_arena_release_high_task() {
  // @@protoc_insertion_point(field_release:dra.DataRunTime.high_task)
  
  ::dra::Tasks* temp = high_task_;
  high_task_ = nullptr;
  return temp;
}
inline ::dra::Tasks* DataRunTime::_internal_mutable_high_task() {
  
  if (high_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaForAllocation());
    high_task_ = p;
  }
  return high_task_;
}
inline ::dra::Tasks* DataRunTime::mutable_high_task() {
  ::dra::Tasks* _msg = _internal_mutable_high_task();
  // @@protoc_insertion_point(field_mutable:dra.DataRunTime.high_task)
  return _msg;
}
inline void DataRunTime::set_allocated_high_task(::dra::Tasks* high_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(high_task_);
  }
  if (high_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(high_task));
    if (message_arena != submessage_arena) {
      high_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, high_task, submessage_arena);
    }
    
  } else {
    
  }
  high_task_ = high_task;
  // @@protoc_insertion_point(field_set_allocated:dra.DataRunTime.high_task)
}

// .dra.Tasks boot_task = 20;
inline bool DataRunTime::_internal_has_boot_task() const {
  return this != internal_default_instance() && boot_task_ != nullptr;
}
inline bool DataRunTime::has_boot_task() const {
  return _internal_has_boot_task();
}
inline const ::dra::Tasks& DataRunTime::_internal_boot_task() const {
  const ::dra::Tasks* p = boot_task_;
  return p != nullptr ? *p : reinterpret_cast<const ::dra::Tasks&>(
      ::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& DataRunTime::boot_task() const {
  // @@protoc_insertion_point(field_get:dra.DataRunTime.boot_task)
  return _internal_boot_task();
}
inline void DataRunTime::unsafe_arena_set_allocated_boot_task(
    ::dra::Tasks* boot_task) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(boot_task_);
  }
  boot_task_ = boot_task;
  if (boot_task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dra.DataRunTime.boot_task)
}
inline ::dra::Tasks* DataRunTime::release_boot_task() {
  
  ::dra::Tasks* temp = boot_task_;
  boot_task_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dra::Tasks* DataRunTime::unsafe_arena_release_boot_task() {
  // @@protoc_insertion_point(field_release:dra.DataRunTime.boot_task)
  
  ::dra::Tasks* temp = boot_task_;
  boot_task_ = nullptr;
  return temp;
}
inline ::dra::Tasks* DataRunTime::_internal_mutable_boot_task() {
  
  if (boot_task_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaForAllocation());
    boot_task_ = p;
  }
  return boot_task_;
}
inline ::dra::Tasks* DataRunTime::mutable_boot_task() {
  ::dra::Tasks* _msg = _internal_mutable_boot_task();
  // @@protoc_insertion_point(field_mutable:dra.DataRunTime.boot_task)
  return _msg;
}
inline void DataRunTime::set_allocated_boot_task(::dra::Tasks* boot_task) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(boot_task_);
  }
  if (boot_task) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(boot_task));
    if (message_arena != submessage_arena) {
      boot_task = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boot_task, submessage_arena);
    }
    
  } else {
    
  }
  boot_task_ = boot_task;
  // @@protoc_insertion_point(field_set_allocated:dra.DataRunTime.boot_task)
}

// .dra.Tasks return_boot = 21;
inline bool DataRunTime::_internal_has_return_boot() const {
  return this != internal_default_instance() && return_boot_ != nullptr;
}
inline bool DataRunTime::has_return_boot() const {
  return _internal_has_return_boot();
}
inline const ::dra::Tasks& DataRunTime::_internal_return_boot() const {
  const ::dra::Tasks* p = return_boot_;
  return p != nullptr ? *p : reinterpret_cast<const ::dra::Tasks&>(
      ::dra::_Tasks_default_instance_);
}
inline const ::dra::Tasks& DataRunTime::return_boot() const {
  // @@protoc_insertion_point(field_get:dra.DataRunTime.return_boot)
  return _internal_return_boot();
}
inline void DataRunTime::unsafe_arena_set_allocated_return_boot(
    ::dra::Tasks* return_boot) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_boot_);
  }
  return_boot_ = return_boot;
  if (return_boot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dra.DataRunTime.return_boot)
}
inline ::dra::Tasks* DataRunTime::release_return_boot() {
  
  ::dra::Tasks* temp = return_boot_;
  return_boot_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dra::Tasks* DataRunTime::unsafe_arena_release_return_boot() {
  // @@protoc_insertion_point(field_release:dra.DataRunTime.return_boot)
  
  ::dra::Tasks* temp = return_boot_;
  return_boot_ = nullptr;
  return temp;
}
inline ::dra::Tasks* DataRunTime::_internal_mutable_return_boot() {
  
  if (return_boot_ == nullptr) {
    auto* p = CreateMaybeMessage<::dra::Tasks>(GetArenaForAllocation());
    return_boot_ = p;
  }
  return return_boot_;
}
inline ::dra::Tasks* DataRunTime::mutable_return_boot() {
  ::dra::Tasks* _msg = _internal_mutable_return_boot();
  // @@protoc_insertion_point(field_mutable:dra.DataRunTime.return_boot)
  return _msg;
}
inline void DataRunTime::set_allocated_return_boot(::dra::Tasks* return_boot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_boot_);
  }
  if (return_boot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_boot));
    if (message_arena != submessage_arena) {
      return_boot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_boot, submessage_arena);
    }
    
  } else {
    
  }
  return_boot_ = return_boot;
  // @@protoc_insertion_point(field_set_allocated:dra.DataRunTime.return_boot)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dra

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_DependencyRPC_2eproto
